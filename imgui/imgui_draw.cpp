// dear imgui, v1.83 WIP
// (drawing and font code)

/*

Index of this file:

// [SECTION] STB libraries implementation
// [SECTION] Style functions
// [SECTION] ImDrawList
// [SECTION] ImDrawListSplitter
// [SECTION] ImDrawData
// [SECTION] Helpers ShadeVertsXXX functions
// [SECTION] ImFontConfig
// [SECTION] ImFontAtlas
// [SECTION] ImFontAtlas glyph ranges helpers
// [SECTION] ImFontGlyphRangesBuilder
// [SECTION] ImFont
// [SECTION] ImGui Internal Render Helpers
// [SECTION] Decompression code
// [SECTION] Default font data (ProggyClean.ttf)

*/

#if defined(_MSC_VER) && !defined(_CRT_SECURE_NO_WARNINGS)
#define _CRT_SECURE_NO_WARNINGS
#endif

#include "imgui.h"
#ifndef IMGUI_DISABLE

#ifndef IMGUI_DEFINE_MATH_OPERATORS
#define IMGUI_DEFINE_MATH_OPERATORS
#endif

#include "imgui_internal.h"
#ifdef IMGUI_ENABLE_FREETYPE
#include "misc/freetype/imgui_freetype.h"
#endif

#include <stdio.h>      // vsnprintf, sscanf, printf
#if !defined(alloca)
#if defined(__GLIBC__) || defined(__sun) || defined(__APPLE__) || defined(__NEWLIB__)
#include <alloca.h>     // alloca (glibc uses <alloca.h>. Note that Cygwin may have _WIN32 defined, so the order matters here)
#elif defined(_WIN32)
#include <malloc.h>     // alloca
#if !defined(alloca)
#define alloca _alloca  // for clang with MS Codegen
#endif
#else
#include <stdlib.h>     // alloca
#endif
#endif

// Visual Studio warnings
#ifdef _MSC_VER
#pragma warning (disable: 4127)     // condition expression is constant
#pragma warning (disable: 4505)     // unreferenced local function has been removed (stb stuff)
#pragma warning (disable: 4996)     // 'This function or variable may be unsafe': strcpy, strdup, sprintf, vsnprintf, sscanf, fopen
#pragma warning (disable: 6255)     // [Static Analyzer] _alloca indicates failure by raising a stack overflow exception.  Consider using _malloca instead.
#pragma warning (disable: 26451)    // [Static Analyzer] Arithmetic overflow : Using operator 'xxx' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator 'xxx' to avoid overflow(io.2).
#pragma warning (disable: 26812)    // [Static Analyzer] The enum type 'xxx' is unscoped. Prefer 'enum class' over 'enum' (Enum.3). [MSVC Static Analyzer)
#endif

// Clang/GCC warnings with -Weverything
#if defined(__clang__)
#if __has_warning("-Wunknown-warning-option")
#pragma clang diagnostic ignored "-Wunknown-warning-option"         // warning: unknown warning group 'xxx'                      // not all warnings are known by all Clang versions and they tend to be rename-happy.. so ignoring warnings triggers new warnings on some configuration. Great!
#endif
#if __has_warning("-Walloca")
#pragma clang diagnostic ignored "-Walloca"                         // warning: use of function '__builtin_alloca' is discouraged
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"                // warning: unknown warning group 'xxx'
#pragma clang diagnostic ignored "-Wold-style-cast"                 // warning: use of old-style cast                            // yes, they are more terse.
#pragma clang diagnostic ignored "-Wfloat-equal"                    // warning: comparing floating point with == or != is unsafe // storing and comparing against same constants ok.
#pragma clang diagnostic ignored "-Wglobal-constructors"            // warning: declaration requires a global destructor         // similar to above, not sure what the exact difference is.
#pragma clang diagnostic ignored "-Wsign-conversion"                // warning: implicit conversion changes signedness
#pragma clang diagnostic ignored "-Wzero-as-null-pointer-constant"  // warning: zero as null pointer constant                    // some standard header variations use #define NULL 0
#pragma clang diagnostic ignored "-Wcomma"                          // warning: possible misuse of comma operator here
#pragma clang diagnostic ignored "-Wreserved-id-macro"              // warning: macro name is a reserved identifier
#pragma clang diagnostic ignored "-Wdouble-promotion"               // warning: implicit conversion from 'float' to 'double' when passing argument to function  // using printf() is a misery with this as C++ va_arg ellipsis changes float to double.
#pragma clang diagnostic ignored "-Wimplicit-int-float-conversion"  // warning: implicit conversion from 'xxx' to 'float' may lose precision
#elif defined(__GNUC__)
#pragma GCC diagnostic ignored "-Wpragmas"                  // warning: unknown option after '#pragma GCC diagnostic' kind
#pragma GCC diagnostic ignored "-Wunused-function"          // warning: 'xxxx' defined but not used
#pragma GCC diagnostic ignored "-Wdouble-promotion"         // warning: implicit conversion from 'float' to 'double' when passing argument to function
#pragma GCC diagnostic ignored "-Wconversion"               // warning: conversion to 'xxxx' from 'xxxx' may alter its value
#pragma GCC diagnostic ignored "-Wstack-protector"          // warning: stack protector not protecting local variables: variable length buffer
#pragma GCC diagnostic ignored "-Wclass-memaccess"          // [__GNUC__ >= 8] warning: 'memset/memcpy' clearing/writing an object of type 'xxxx' with no trivial copy-assignment; use assignment or value-initialization instead
#endif

//-------------------------------------------------------------------------
// [SECTION] STB libraries implementation
//-------------------------------------------------------------------------

// Compile time options:
//#define IMGUI_STB_NAMESPACE           ImStb
//#define IMGUI_STB_TRUETYPE_FILENAME   "my_folder/stb_truetype.h"
//#define IMGUI_STB_RECT_PACK_FILENAME  "my_folder/stb_rect_pack.h"
//#define IMGUI_DISABLE_STB_TRUETYPE_IMPLEMENTATION
//#define IMGUI_DISABLE_STB_RECT_PACK_IMPLEMENTATION

#ifdef IMGUI_STB_NAMESPACE
namespace IMGUI_STB_NAMESPACE
{
#endif

#ifdef _MSC_VER
#pragma warning (push)
#pragma warning (disable: 4456)                             // declaration of 'xx' hides previous local declaration
#pragma warning (disable: 6011)                             // (stb_rectpack) Dereferencing NULL pointer 'cur->next'.
#pragma warning (disable: 6385)                             // (stb_truetype) Reading invalid data from 'buffer':  the readable size is '_Old_3`kernel_width' bytes, but '3' bytes may be read.
#pragma warning (disable: 28182)                            // (stb_rectpack) Dereferencing NULL pointer. 'cur' contains the same NULL value as 'cur->next' did.
#endif

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-function"
#pragma clang diagnostic ignored "-Wmissing-prototypes"
#pragma clang diagnostic ignored "-Wimplicit-fallthrough"
#pragma clang diagnostic ignored "-Wcast-qual"              // warning: cast from 'const xxxx *' to 'xxx *' drops const qualifier
#endif

#if defined(__GNUC__)
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wtype-limits"              // warning: comparison is always true due to limited range of data type [-Wtype-limits]
#pragma GCC diagnostic ignored "-Wcast-qual"                // warning: cast from type 'const xxxx *' to type 'xxxx *' casts away qualifiers
#endif

#ifndef STB_RECT_PACK_IMPLEMENTATION                        // in case the user already have an implementation in the _same_ compilation unit (e.g. unity builds)
#ifndef IMGUI_DISABLE_STB_RECT_PACK_IMPLEMENTATION          // in case the user already have an implementation in another compilation unit
#define STBRP_STATIC
#define STBRP_ASSERT(x)     do { IM_ASSERT(x); } while (0)
#define STBRP_SORT          ImQsort
#define STB_RECT_PACK_IMPLEMENTATION
#endif
#ifdef IMGUI_STB_RECT_PACK_FILENAME
#include IMGUI_STB_RECT_PACK_FILENAME
#else
#include "imstb_rectpack.h"
#endif
#endif

#ifdef  IMGUI_ENABLE_STB_TRUETYPE
#ifndef STB_TRUETYPE_IMPLEMENTATION                         // in case the user already have an implementation in the _same_ compilation unit (e.g. unity builds)
#ifndef IMGUI_DISABLE_STB_TRUETYPE_IMPLEMENTATION           // in case the user already have an implementation in another compilation unit
#define STBTT_malloc(x,u)   ((void)(u), IM_ALLOC(x))
#define STBTT_free(x,u)     ((void)(u), IM_FREE(x))
#define STBTT_assert(x)     do { IM_ASSERT(x); } while(0)
#define STBTT_fmod(x,y)     ImFmod(x,y)
#define STBTT_sqrt(x)       ImSqrt(x)
#define STBTT_pow(x,y)      ImPow(x,y)
#define STBTT_fabs(x)       ImFabs(x)
#define STBTT_ifloor(x)     ((int)ImFloorSigned(x))
#define STBTT_iceil(x)      ((int)ImCeil(x))
#define STBTT_STATIC
#define STB_TRUETYPE_IMPLEMENTATION
#else
#define STBTT_DEF extern
#endif
#ifdef IMGUI_STB_TRUETYPE_FILENAME
#include IMGUI_STB_TRUETYPE_FILENAME
#else
#include "imstb_truetype.h"
#endif
#endif
#endif // IMGUI_ENABLE_STB_TRUETYPE

#if defined(__GNUC__)
#pragma GCC diagnostic pop
#endif

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#if defined(_MSC_VER)
#pragma warning (pop)
#endif

#ifdef IMGUI_STB_NAMESPACE
} // namespace ImStb
using namespace IMGUI_STB_NAMESPACE;
#endif

//-----------------------------------------------------------------------------
// [SECTION] Style functions
//-----------------------------------------------------------------------------

void ImGui::StyleColorsDark(ImGuiStyle* dst)
{
    ImGuiStyle* style = dst ? dst : &ImGui::GetStyle();
    ImVec4* colors = style->Colors;

    colors[ImGuiCol_Text] = ImVec4(1.00f, 1.00f, 1.00f, 1.00f);
    colors[ImGuiCol_TextDisabled] = ImVec4(0.50f, 0.50f, 0.50f, 1.00f);
    colors[ImGuiCol_WindowBg] = ImVec4(0.10f, 0.10f, 0.10f, 1.00f);
    colors[ImGuiCol_ChildBg] = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_PopupBg] = ImVec4(0.19f, 0.19f, 0.19f, 0.92f);
    colors[ImGuiCol_Border] = ImVec4(0.19f, 0.19f, 0.19f, 0.29f);
    colors[ImGuiCol_BorderShadow] = ImVec4(0.00f, 0.00f, 0.00f, 0.24f);
    colors[ImGuiCol_FrameBg] = ImVec4(0.05f, 0.05f, 0.05f, 0.54f);
    colors[ImGuiCol_FrameBgHovered] = ImVec4(0.19f, 0.19f, 0.19f, 0.54f);
    colors[ImGuiCol_FrameBgActive] = ImVec4(0.20f, 0.22f, 0.23f, 1.00f);
    colors[ImGuiCol_TitleBg] = ImVec4(0.00f, 0.00f, 0.00f, 1.00f);
    colors[ImGuiCol_TitleBgActive] = ImVec4(0.06f, 0.06f, 0.06f, 1.00f);
    colors[ImGuiCol_TitleBgCollapsed] = ImVec4(0.00f, 0.00f, 0.00f, 1.00f);
    colors[ImGuiCol_MenuBarBg] = ImVec4(0.14f, 0.14f, 0.14f, 1.00f);
    colors[ImGuiCol_ScrollbarBg] = ImVec4(0.05f, 0.05f, 0.05f, 0.54f);
    colors[ImGuiCol_ScrollbarGrab] = ImVec4(0.34f, 0.34f, 0.34f, 0.54f);
    colors[ImGuiCol_ScrollbarGrabHovered] = ImVec4(0.40f, 0.40f, 0.40f, 0.54f);
    colors[ImGuiCol_ScrollbarGrabActive] = ImVec4(0.56f, 0.56f, 0.56f, 0.54f);
    colors[ImGuiCol_CheckMark] = ImVec4(0.33f, 0.67f, 0.86f, 1.00f);
    colors[ImGuiCol_SliderGrab] = ImVec4(0.34f, 0.34f, 0.34f, 0.54f);
    colors[ImGuiCol_SliderGrabActive] = ImVec4(0.56f, 0.56f, 0.56f, 0.54f);
    colors[ImGuiCol_Button] = ImVec4(0.05f, 0.05f, 0.05f, 0.54f);
    colors[ImGuiCol_ButtonHovered] = ImVec4(0.19f, 0.19f, 0.19f, 0.54f);
    colors[ImGuiCol_ButtonActive] = ImVec4(0.20f, 0.22f, 0.23f, 1.00f);
    colors[ImGuiCol_Header] = ImVec4(0.00f, 0.00f, 0.00f, 0.52f);
    colors[ImGuiCol_HeaderHovered] = ImVec4(0.00f, 0.00f, 0.00f, 0.36f);
    colors[ImGuiCol_HeaderActive] = ImVec4(0.20f, 0.22f, 0.23f, 0.33f);
    colors[ImGuiCol_Separator] = ImVec4(0.28f, 0.28f, 0.28f, 0.29f);
    colors[ImGuiCol_SeparatorHovered] = ImVec4(0.44f, 0.44f, 0.44f, 0.29f);
    colors[ImGuiCol_SeparatorActive] = ImVec4(0.40f, 0.44f, 0.47f, 1.00f);
    colors[ImGuiCol_ResizeGrip] = ImVec4(0.28f, 0.28f, 0.28f, 0.29f);
    colors[ImGuiCol_ResizeGripHovered] = ImVec4(0.44f, 0.44f, 0.44f, 0.29f);
    colors[ImGuiCol_ResizeGripActive] = ImVec4(0.40f, 0.44f, 0.47f, 1.00f);
    colors[ImGuiCol_Tab] = ImVec4(0.00f, 0.00f, 0.00f, 0.52f);
    colors[ImGuiCol_TabHovered] = ImVec4(0.14f, 0.14f, 0.14f, 1.00f);
    colors[ImGuiCol_TabActive] = ImVec4(0.20f, 0.20f, 0.20f, 0.36f);
    colors[ImGuiCol_TabUnfocused] = ImVec4(0.00f, 0.00f, 0.00f, 0.52f);
    colors[ImGuiCol_TabUnfocusedActive] = ImVec4(0.14f, 0.14f, 0.14f, 1.00f);
    colors[ImGuiCol_DockingPreview] = ImVec4(0.33f, 0.67f, 0.86f, 1.00f);
    colors[ImGuiCol_DockingEmptyBg] = ImVec4(1.00f, 0.00f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotLines] = ImVec4(1.00f, 0.00f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotLinesHovered] = ImVec4(1.00f, 0.00f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotHistogram] = ImVec4(1.00f, 0.00f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotHistogramHovered] = ImVec4(1.00f, 0.00f, 0.00f, 1.00f);
    colors[ImGuiCol_TableHeaderBg] = ImVec4(0.00f, 0.00f, 0.00f, 0.52f);
    colors[ImGuiCol_TableBorderStrong] = ImVec4(0.00f, 0.00f, 0.00f, 0.52f);
    colors[ImGuiCol_TableBorderLight] = ImVec4(0.28f, 0.28f, 0.28f, 0.29f);
    colors[ImGuiCol_TableRowBg] = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_TableRowBgAlt] = ImVec4(1.00f, 1.00f, 1.00f, 0.06f);
    colors[ImGuiCol_TextSelectedBg] = ImVec4(0.20f, 0.22f, 0.23f, 1.00f);
    colors[ImGuiCol_DragDropTarget] = ImVec4(0.33f, 0.67f, 0.86f, 1.00f);
    colors[ImGuiCol_NavHighlight] = ImVec4(1.00f, 0.00f, 0.00f, 1.00f);
    colors[ImGuiCol_NavWindowingHighlight] = ImVec4(1.00f, 0.00f, 0.00f, 0.70f);
    colors[ImGuiCol_NavWindowingDimBg] = ImVec4(1.00f, 0.00f, 0.00f, 0.20f);
    colors[ImGuiCol_ModalWindowDimBg] = ImVec4(1.00f, 0.00f, 0.00f, 0.35f);
}

void ImGui::StyleColorsClassic(ImGuiStyle* dst)
{
    ImGuiStyle* style = dst ? dst : &ImGui::GetStyle();
    ImVec4* colors = style->Colors;

    colors[ImGuiCol_Text]                   = ImVec4(0.90f, 0.90f, 0.90f, 1.00f);
    colors[ImGuiCol_TextDisabled]           = ImVec4(0.60f, 0.60f, 0.60f, 1.00f);
    colors[ImGuiCol_WindowBg]               = ImVec4(0.00f, 0.00f, 0.00f, 0.85f);
    colors[ImGuiCol_ChildBg]                = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_PopupBg]                = ImVec4(0.11f, 0.11f, 0.14f, 0.92f);
    colors[ImGuiCol_Border]                 = ImVec4(0.50f, 0.50f, 0.50f, 0.50f);
    colors[ImGuiCol_BorderShadow]           = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_FrameBg]                = ImVec4(0.43f, 0.43f, 0.43f, 0.39f);
    colors[ImGuiCol_FrameBgHovered]         = ImVec4(0.47f, 0.47f, 0.69f, 0.40f);
    colors[ImGuiCol_FrameBgActive]          = ImVec4(0.42f, 0.41f, 0.64f, 0.69f);
    colors[ImGuiCol_TitleBg]                = ImVec4(0.27f, 0.27f, 0.54f, 0.83f);
    colors[ImGuiCol_TitleBgActive]          = ImVec4(0.32f, 0.32f, 0.63f, 0.87f);
    colors[ImGuiCol_TitleBgCollapsed]       = ImVec4(0.40f, 0.40f, 0.80f, 0.20f);
    colors[ImGuiCol_MenuBarBg]              = ImVec4(0.40f, 0.40f, 0.55f, 0.80f);
    colors[ImGuiCol_ScrollbarBg]            = ImVec4(0.20f, 0.25f, 0.30f, 0.60f);
    colors[ImGuiCol_ScrollbarGrab]          = ImVec4(0.40f, 0.40f, 0.80f, 0.30f);
    colors[ImGuiCol_ScrollbarGrabHovered]   = ImVec4(0.40f, 0.40f, 0.80f, 0.40f);
    colors[ImGuiCol_ScrollbarGrabActive]    = ImVec4(0.41f, 0.39f, 0.80f, 0.60f);
    colors[ImGuiCol_CheckMark]              = ImVec4(0.90f, 0.90f, 0.90f, 0.50f);
    colors[ImGuiCol_SliderGrab]             = ImVec4(1.00f, 1.00f, 1.00f, 0.30f);
    colors[ImGuiCol_SliderGrabActive]       = ImVec4(0.41f, 0.39f, 0.80f, 0.60f);
    colors[ImGuiCol_Button]                 = ImVec4(0.35f, 0.40f, 0.61f, 0.62f);
    colors[ImGuiCol_ButtonHovered]          = ImVec4(0.40f, 0.48f, 0.71f, 0.79f);
    colors[ImGuiCol_ButtonActive]           = ImVec4(0.46f, 0.54f, 0.80f, 1.00f);
    colors[ImGuiCol_Header]                 = ImVec4(0.40f, 0.40f, 0.90f, 0.45f);
    colors[ImGuiCol_HeaderHovered]          = ImVec4(0.45f, 0.45f, 0.90f, 0.80f);
    colors[ImGuiCol_HeaderActive]           = ImVec4(0.53f, 0.53f, 0.87f, 0.80f);
    colors[ImGuiCol_Separator]              = ImVec4(0.50f, 0.50f, 0.50f, 0.60f);
    colors[ImGuiCol_SeparatorHovered]       = ImVec4(0.60f, 0.60f, 0.70f, 1.00f);
    colors[ImGuiCol_SeparatorActive]        = ImVec4(0.70f, 0.70f, 0.90f, 1.00f);
    colors[ImGuiCol_ResizeGrip]             = ImVec4(1.00f, 1.00f, 1.00f, 0.10f);
    colors[ImGuiCol_ResizeGripHovered]      = ImVec4(0.78f, 0.82f, 1.00f, 0.60f);
    colors[ImGuiCol_ResizeGripActive]       = ImVec4(0.78f, 0.82f, 1.00f, 0.90f);
    colors[ImGuiCol_Tab]                    = ImLerp(colors[ImGuiCol_Header],       colors[ImGuiCol_TitleBgActive], 0.80f);
    colors[ImGuiCol_TabHovered]             = colors[ImGuiCol_HeaderHovered];
    colors[ImGuiCol_TabActive]              = ImLerp(colors[ImGuiCol_HeaderActive], colors[ImGuiCol_TitleBgActive], 0.60f);
    colors[ImGuiCol_TabUnfocused]           = ImLerp(colors[ImGuiCol_Tab],          colors[ImGuiCol_TitleBg], 0.80f);
    colors[ImGuiCol_TabUnfocusedActive]     = ImLerp(colors[ImGuiCol_TabActive],    colors[ImGuiCol_TitleBg], 0.40f);
    colors[ImGuiCol_DockingPreview]         = colors[ImGuiCol_Header] * ImVec4(1.0f, 1.0f, 1.0f, 0.7f);
    colors[ImGuiCol_DockingEmptyBg]         = ImVec4(0.20f, 0.20f, 0.20f, 1.00f);
    colors[ImGuiCol_PlotLines]              = ImVec4(1.00f, 1.00f, 1.00f, 1.00f);
    colors[ImGuiCol_PlotLinesHovered]       = ImVec4(0.90f, 0.70f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotHistogram]          = ImVec4(0.90f, 0.70f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotHistogramHovered]   = ImVec4(1.00f, 0.60f, 0.00f, 1.00f);
    colors[ImGuiCol_TableHeaderBg]          = ImVec4(0.27f, 0.27f, 0.38f, 1.00f);
    colors[ImGuiCol_TableBorderStrong]      = ImVec4(0.31f, 0.31f, 0.45f, 1.00f);   // Prefer using Alpha=1.0 here
    colors[ImGuiCol_TableBorderLight]       = ImVec4(0.26f, 0.26f, 0.28f, 1.00f);   // Prefer using Alpha=1.0 here
    colors[ImGuiCol_TableRowBg]             = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_TableRowBgAlt]          = ImVec4(1.00f, 1.00f, 1.00f, 0.07f);
    colors[ImGuiCol_TextSelectedBg]         = ImVec4(0.00f, 0.00f, 1.00f, 0.35f);
    colors[ImGuiCol_DragDropTarget]         = ImVec4(1.00f, 1.00f, 0.00f, 0.90f);
    colors[ImGuiCol_NavHighlight]           = colors[ImGuiCol_HeaderHovered];
    colors[ImGuiCol_NavWindowingHighlight]  = ImVec4(1.00f, 1.00f, 1.00f, 0.70f);
    colors[ImGuiCol_NavWindowingDimBg]      = ImVec4(0.80f, 0.80f, 0.80f, 0.20f);
    colors[ImGuiCol_ModalWindowDimBg]       = ImVec4(0.20f, 0.20f, 0.20f, 0.35f);
}

// Those light colors are better suited with a thicker font than the default one + FrameBorder
void ImGui::StyleColorsLight(ImGuiStyle* dst)
{
    ImGuiStyle* style = dst ? dst : &ImGui::GetStyle();
    ImVec4* colors = style->Colors;

    colors[ImGuiCol_Text]                   = ImVec4(0.00f, 0.00f, 0.00f, 1.00f);
    colors[ImGuiCol_TextDisabled]           = ImVec4(0.60f, 0.60f, 0.60f, 1.00f);
    colors[ImGuiCol_WindowBg]               = ImVec4(0.94f, 0.94f, 0.94f, 1.00f);
    colors[ImGuiCol_ChildBg]                = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_PopupBg]                = ImVec4(1.00f, 1.00f, 1.00f, 0.98f);
    colors[ImGuiCol_Border]                 = ImVec4(0.00f, 0.00f, 0.00f, 0.30f);
    colors[ImGuiCol_BorderShadow]           = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_FrameBg]                = ImVec4(1.00f, 1.00f, 1.00f, 1.00f);
    colors[ImGuiCol_FrameBgHovered]         = ImVec4(0.26f, 0.59f, 0.98f, 0.40f);
    colors[ImGuiCol_FrameBgActive]          = ImVec4(0.26f, 0.59f, 0.98f, 0.67f);
    colors[ImGuiCol_TitleBg]                = ImVec4(0.96f, 0.96f, 0.96f, 1.00f);
    colors[ImGuiCol_TitleBgActive]          = ImVec4(0.82f, 0.82f, 0.82f, 1.00f);
    colors[ImGuiCol_TitleBgCollapsed]       = ImVec4(1.00f, 1.00f, 1.00f, 0.51f);
    colors[ImGuiCol_MenuBarBg]              = ImVec4(0.86f, 0.86f, 0.86f, 1.00f);
    colors[ImGuiCol_ScrollbarBg]            = ImVec4(0.98f, 0.98f, 0.98f, 0.53f);
    colors[ImGuiCol_ScrollbarGrab]          = ImVec4(0.69f, 0.69f, 0.69f, 0.80f);
    colors[ImGuiCol_ScrollbarGrabHovered]   = ImVec4(0.49f, 0.49f, 0.49f, 0.80f);
    colors[ImGuiCol_ScrollbarGrabActive]    = ImVec4(0.49f, 0.49f, 0.49f, 1.00f);
    colors[ImGuiCol_CheckMark]              = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_SliderGrab]             = ImVec4(0.26f, 0.59f, 0.98f, 0.78f);
    colors[ImGuiCol_SliderGrabActive]       = ImVec4(0.46f, 0.54f, 0.80f, 0.60f);
    colors[ImGuiCol_Button]                 = ImVec4(0.26f, 0.59f, 0.98f, 0.40f);
    colors[ImGuiCol_ButtonHovered]          = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_ButtonActive]           = ImVec4(0.06f, 0.53f, 0.98f, 1.00f);
    colors[ImGuiCol_Header]                 = ImVec4(0.26f, 0.59f, 0.98f, 0.31f);
    colors[ImGuiCol_HeaderHovered]          = ImVec4(0.26f, 0.59f, 0.98f, 0.80f);
    colors[ImGuiCol_HeaderActive]           = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_Separator]              = ImVec4(0.39f, 0.39f, 0.39f, 0.62f);
    colors[ImGuiCol_SeparatorHovered]       = ImVec4(0.14f, 0.44f, 0.80f, 0.78f);
    colors[ImGuiCol_SeparatorActive]        = ImVec4(0.14f, 0.44f, 0.80f, 1.00f);
    colors[ImGuiCol_ResizeGrip]             = ImVec4(0.35f, 0.35f, 0.35f, 0.17f);
    colors[ImGuiCol_ResizeGripHovered]      = ImVec4(0.26f, 0.59f, 0.98f, 0.67f);
    colors[ImGuiCol_ResizeGripActive]       = ImVec4(0.26f, 0.59f, 0.98f, 0.95f);
    colors[ImGuiCol_Tab]                    = ImLerp(colors[ImGuiCol_Header],       colors[ImGuiCol_TitleBgActive], 0.90f);
    colors[ImGuiCol_TabHovered]             = colors[ImGuiCol_HeaderHovered];
    colors[ImGuiCol_TabActive]              = ImLerp(colors[ImGuiCol_HeaderActive], colors[ImGuiCol_TitleBgActive], 0.60f);
    colors[ImGuiCol_TabUnfocused]           = ImLerp(colors[ImGuiCol_Tab],          colors[ImGuiCol_TitleBg], 0.80f);
    colors[ImGuiCol_TabUnfocusedActive]     = ImLerp(colors[ImGuiCol_TabActive],    colors[ImGuiCol_TitleBg], 0.40f);
    colors[ImGuiCol_DockingPreview]         = colors[ImGuiCol_Header] * ImVec4(1.0f, 1.0f, 1.0f, 0.7f);
    colors[ImGuiCol_DockingEmptyBg]         = ImVec4(0.20f, 0.20f, 0.20f, 1.00f);
    colors[ImGuiCol_PlotLines]              = ImVec4(0.39f, 0.39f, 0.39f, 1.00f);
    colors[ImGuiCol_PlotLinesHovered]       = ImVec4(1.00f, 0.43f, 0.35f, 1.00f);
    colors[ImGuiCol_PlotHistogram]          = ImVec4(0.90f, 0.70f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotHistogramHovered]   = ImVec4(1.00f, 0.45f, 0.00f, 1.00f);
    colors[ImGuiCol_TableHeaderBg]          = ImVec4(0.78f, 0.87f, 0.98f, 1.00f);
    colors[ImGuiCol_TableBorderStrong]      = ImVec4(0.57f, 0.57f, 0.64f, 1.00f);   // Prefer using Alpha=1.0 here
    colors[ImGuiCol_TableBorderLight]       = ImVec4(0.68f, 0.68f, 0.74f, 1.00f);   // Prefer using Alpha=1.0 here
    colors[ImGuiCol_TableRowBg]             = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_TableRowBgAlt]          = ImVec4(0.30f, 0.30f, 0.30f, 0.09f);
    colors[ImGuiCol_TextSelectedBg]         = ImVec4(0.26f, 0.59f, 0.98f, 0.35f);
    colors[ImGuiCol_DragDropTarget]         = ImVec4(0.26f, 0.59f, 0.98f, 0.95f);
    colors[ImGuiCol_NavHighlight]           = colors[ImGuiCol_HeaderHovered];
    colors[ImGuiCol_NavWindowingHighlight]  = ImVec4(0.70f, 0.70f, 0.70f, 0.70f);
    colors[ImGuiCol_NavWindowingDimBg]      = ImVec4(0.20f, 0.20f, 0.20f, 0.20f);
    colors[ImGuiCol_ModalWindowDimBg]       = ImVec4(0.20f, 0.20f, 0.20f, 0.35f);
}

//-----------------------------------------------------------------------------
// [SECTION] ImDrawList
//-----------------------------------------------------------------------------

ImDrawListSharedData::ImDrawListSharedData()
{
    memset(this, 0, sizeof(*this));
    for (int i = 0; i < IM_ARRAYSIZE(ArcFastVtx); i++)
    {
        const float a = ((float)i * 2 * IM_PI) / (float)IM_ARRAYSIZE(ArcFastVtx);
        ArcFastVtx[i] = ImVec2(ImCos(a), ImSin(a));
    }
    ArcFastRadiusCutoff = IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC_R(IM_DRAWLIST_ARCFAST_SAMPLE_MAX, CircleSegmentMaxError);
}

void ImDrawListSharedData::SetCircleTessellationMaxError(float max_error)
{
    if (CircleSegmentMaxError == max_error)
        return;

    IM_ASSERT(max_error > 0.0f);
    CircleSegmentMaxError = max_error;
    for (int i = 0; i < IM_ARRAYSIZE(CircleSegmentCounts); i++)
    {
        const float radius = (float)i;
        CircleSegmentCounts[i] = (ImU8)((i > 0) ? IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC(radius, CircleSegmentMaxError) : 0);
    }
    ArcFastRadiusCutoff = IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC_R(IM_DRAWLIST_ARCFAST_SAMPLE_MAX, CircleSegmentMaxError);
}

// Initialize before use in a new frame. We always have a command ready in the buffer.
void ImDrawList::_ResetForNewFrame()
{
    // Verify that the ImDrawCmd fields we want to memcmp() are contiguous in memory.
    // (those should be IM_STATIC_ASSERT() in theory but with our pre C++11 setup the whole check doesn't compile with GCC)
    IM_ASSERT(IM_OFFSETOF(ImDrawCmd, ClipRect) == 0);
    IM_ASSERT(IM_OFFSETOF(ImDrawCmd, TextureId) == sizeof(ImVec4));
    IM_ASSERT(IM_OFFSETOF(ImDrawCmd, VtxOffset) == sizeof(ImVec4) + sizeof(ImTextureID));

    CmdBuffer.resize(0);
    IdxBuffer.resize(0);
    VtxBuffer.resize(0);
    Flags = _Data->InitialFlags;
    memset(&_CmdHeader, 0, sizeof(_CmdHeader));
    _VtxCurrentIdx = 0;
    _VtxWritePtr = NULL;
    _IdxWritePtr = NULL;
    _ClipRectStack.resize(0);
    _TextureIdStack.resize(0);
    _Path.resize(0);
    _Splitter.Clear();
    CmdBuffer.push_back(ImDrawCmd());
    _FringeScale = 1.0f;
}

void ImDrawList::_ClearFreeMemory()
{
    CmdBuffer.clear();
    IdxBuffer.clear();
    VtxBuffer.clear();
    Flags = ImDrawListFlags_None;
    _VtxCurrentIdx = 0;
    _VtxWritePtr = NULL;
    _IdxWritePtr = NULL;
    _ClipRectStack.clear();
    _TextureIdStack.clear();
    _Path.clear();
    _Splitter.ClearFreeMemory();
}

ImDrawList* ImDrawList::CloneOutput() const
{
    ImDrawList* dst = IM_NEW(ImDrawList(_Data));
    dst->CmdBuffer = CmdBuffer;
    dst->IdxBuffer = IdxBuffer;
    dst->VtxBuffer = VtxBuffer;
    dst->Flags = Flags;
    return dst;
}

void ImDrawList::AddDrawCmd()
{
    ImDrawCmd draw_cmd;
    draw_cmd.ClipRect = _CmdHeader.ClipRect;    // Same as calling ImDrawCmd_HeaderCopy()
    draw_cmd.TextureId = _CmdHeader.TextureId;
    draw_cmd.VtxOffset = _CmdHeader.VtxOffset;
    draw_cmd.IdxOffset = IdxBuffer.Size;

    IM_ASSERT(draw_cmd.ClipRect.x <= draw_cmd.ClipRect.z && draw_cmd.ClipRect.y <= draw_cmd.ClipRect.w);
    CmdBuffer.push_back(draw_cmd);
}

// Pop trailing draw command (used before merging or presenting to user)
// Note that this leaves the ImDrawList in a state unfit for further commands, as most code assume that CmdBuffer.Size > 0 && CmdBuffer.back().UserCallback == NULL
void ImDrawList::_PopUnusedDrawCmd()
{
    if (CmdBuffer.Size == 0)
        return;
    ImDrawCmd* curr_cmd = &CmdBuffer.Data[CmdBuffer.Size - 1];
    if (curr_cmd->ElemCount == 0 && curr_cmd->UserCallback == NULL)
        CmdBuffer.pop_back();
}

void ImDrawList::AddCallback(ImDrawCallback callback, void* callback_data)
{
    ImDrawCmd* curr_cmd = &CmdBuffer.Data[CmdBuffer.Size - 1];
    IM_ASSERT(curr_cmd->UserCallback == NULL);
    if (curr_cmd->ElemCount != 0)
    {
        AddDrawCmd();
        curr_cmd = &CmdBuffer.Data[CmdBuffer.Size - 1];
    }
    curr_cmd->UserCallback = callback;
    curr_cmd->UserCallbackData = callback_data;

    AddDrawCmd(); // Force a new command after us (see comment below)
}

// Compare ClipRect, TextureId and VtxOffset with a single memcmp()
#define ImDrawCmd_HeaderSize                        (IM_OFFSETOF(ImDrawCmd, VtxOffset) + sizeof(unsigned int))
#define ImDrawCmd_HeaderCompare(CMD_LHS, CMD_RHS)   (memcmp(CMD_LHS, CMD_RHS, ImDrawCmd_HeaderSize))    // Compare ClipRect, TextureId, VtxOffset
#define ImDrawCmd_HeaderCopy(CMD_DST, CMD_SRC)      (memcpy(CMD_DST, CMD_SRC, ImDrawCmd_HeaderSize))    // Copy ClipRect, TextureId, VtxOffset

// Our scheme may appears a bit unusual, basically we want the most-common calls AddLine AddRect etc. to not have to perform any check so we always have a command ready in the stack.
// The cost of figuring out if a new command has to be added or if we can merge is paid in those Update** functions only.
void ImDrawList::_OnChangedClipRect()
{
    // If current command is used with different settings we need to add a new command
    ImDrawCmd* curr_cmd = &CmdBuffer.Data[CmdBuffer.Size - 1];
    if (curr_cmd->ElemCount != 0 && memcmp(&curr_cmd->ClipRect, &_CmdHeader.ClipRect, sizeof(ImVec4)) != 0)
    {
        AddDrawCmd();
        return;
    }
    IM_ASSERT(curr_cmd->UserCallback == NULL);

    // Try to merge with previous command if it matches, else use current command
    ImDrawCmd* prev_cmd = curr_cmd - 1;
    if (curr_cmd->ElemCount == 0 && CmdBuffer.Size > 1 && ImDrawCmd_HeaderCompare(&_CmdHeader, prev_cmd) == 0 && prev_cmd->UserCallback == NULL)
    {
        CmdBuffer.pop_back();
        return;
    }

    curr_cmd->ClipRect = _CmdHeader.ClipRect;
}

void ImDrawList::_OnChangedTextureID()
{
    // If current command is used with different settings we need to add a new command
    ImDrawCmd* curr_cmd = &CmdBuffer.Data[CmdBuffer.Size - 1];
    if (curr_cmd->ElemCount != 0 && curr_cmd->TextureId != _CmdHeader.TextureId)
    {
        AddDrawCmd();
        return;
    }
    IM_ASSERT(curr_cmd->UserCallback == NULL);

    // Try to merge with previous command if it matches, else use current command
    ImDrawCmd* prev_cmd = curr_cmd - 1;
    if (curr_cmd->ElemCount == 0 && CmdBuffer.Size > 1 && ImDrawCmd_HeaderCompare(&_CmdHeader, prev_cmd) == 0 && prev_cmd->UserCallback == NULL)
    {
        CmdBuffer.pop_back();
        return;
    }

    curr_cmd->TextureId = _CmdHeader.TextureId;
}

void ImDrawList::_OnChangedVtxOffset()
{
    // We don't need to compare curr_cmd->VtxOffset != _CmdHeader.VtxOffset because we know it'll be different at the time we call this.
    _VtxCurrentIdx = 0;
    ImDrawCmd* curr_cmd = &CmdBuffer.Data[CmdBuffer.Size - 1];
    //IM_ASSERT(curr_cmd->VtxOffset != _CmdHeader.VtxOffset); // See #3349
    if (curr_cmd->ElemCount != 0)
    {
        AddDrawCmd();
        return;
    }
    IM_ASSERT(curr_cmd->UserCallback == NULL);
    curr_cmd->VtxOffset = _CmdHeader.VtxOffset;
}

int ImDrawList::_CalcCircleAutoSegmentCount(float radius) const
{
    // Automatic segment count
    const int radius_idx = (int)(radius + 0.999999f); // ceil to never reduce accuracy
    if (radius_idx < IM_ARRAYSIZE(_Data->CircleSegmentCounts))
        return _Data->CircleSegmentCounts[radius_idx]; // Use cached value
    else
        return IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC(radius, _Data->CircleSegmentMaxError);
}

// Render-level scissoring. This is passed down to your render function but not used for CPU-side coarse clipping. Prefer using higher-level ImGui::PushClipRect() to affect logic (hit-testing and widget culling)
void ImDrawList::PushClipRect(ImVec2 cr_min, ImVec2 cr_max, bool intersect_with_current_clip_rect)
{
    ImVec4 cr(cr_min.x, cr_min.y, cr_max.x, cr_max.y);
    if (intersect_with_current_clip_rect)
    {
        ImVec4 current = _CmdHeader.ClipRect;
        if (cr.x < current.x) cr.x = current.x;
        if (cr.y < current.y) cr.y = current.y;
        if (cr.z > current.z) cr.z = current.z;
        if (cr.w > current.w) cr.w = current.w;
    }
    cr.z = ImMax(cr.x, cr.z);
    cr.w = ImMax(cr.y, cr.w);

    _ClipRectStack.push_back(cr);
    _CmdHeader.ClipRect = cr;
    _OnChangedClipRect();
}

void ImDrawList::PushClipRectFullScreen()
{
    PushClipRect(ImVec2(_Data->ClipRectFullscreen.x, _Data->ClipRectFullscreen.y), ImVec2(_Data->ClipRectFullscreen.z, _Data->ClipRectFullscreen.w));
}

void ImDrawList::PopClipRect()
{
    _ClipRectStack.pop_back();
    _CmdHeader.ClipRect = (_ClipRectStack.Size == 0) ? _Data->ClipRectFullscreen : _ClipRectStack.Data[_ClipRectStack.Size - 1];
    _OnChangedClipRect();
}

void ImDrawList::PushTextureID(ImTextureID texture_id)
{
    _TextureIdStack.push_back(texture_id);
    _CmdHeader.TextureId = texture_id;
    _OnChangedTextureID();
}

void ImDrawList::PopTextureID()
{
    _TextureIdStack.pop_back();
    _CmdHeader.TextureId = (_TextureIdStack.Size == 0) ? (ImTextureID)NULL : _TextureIdStack.Data[_TextureIdStack.Size - 1];
    _OnChangedTextureID();
}

// Reserve space for a number of vertices and indices.
// You must finish filling your reserved data before calling PrimReserve() again, as it may reallocate or
// submit the intermediate results. PrimUnreserve() can be used to release unused allocations.
void ImDrawList::PrimReserve(int idx_count, int vtx_count)
{
    // Large mesh support (when enabled)
    IM_ASSERT_PARANOID(idx_count >= 0 && vtx_count >= 0);
    if (sizeof(ImDrawIdx) == 2 && (_VtxCurrentIdx + vtx_count >= (1 << 16)) && (Flags & ImDrawListFlags_AllowVtxOffset))
    {
        // FIXME: In theory we should be testing that vtx_count <64k here.
        // In practice, RenderText() relies on reserving ahead for a worst case scenario so it is currently useful for us
        // to not make that check until we rework the text functions to handle clipping and large horizontal lines better.
        _CmdHeader.VtxOffset = VtxBuffer.Size;
        _OnChangedVtxOffset();
    }

    ImDrawCmd* draw_cmd = &CmdBuffer.Data[CmdBuffer.Size - 1];
    draw_cmd->ElemCount += idx_count;

    int vtx_buffer_old_size = VtxBuffer.Size;
    VtxBuffer.resize(vtx_buffer_old_size + vtx_count);
    _VtxWritePtr = VtxBuffer.Data + vtx_buffer_old_size;

    int idx_buffer_old_size = IdxBuffer.Size;
    IdxBuffer.resize(idx_buffer_old_size + idx_count);
    _IdxWritePtr = IdxBuffer.Data + idx_buffer_old_size;
}

// Release the a number of reserved vertices/indices from the end of the last reservation made with PrimReserve().
void ImDrawList::PrimUnreserve(int idx_count, int vtx_count)
{
    IM_ASSERT_PARANOID(idx_count >= 0 && vtx_count >= 0);

    ImDrawCmd* draw_cmd = &CmdBuffer.Data[CmdBuffer.Size - 1];
    draw_cmd->ElemCount -= idx_count;
    VtxBuffer.shrink(VtxBuffer.Size - vtx_count);
    IdxBuffer.shrink(IdxBuffer.Size - idx_count);
}

// Fully unrolled with inline call to keep our debug builds decently fast.
void ImDrawList::PrimRect(const ImVec2& a, const ImVec2& c, ImU32 col)
{
    ImVec2 b(c.x, a.y), d(a.x, c.y), uv(_Data->TexUvWhitePixel);
    ImDrawIdx idx = (ImDrawIdx)_VtxCurrentIdx;
    _IdxWritePtr[0] = idx; _IdxWritePtr[1] = (ImDrawIdx)(idx+1); _IdxWritePtr[2] = (ImDrawIdx)(idx+2);
    _IdxWritePtr[3] = idx; _IdxWritePtr[4] = (ImDrawIdx)(idx+2); _IdxWritePtr[5] = (ImDrawIdx)(idx+3);
    _VtxWritePtr[0].pos = a; _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col;
    _VtxWritePtr[1].pos = b; _VtxWritePtr[1].uv = uv; _VtxWritePtr[1].col = col;
    _VtxWritePtr[2].pos = c; _VtxWritePtr[2].uv = uv; _VtxWritePtr[2].col = col;
    _VtxWritePtr[3].pos = d; _VtxWritePtr[3].uv = uv; _VtxWritePtr[3].col = col;
    _VtxWritePtr += 4;
    _VtxCurrentIdx += 4;
    _IdxWritePtr += 6;
}

void ImDrawList::PrimRectUV(const ImVec2& a, const ImVec2& c, const ImVec2& uv_a, const ImVec2& uv_c, ImU32 col)
{
    ImVec2 b(c.x, a.y), d(a.x, c.y), uv_b(uv_c.x, uv_a.y), uv_d(uv_a.x, uv_c.y);
    ImDrawIdx idx = (ImDrawIdx)_VtxCurrentIdx;
    _IdxWritePtr[0] = idx; _IdxWritePtr[1] = (ImDrawIdx)(idx+1); _IdxWritePtr[2] = (ImDrawIdx)(idx+2);
    _IdxWritePtr[3] = idx; _IdxWritePtr[4] = (ImDrawIdx)(idx+2); _IdxWritePtr[5] = (ImDrawIdx)(idx+3);
    _VtxWritePtr[0].pos = a; _VtxWritePtr[0].uv = uv_a; _VtxWritePtr[0].col = col;
    _VtxWritePtr[1].pos = b; _VtxWritePtr[1].uv = uv_b; _VtxWritePtr[1].col = col;
    _VtxWritePtr[2].pos = c; _VtxWritePtr[2].uv = uv_c; _VtxWritePtr[2].col = col;
    _VtxWritePtr[3].pos = d; _VtxWritePtr[3].uv = uv_d; _VtxWritePtr[3].col = col;
    _VtxWritePtr += 4;
    _VtxCurrentIdx += 4;
    _IdxWritePtr += 6;
}

void ImDrawList::PrimQuadUV(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, const ImVec2& uv_a, const ImVec2& uv_b, const ImVec2& uv_c, const ImVec2& uv_d, ImU32 col)
{
    ImDrawIdx idx = (ImDrawIdx)_VtxCurrentIdx;
    _IdxWritePtr[0] = idx; _IdxWritePtr[1] = (ImDrawIdx)(idx+1); _IdxWritePtr[2] = (ImDrawIdx)(idx+2);
    _IdxWritePtr[3] = idx; _IdxWritePtr[4] = (ImDrawIdx)(idx+2); _IdxWritePtr[5] = (ImDrawIdx)(idx+3);
    _VtxWritePtr[0].pos = a; _VtxWritePtr[0].uv = uv_a; _VtxWritePtr[0].col = col;
    _VtxWritePtr[1].pos = b; _VtxWritePtr[1].uv = uv_b; _VtxWritePtr[1].col = col;
    _VtxWritePtr[2].pos = c; _VtxWritePtr[2].uv = uv_c; _VtxWritePtr[2].col = col;
    _VtxWritePtr[3].pos = d; _VtxWritePtr[3].uv = uv_d; _VtxWritePtr[3].col = col;
    _VtxWritePtr += 4;
    _VtxCurrentIdx += 4;
    _IdxWritePtr += 6;
}

// On AddPolyline() and AddConvexPolyFilled() we intentionally avoid using ImVec2 and superfluous function calls to optimize debug/non-inlined builds.
// Those macros expects l-values.
#define IM_NORMALIZE2F_OVER_ZERO(VX,VY)     do { float d2 = VX*VX + VY*VY; if (d2 > 0.0f) { float inv_len = 1.0f / ImSqrt(d2); VX *= inv_len; VY *= inv_len; } } while (0)
#define IM_FIXNORMAL2F_MAX_INVLEN2          100.0f // 500.0f (see #4053, #3366)
#define IM_FIXNORMAL2F(VX,VY)               do { float d2 = VX*VX + VY*VY; if (d2 > 0.000001f) { float inv_len2 = 1.0f / d2; if (inv_len2 > IM_FIXNORMAL2F_MAX_INVLEN2) inv_len2 = IM_FIXNORMAL2F_MAX_INVLEN2; VX *= inv_len2; VY *= inv_len2; } } while (0)

// TODO: Thickness anti-aliased lines cap are missing their AA fringe.
// We avoid using the ImVec2 math operators here to reduce cost to a minimum for debug/non-inlined builds.
void ImDrawList::AddPolyline(const ImVec2* points, const int points_count, ImU32 col, ImDrawFlags flags, float thickness)
{
    if (points_count < 2)
        return;

    const bool closed = (flags & ImDrawFlags_Closed) != 0;
    const ImVec2 opaque_uv = _Data->TexUvWhitePixel;
    const int count = closed ? points_count : points_count - 1; // The number of line segments we need to draw
    const bool thick_line = (thickness > _FringeScale);

    if (Flags & ImDrawListFlags_AntiAliasedLines)
    {
        // Anti-aliased stroke
        const float AA_SIZE = _FringeScale;
        const ImU32 col_trans = col & ~IM_COL32_A_MASK;

        // Thicknesses <1.0 should behave like thickness 1.0
        thickness = ImMax(thickness, 1.0f);
        const int integer_thickness = (int)thickness;
        const float fractional_thickness = thickness - integer_thickness;

        // Do we want to draw this line using a texture?
        // - For now, only draw integer-width lines using textures to avoid issues with the way scaling occurs, could be improved.
        // - If AA_SIZE is not 1.0f we cannot use the texture path.
        const bool use_texture = (Flags & ImDrawListFlags_AntiAliasedLinesUseTex) && (integer_thickness < IM_DRAWLIST_TEX_LINES_WIDTH_MAX) && (fractional_thickness <= 0.00001f) && (AA_SIZE == 1.0f);

        // We should never hit this, because NewFrame() doesn't set ImDrawListFlags_AntiAliasedLinesUseTex unless ImFontAtlasFlags_NoBakedLines is off
        IM_ASSERT_PARANOID(!use_texture || !(_Data->Font->ContainerAtlas->Flags & ImFontAtlasFlags_NoBakedLines));

        const int idx_count = use_texture ? (count * 6) : (thick_line ? count * 18 : count * 12);
        const int vtx_count = use_texture ? (points_count * 2) : (thick_line ? points_count * 4 : points_count * 3);
        PrimReserve(idx_count, vtx_count);

        // Temporary buffer
        // The first <points_count> items are normals at each line point, then after that there are either 2 or 4 temp points for each line point
        ImVec2* temp_normals = (ImVec2*)alloca(points_count * ((use_texture || !thick_line) ? 3 : 5) * sizeof(ImVec2)); //-V630
        ImVec2* temp_points = temp_normals + points_count;

        // Calculate normals (tangents) for each line segment
        for (int i1 = 0; i1 < count; i1++)
        {
            const int i2 = (i1 + 1) == points_count ? 0 : i1 + 1;
            float dx = points[i2].x - points[i1].x;
            float dy = points[i2].y - points[i1].y;
            IM_NORMALIZE2F_OVER_ZERO(dx, dy);
            temp_normals[i1].x = dy;
            temp_normals[i1].y = -dx;
        }
        if (!closed)
            temp_normals[points_count - 1] = temp_normals[points_count - 2];

        // If we are drawing a one-pixel-wide line without a texture, or a textured line of any width, we only need 2 or 3 vertices per point
        if (use_texture || !thick_line)
        {
            // [PATH 1] Texture-based lines (thick or non-thick)
            // [PATH 2] Non texture-based lines (non-thick)

            // The width of the geometry we need to draw - this is essentially <thickness> pixels for the line itself, plus "one pixel" for AA.
            // - In the texture-based path, we don't use AA_SIZE here because the +1 is tied to the generated texture
            //   (see ImFontAtlasBuildRenderLinesTexData() function), and so alternate values won't work without changes to that code.
            // - In the non texture-based paths, we would allow AA_SIZE to potentially be != 1.0f with a patch (e.g. fringe_scale patch to
            //   allow scaling geometry while preserving one-screen-pixel AA fringe).
            const float half_draw_size = use_texture ? ((thickness * 0.5f) + 1) : AA_SIZE;

            // If line is not closed, the first and last points need to be generated differently as there are no normals to blend
            if (!closed)
            {
                temp_points[0] = points[0] + temp_normals[0] * half_draw_size;
                temp_points[1] = points[0] - temp_normals[0] * half_draw_size;
                temp_points[(points_count-1)*2+0] = points[points_count-1] + temp_normals[points_count-1] * half_draw_size;
                temp_points[(points_count-1)*2+1] = points[points_count-1] - temp_normals[points_count-1] * half_draw_size;
            }

            // Generate the indices to form a number of triangles for each line segment, and the vertices for the line edges
            // This takes points n and n+1 and writes into n+1, with the first point in a closed line being generated from the final one (as n+1 wraps)
            // FIXME-OPT: Merge the different loops, possibly remove the temporary buffer.
            unsigned int idx1 = _VtxCurrentIdx; // Vertex index for start of line segment
            for (int i1 = 0; i1 < count; i1++) // i1 is the first point of the line segment
            {
                const int i2 = (i1 + 1) == points_count ? 0 : i1 + 1; // i2 is the second point of the line segment
                const unsigned int idx2 = ((i1 + 1) == points_count) ? _VtxCurrentIdx : (idx1 + (use_texture ? 2 : 3)); // Vertex index for end of segment

                // Average normals
                float dm_x = (temp_normals[i1].x + temp_normals[i2].x) * 0.5f;
                float dm_y = (temp_normals[i1].y + temp_normals[i2].y) * 0.5f;
                IM_FIXNORMAL2F(dm_x, dm_y);
                dm_x *= half_draw_size; // dm_x, dm_y are offset to the outer edge of the AA area
                dm_y *= half_draw_size;

                // Add temporary vertexes for the outer edges
                ImVec2* out_vtx = &temp_points[i2 * 2];
                out_vtx[0].x = points[i2].x + dm_x;
                out_vtx[0].y = points[i2].y + dm_y;
                out_vtx[1].x = points[i2].x - dm_x;
                out_vtx[1].y = points[i2].y - dm_y;

                if (use_texture)
                {
                    // Add indices for two triangles
                    _IdxWritePtr[0] = (ImDrawIdx)(idx2 + 0); _IdxWritePtr[1] = (ImDrawIdx)(idx1 + 0); _IdxWritePtr[2] = (ImDrawIdx)(idx1 + 1); // Right tri
                    _IdxWritePtr[3] = (ImDrawIdx)(idx2 + 1); _IdxWritePtr[4] = (ImDrawIdx)(idx1 + 1); _IdxWritePtr[5] = (ImDrawIdx)(idx2 + 0); // Left tri
                    _IdxWritePtr += 6;
                }
                else
                {
                    // Add indexes for four triangles
                    _IdxWritePtr[0] = (ImDrawIdx)(idx2 + 0); _IdxWritePtr[1] = (ImDrawIdx)(idx1 + 0); _IdxWritePtr[2] = (ImDrawIdx)(idx1 + 2); // Right tri 1
                    _IdxWritePtr[3] = (ImDrawIdx)(idx1 + 2); _IdxWritePtr[4] = (ImDrawIdx)(idx2 + 2); _IdxWritePtr[5] = (ImDrawIdx)(idx2 + 0); // Right tri 2
                    _IdxWritePtr[6] = (ImDrawIdx)(idx2 + 1); _IdxWritePtr[7] = (ImDrawIdx)(idx1 + 1); _IdxWritePtr[8] = (ImDrawIdx)(idx1 + 0); // Left tri 1
                    _IdxWritePtr[9] = (ImDrawIdx)(idx1 + 0); _IdxWritePtr[10] = (ImDrawIdx)(idx2 + 0); _IdxWritePtr[11] = (ImDrawIdx)(idx2 + 1); // Left tri 2
                    _IdxWritePtr += 12;
                }

                idx1 = idx2;
            }

            // Add vertexes for each point on the line
            if (use_texture)
            {
                // If we're using textures we only need to emit the left/right edge vertices
                ImVec4 tex_uvs = _Data->TexUvLines[integer_thickness];
                /*if (fractional_thickness != 0.0f) // Currently always zero when use_texture==false!
                {
                    const ImVec4 tex_uvs_1 = _Data->TexUvLines[integer_thickness + 1];
                    tex_uvs.x = tex_uvs.x + (tex_uvs_1.x - tex_uvs.x) * fractional_thickness; // inlined ImLerp()
                    tex_uvs.y = tex_uvs.y + (tex_uvs_1.y - tex_uvs.y) * fractional_thickness;
                    tex_uvs.z = tex_uvs.z + (tex_uvs_1.z - tex_uvs.z) * fractional_thickness;
                    tex_uvs.w = tex_uvs.w + (tex_uvs_1.w - tex_uvs.w) * fractional_thickness;
                }*/
                ImVec2 tex_uv0(tex_uvs.x, tex_uvs.y);
                ImVec2 tex_uv1(tex_uvs.z, tex_uvs.w);
                for (int i = 0; i < points_count; i++)
                {
                    _VtxWritePtr[0].pos = temp_points[i * 2 + 0]; _VtxWritePtr[0].uv = tex_uv0; _VtxWritePtr[0].col = col; // Left-side outer edge
                    _VtxWritePtr[1].pos = temp_points[i * 2 + 1]; _VtxWritePtr[1].uv = tex_uv1; _VtxWritePtr[1].col = col; // Right-side outer edge
                    _VtxWritePtr += 2;
                }
            }
            else
            {
                // If we're not using a texture, we need the center vertex as well
                for (int i = 0; i < points_count; i++)
                {
                    _VtxWritePtr[0].pos = points[i];              _VtxWritePtr[0].uv = opaque_uv; _VtxWritePtr[0].col = col;       // Center of line
                    _VtxWritePtr[1].pos = temp_points[i * 2 + 0]; _VtxWritePtr[1].uv = opaque_uv; _VtxWritePtr[1].col = col_trans; // Left-side outer edge
                    _VtxWritePtr[2].pos = temp_points[i * 2 + 1]; _VtxWritePtr[2].uv = opaque_uv; _VtxWritePtr[2].col = col_trans; // Right-side outer edge
                    _VtxWritePtr += 3;
                }
            }
        }
        else
        {
            // [PATH 2] Non texture-based lines (thick): we need to draw the solid line core and thus require four vertices per point
            const float half_inner_thickness = (thickness - AA_SIZE) * 0.5f;

            // If line is not closed, the first and last points need to be generated differently as there are no normals to blend
            if (!closed)
            {
                const int points_last = points_count - 1;
                temp_points[0] = points[0] + temp_normals[0] * (half_inner_thickness + AA_SIZE);
                temp_points[1] = points[0] + temp_normals[0] * (half_inner_thickness);
                temp_points[2] = points[0] - temp_normals[0] * (half_inner_thickness);
                temp_points[3] = points[0] - temp_normals[0] * (half_inner_thickness + AA_SIZE);
                temp_points[points_last * 4 + 0] = points[points_last] + temp_normals[points_last] * (half_inner_thickness + AA_SIZE);
                temp_points[points_last * 4 + 1] = points[points_last] + temp_normals[points_last] * (half_inner_thickness);
                temp_points[points_last * 4 + 2] = points[points_last] - temp_normals[points_last] * (half_inner_thickness);
                temp_points[points_last * 4 + 3] = points[points_last] - temp_normals[points_last] * (half_inner_thickness + AA_SIZE);
            }

            // Generate the indices to form a number of triangles for each line segment, and the vertices for the line edges
            // This takes points n and n+1 and writes into n+1, with the first point in a closed line being generated from the final one (as n+1 wraps)
            // FIXME-OPT: Merge the different loops, possibly remove the temporary buffer.
            unsigned int idx1 = _VtxCurrentIdx; // Vertex index for start of line segment
            for (int i1 = 0; i1 < count; i1++) // i1 is the first point of the line segment
            {
                const int i2 = (i1 + 1) == points_count ? 0 : (i1 + 1); // i2 is the second point of the line segment
                const unsigned int idx2 = (i1 + 1) == points_count ? _VtxCurrentIdx : (idx1 + 4); // Vertex index for end of segment

                // Average normals
                float dm_x = (temp_normals[i1].x + temp_normals[i2].x) * 0.5f;
                float dm_y = (temp_normals[i1].y + temp_normals[i2].y) * 0.5f;
                IM_FIXNORMAL2F(dm_x, dm_y);
                float dm_out_x = dm_x * (half_inner_thickness + AA_SIZE);
                float dm_out_y = dm_y * (half_inner_thickness + AA_SIZE);
                float dm_in_x = dm_x * half_inner_thickness;
                float dm_in_y = dm_y * half_inner_thickness;

                // Add temporary vertices
                ImVec2* out_vtx = &temp_points[i2 * 4];
                out_vtx[0].x = points[i2].x + dm_out_x;
                out_vtx[0].y = points[i2].y + dm_out_y;
                out_vtx[1].x = points[i2].x + dm_in_x;
                out_vtx[1].y = points[i2].y + dm_in_y;
                out_vtx[2].x = points[i2].x - dm_in_x;
                out_vtx[2].y = points[i2].y - dm_in_y;
                out_vtx[3].x = points[i2].x - dm_out_x;
                out_vtx[3].y = points[i2].y - dm_out_y;

                // Add indexes
                _IdxWritePtr[0]  = (ImDrawIdx)(idx2 + 1); _IdxWritePtr[1]  = (ImDrawIdx)(idx1 + 1); _IdxWritePtr[2]  = (ImDrawIdx)(idx1 + 2);
                _IdxWritePtr[3]  = (ImDrawIdx)(idx1 + 2); _IdxWritePtr[4]  = (ImDrawIdx)(idx2 + 2); _IdxWritePtr[5]  = (ImDrawIdx)(idx2 + 1);
                _IdxWritePtr[6]  = (ImDrawIdx)(idx2 + 1); _IdxWritePtr[7]  = (ImDrawIdx)(idx1 + 1); _IdxWritePtr[8]  = (ImDrawIdx)(idx1 + 0);
                _IdxWritePtr[9]  = (ImDrawIdx)(idx1 + 0); _IdxWritePtr[10] = (ImDrawIdx)(idx2 + 0); _IdxWritePtr[11] = (ImDrawIdx)(idx2 + 1);
                _IdxWritePtr[12] = (ImDrawIdx)(idx2 + 2); _IdxWritePtr[13] = (ImDrawIdx)(idx1 + 2); _IdxWritePtr[14] = (ImDrawIdx)(idx1 + 3);
                _IdxWritePtr[15] = (ImDrawIdx)(idx1 + 3); _IdxWritePtr[16] = (ImDrawIdx)(idx2 + 3); _IdxWritePtr[17] = (ImDrawIdx)(idx2 + 2);
                _IdxWritePtr += 18;

                idx1 = idx2;
            }

            // Add vertices
            for (int i = 0; i < points_count; i++)
            {
                _VtxWritePtr[0].pos = temp_points[i * 4 + 0]; _VtxWritePtr[0].uv = opaque_uv; _VtxWritePtr[0].col = col_trans;
                _VtxWritePtr[1].pos = temp_points[i * 4 + 1]; _VtxWritePtr[1].uv = opaque_uv; _VtxWritePtr[1].col = col;
                _VtxWritePtr[2].pos = temp_points[i * 4 + 2]; _VtxWritePtr[2].uv = opaque_uv; _VtxWritePtr[2].col = col;
                _VtxWritePtr[3].pos = temp_points[i * 4 + 3]; _VtxWritePtr[3].uv = opaque_uv; _VtxWritePtr[3].col = col_trans;
                _VtxWritePtr += 4;
            }
        }
        _VtxCurrentIdx += (ImDrawIdx)vtx_count;
    }
    else
    {
        // [PATH 4] Non texture-based, Non anti-aliased lines
        const int idx_count = count * 6;
        const int vtx_count = count * 4;    // FIXME-OPT: Not sharing edges
        PrimReserve(idx_count, vtx_count);

        for (int i1 = 0; i1 < count; i1++)
        {
            const int i2 = (i1 + 1) == points_count ? 0 : i1 + 1;
            const ImVec2& p1 = points[i1];
            const ImVec2& p2 = points[i2];

            float dx = p2.x - p1.x;
            float dy = p2.y - p1.y;
            IM_NORMALIZE2F_OVER_ZERO(dx, dy);
            dx *= (thickness * 0.5f);
            dy *= (thickness * 0.5f);

            _VtxWritePtr[0].pos.x = p1.x + dy; _VtxWritePtr[0].pos.y = p1.y - dx; _VtxWritePtr[0].uv = opaque_uv; _VtxWritePtr[0].col = col;
            _VtxWritePtr[1].pos.x = p2.x + dy; _VtxWritePtr[1].pos.y = p2.y - dx; _VtxWritePtr[1].uv = opaque_uv; _VtxWritePtr[1].col = col;
            _VtxWritePtr[2].pos.x = p2.x - dy; _VtxWritePtr[2].pos.y = p2.y + dx; _VtxWritePtr[2].uv = opaque_uv; _VtxWritePtr[2].col = col;
            _VtxWritePtr[3].pos.x = p1.x - dy; _VtxWritePtr[3].pos.y = p1.y + dx; _VtxWritePtr[3].uv = opaque_uv; _VtxWritePtr[3].col = col;
            _VtxWritePtr += 4;

            _IdxWritePtr[0] = (ImDrawIdx)(_VtxCurrentIdx); _IdxWritePtr[1] = (ImDrawIdx)(_VtxCurrentIdx + 1); _IdxWritePtr[2] = (ImDrawIdx)(_VtxCurrentIdx + 2);
            _IdxWritePtr[3] = (ImDrawIdx)(_VtxCurrentIdx); _IdxWritePtr[4] = (ImDrawIdx)(_VtxCurrentIdx + 2); _IdxWritePtr[5] = (ImDrawIdx)(_VtxCurrentIdx + 3);
            _IdxWritePtr += 6;
            _VtxCurrentIdx += 4;
        }
    }
}

// We intentionally avoid using ImVec2 and its math operators here to reduce cost to a minimum for debug/non-inlined builds.
void ImDrawList::AddConvexPolyFilled(const ImVec2* points, const int points_count, ImU32 col)
{
    if (points_count < 3)
        return;

    const ImVec2 uv = _Data->TexUvWhitePixel;

    if (Flags & ImDrawListFlags_AntiAliasedFill)
    {
        // Anti-aliased Fill
        const float AA_SIZE = _FringeScale;
        const ImU32 col_trans = col & ~IM_COL32_A_MASK;
        const int idx_count = (points_count - 2)*3 + points_count * 6;
        const int vtx_count = (points_count * 2);
        PrimReserve(idx_count, vtx_count);

        // Add indexes for fill
        unsigned int vtx_inner_idx = _VtxCurrentIdx;
        unsigned int vtx_outer_idx = _VtxCurrentIdx + 1;
        for (int i = 2; i < points_count; i++)
        {
            _IdxWritePtr[0] = (ImDrawIdx)(vtx_inner_idx); _IdxWritePtr[1] = (ImDrawIdx)(vtx_inner_idx + ((i - 1) << 1)); _IdxWritePtr[2] = (ImDrawIdx)(vtx_inner_idx + (i << 1));
            _IdxWritePtr += 3;
        }

        // Compute normals
        ImVec2* temp_normals = (ImVec2*)alloca(points_count * sizeof(ImVec2)); //-V630
        for (int i0 = points_count - 1, i1 = 0; i1 < points_count; i0 = i1++)
        {
            const ImVec2& p0 = points[i0];
            const ImVec2& p1 = points[i1];
            float dx = p1.x - p0.x;
            float dy = p1.y - p0.y;
            IM_NORMALIZE2F_OVER_ZERO(dx, dy);
            temp_normals[i0].x = dy;
            temp_normals[i0].y = -dx;
        }

        for (int i0 = points_count - 1, i1 = 0; i1 < points_count; i0 = i1++)
        {
            // Average normals
            const ImVec2& n0 = temp_normals[i0];
            const ImVec2& n1 = temp_normals[i1];
            float dm_x = (n0.x + n1.x) * 0.5f;
            float dm_y = (n0.y + n1.y) * 0.5f;
            IM_FIXNORMAL2F(dm_x, dm_y);
            dm_x *= AA_SIZE * 0.5f;
            dm_y *= AA_SIZE * 0.5f;

            // Add vertices
            _VtxWritePtr[0].pos.x = (points[i1].x - dm_x); _VtxWritePtr[0].pos.y = (points[i1].y - dm_y); _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col;        // Inner
            _VtxWritePtr[1].pos.x = (points[i1].x + dm_x); _VtxWritePtr[1].pos.y = (points[i1].y + dm_y); _VtxWritePtr[1].uv = uv; _VtxWritePtr[1].col = col_trans;  // Outer
            _VtxWritePtr += 2;

            // Add indexes for fringes
            _IdxWritePtr[0] = (ImDrawIdx)(vtx_inner_idx + (i1 << 1)); _IdxWritePtr[1] = (ImDrawIdx)(vtx_inner_idx + (i0 << 1)); _IdxWritePtr[2] = (ImDrawIdx)(vtx_outer_idx + (i0 << 1));
            _IdxWritePtr[3] = (ImDrawIdx)(vtx_outer_idx + (i0 << 1)); _IdxWritePtr[4] = (ImDrawIdx)(vtx_outer_idx + (i1 << 1)); _IdxWritePtr[5] = (ImDrawIdx)(vtx_inner_idx + (i1 << 1));
            _IdxWritePtr += 6;
        }
        _VtxCurrentIdx += (ImDrawIdx)vtx_count;
    }
    else
    {
        // Non Anti-aliased Fill
        const int idx_count = (points_count - 2)*3;
        const int vtx_count = points_count;
        PrimReserve(idx_count, vtx_count);
        for (int i = 0; i < vtx_count; i++)
        {
            _VtxWritePtr[0].pos = points[i]; _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col;
            _VtxWritePtr++;
        }
        for (int i = 2; i < points_count; i++)
        {
            _IdxWritePtr[0] = (ImDrawIdx)(_VtxCurrentIdx); _IdxWritePtr[1] = (ImDrawIdx)(_VtxCurrentIdx + i - 1); _IdxWritePtr[2] = (ImDrawIdx)(_VtxCurrentIdx + i);
            _IdxWritePtr += 3;
        }
        _VtxCurrentIdx += (ImDrawIdx)vtx_count;
    }
}

void ImDrawList::_PathArcToFastEx(const ImVec2& center, float radius, int a_min_sample, int a_max_sample, int a_step)
{
    if (radius <= 0.0f)
    {
        _Path.push_back(center);
        return;
    }

    // Calculate arc auto segment step size
    if (a_step <= 0)
        a_step = IM_DRAWLIST_ARCFAST_SAMPLE_MAX / _CalcCircleAutoSegmentCount(radius);

    // Make sure we never do steps larger than one quarter of the circle
    a_step = ImClamp(a_step, 1, IM_DRAWLIST_ARCFAST_TABLE_SIZE / 4);

    const int sample_range = ImAbs(a_max_sample - a_min_sample);
    const int a_next_step = a_step;

    int samples = sample_range + 1;
    bool extra_max_sample = false;
    if (a_step > 1)
    {
        samples            = sample_range / a_step + 1;
        const int overstep = sample_range % a_step;

        if (overstep > 0)
        {
            extra_max_sample = true;
            samples++;

            // When we have overstep to avoid awkwardly looking one long line and one tiny one at the end,
            // distribute first step range evenly between them by reducing first step size.
            if (sample_range > 0)
                a_step -= (a_step - overstep) / 2;
        }
    }

    _Path.resize(_Path.Size + samples);
    ImVec2* out_ptr = _Path.Data + (_Path.Size - samples);

    int sample_index = a_min_sample;
    if (sample_index < 0 || sample_index >= IM_DRAWLIST_ARCFAST_SAMPLE_MAX)
    {
        sample_index = sample_index % IM_DRAWLIST_ARCFAST_SAMPLE_MAX;
        if (sample_index < 0)
            sample_index += IM_DRAWLIST_ARCFAST_SAMPLE_MAX;
    }

    if (a_max_sample >= a_min_sample)
    {
        for (int a = a_min_sample; a <= a_max_sample; a += a_step, sample_index += a_step, a_step = a_next_step)
        {
            // a_step is clamped to IM_DRAWLIST_ARCFAST_SAMPLE_MAX, so we have guaranteed that it will not wrap over range twice or more
            if (sample_index >= IM_DRAWLIST_ARCFAST_SAMPLE_MAX)
                sample_index -= IM_DRAWLIST_ARCFAST_SAMPLE_MAX;

            const ImVec2 s = _Data->ArcFastVtx[sample_index];
            out_ptr->x = center.x + s.x * radius;
            out_ptr->y = center.y + s.y * radius;
            out_ptr++;
        }
    }
    else
    {
        for (int a = a_min_sample; a >= a_max_sample; a -= a_step, sample_index -= a_step, a_step = a_next_step)
        {
            // a_step is clamped to IM_DRAWLIST_ARCFAST_SAMPLE_MAX, so we have guaranteed that it will not wrap over range twice or more
            if (sample_index < 0)
                sample_index += IM_DRAWLIST_ARCFAST_SAMPLE_MAX;

            const ImVec2 s = _Data->ArcFastVtx[sample_index];
            out_ptr->x = center.x + s.x * radius;
            out_ptr->y = center.y + s.y * radius;
            out_ptr++;
        }
    }

    if (extra_max_sample)
    {
        int normalized_max_sample = a_max_sample % IM_DRAWLIST_ARCFAST_SAMPLE_MAX;
        if (normalized_max_sample < 0)
            normalized_max_sample += IM_DRAWLIST_ARCFAST_SAMPLE_MAX;

        const ImVec2 s = _Data->ArcFastVtx[normalized_max_sample];
        out_ptr->x = center.x + s.x * radius;
        out_ptr->y = center.y + s.y * radius;
        out_ptr++;
    }

    IM_ASSERT_PARANOID(_Path.Data + _Path.Size == out_ptr);
}

void ImDrawList::_PathArcToN(const ImVec2& center, float radius, float a_min, float a_max, int num_segments)
{
    if (radius <= 0.0f)
    {
        _Path.push_back(center);
        return;
    }

    // Note that we are adding a point at both a_min and a_max.
    // If you are trying to draw a full closed circle you don't want the overlapping points!
    _Path.reserve(_Path.Size + (num_segments + 1));
    for (int i = 0; i <= num_segments; i++)
    {
        const float a = a_min + ((float)i / (float)num_segments) * (a_max - a_min);
        _Path.push_back(ImVec2(center.x + ImCos(a) * radius, center.y + ImSin(a) * radius));
    }
}

// 0: East, 3: South, 6: West, 9: North, 12: East
void ImDrawList::PathArcToFast(const ImVec2& center, float radius, int a_min_of_12, int a_max_of_12)
{
    if (radius <= 0.0f)
    {
        _Path.push_back(center);
        return;
    }
    _PathArcToFastEx(center, radius, a_min_of_12 * IM_DRAWLIST_ARCFAST_SAMPLE_MAX / 12, a_max_of_12 * IM_DRAWLIST_ARCFAST_SAMPLE_MAX / 12, 0);
}

void ImDrawList::PathArcTo(const ImVec2& center, float radius, float a_min, float a_max, int num_segments)
{
    if (radius <= 0.0f)
    {
        _Path.push_back(center);
        return;
    }

    if (num_segments > 0)
    {
        _PathArcToN(center, radius, a_min, a_max, num_segments);
        return;
    }

    // Automatic segment count
    if (radius <= _Data->ArcFastRadiusCutoff)
    {
        const bool a_is_reverse = a_max < a_min;

        // We are going to use precomputed values for mid samples.
        // Determine first and last sample in lookup table that belong to the arc.
        const float a_min_sample_f = IM_DRAWLIST_ARCFAST_SAMPLE_MAX * a_min / (IM_PI * 2.0f);
        const float a_max_sample_f = IM_DRAWLIST_ARCFAST_SAMPLE_MAX * a_max / (IM_PI * 2.0f);

        const int a_min_sample = a_is_reverse ? (int)ImFloorSigned(a_min_sample_f) : (int)ImCeil(a_min_sample_f);
        const int a_max_sample = a_is_reverse ? (int)ImCeil(a_max_sample_f) : (int)ImFloorSigned(a_max_sample_f);
        const int a_mid_samples = a_is_reverse ? ImMax(a_min_sample - a_max_sample, 0) : ImMax(a_max_sample - a_min_sample, 0);

        const float a_min_segment_angle = a_min_sample * IM_PI * 2.0f / IM_DRAWLIST_ARCFAST_SAMPLE_MAX;
        const float a_max_segment_angle = a_max_sample * IM_PI * 2.0f / IM_DRAWLIST_ARCFAST_SAMPLE_MAX;
        const bool a_emit_start = (a_min_segment_angle - a_min) != 0.0f;
        const bool a_emit_end = (a_max - a_max_segment_angle) != 0.0f;

        _Path.reserve(_Path.Size + (a_mid_samples + 1 + (a_emit_start ? 1 : 0) + (a_emit_end ? 1 : 0)));
        if (a_emit_start)
            _Path.push_back(ImVec2(center.x + ImCos(a_min) * radius, center.y + ImSin(a_min) * radius));
        if (a_mid_samples > 0)
            _PathArcToFastEx(center, radius, a_min_sample, a_max_sample, 0);
        if (a_emit_end)
            _Path.push_back(ImVec2(center.x + ImCos(a_max) * radius, center.y + ImSin(a_max) * radius));
    }
    else
    {
        const float arc_length = ImAbs(a_max - a_min);
        const int circle_segment_count = _CalcCircleAutoSegmentCount(radius);
        const int arc_segment_count = ImMax((int)ImCeil(circle_segment_count * arc_length / (IM_PI * 2.0f)), (int)(2.0f * IM_PI / arc_length));
        _PathArcToN(center, radius, a_min, a_max, arc_segment_count);
    }
}

ImVec2 ImBezierCubicCalc(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, float t)
{
    float u = 1.0f - t;
    float w1 = u * u * u;
    float w2 = 3 * u * u * t;
    float w3 = 3 * u * t * t;
    float w4 = t * t * t;
    return ImVec2(w1 * p1.x + w2 * p2.x + w3 * p3.x + w4 * p4.x, w1 * p1.y + w2 * p2.y + w3 * p3.y + w4 * p4.y);
}

ImVec2 ImBezierQuadraticCalc(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, float t)
{
    float u = 1.0f - t;
    float w1 = u * u;
    float w2 = 2 * u * t;
    float w3 = t * t;
    return ImVec2(w1 * p1.x + w2 * p2.x + w3 * p3.x, w1 * p1.y + w2 * p2.y + w3 * p3.y);
}

// Closely mimics ImBezierCubicClosestPointCasteljau() in imgui.cpp
static void PathBezierCubicCurveToCasteljau(ImVector<ImVec2>* path, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4, float tess_tol, int level)
{
    float dx = x4 - x1;
    float dy = y4 - y1;
    float d2 = (x2 - x4) * dy - (y2 - y4) * dx;
    float d3 = (x3 - x4) * dy - (y3 - y4) * dx;
    d2 = (d2 >= 0) ? d2 : -d2;
    d3 = (d3 >= 0) ? d3 : -d3;
    if ((d2 + d3) * (d2 + d3) < tess_tol * (dx * dx + dy * dy))
    {
        path->push_back(ImVec2(x4, y4));
    }
    else if (level < 10)
    {
        float x12 = (x1 + x2) * 0.5f, y12 = (y1 + y2) * 0.5f;
        float x23 = (x2 + x3) * 0.5f, y23 = (y2 + y3) * 0.5f;
        float x34 = (x3 + x4) * 0.5f, y34 = (y3 + y4) * 0.5f;
        float x123 = (x12 + x23) * 0.5f, y123 = (y12 + y23) * 0.5f;
        float x234 = (x23 + x34) * 0.5f, y234 = (y23 + y34) * 0.5f;
        float x1234 = (x123 + x234) * 0.5f, y1234 = (y123 + y234) * 0.5f;
        PathBezierCubicCurveToCasteljau(path, x1, y1, x12, y12, x123, y123, x1234, y1234, tess_tol, level + 1);
        PathBezierCubicCurveToCasteljau(path, x1234, y1234, x234, y234, x34, y34, x4, y4, tess_tol, level + 1);
    }
}

static void PathBezierQuadraticCurveToCasteljau(ImVector<ImVec2>* path, float x1, float y1, float x2, float y2, float x3, float y3, float tess_tol, int level)
{
    float dx = x3 - x1, dy = y3 - y1;
    float det = (x2 - x3) * dy - (y2 - y3) * dx;
    if (det * det * 4.0f < tess_tol * (dx * dx + dy * dy))
    {
        path->push_back(ImVec2(x3, y3));
    }
    else if (level < 10)
    {
        float x12 = (x1 + x2) * 0.5f, y12 = (y1 + y2) * 0.5f;
        float x23 = (x2 + x3) * 0.5f, y23 = (y2 + y3) * 0.5f;
        float x123 = (x12 + x23) * 0.5f, y123 = (y12 + y23) * 0.5f;
        PathBezierQuadraticCurveToCasteljau(path, x1, y1, x12, y12, x123, y123, tess_tol, level + 1);
        PathBezierQuadraticCurveToCasteljau(path, x123, y123, x23, y23, x3, y3, tess_tol, level + 1);
    }
}

void ImDrawList::PathBezierCubicCurveTo(const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, int num_segments)
{
    ImVec2 p1 = _Path.back();
    if (num_segments == 0)
    {
        PathBezierCubicCurveToCasteljau(&_Path, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, _Data->CurveTessellationTol, 0); // Auto-tessellated
    }
    else
    {
        float t_step = 1.0f / (float)num_segments;
        for (int i_step = 1; i_step <= num_segments; i_step++)
            _Path.push_back(ImBezierCubicCalc(p1, p2, p3, p4, t_step * i_step));
    }
}

void ImDrawList::PathBezierQuadraticCurveTo(const ImVec2& p2, const ImVec2& p3, int num_segments)
{
    ImVec2 p1 = _Path.back();
    if (num_segments == 0)
    {
        PathBezierQuadraticCurveToCasteljau(&_Path, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, _Data->CurveTessellationTol, 0);// Auto-tessellated
    }
    else
    {
        float t_step = 1.0f / (float)num_segments;
        for (int i_step = 1; i_step <= num_segments; i_step++)
            _Path.push_back(ImBezierQuadraticCalc(p1, p2, p3, t_step * i_step));
    }
}

IM_STATIC_ASSERT(ImDrawFlags_RoundCornersTopLeft == (1 << 4));
static inline ImDrawFlags FixRectCornerFlags(ImDrawFlags flags)
{
#ifndef IMGUI_DISABLE_OBSOLETE_FUNCTIONS
    // Legacy Support for hard coded ~0 (used to be a suggested equivalent to ImDrawCornerFlags_All)
    //   ~0   --> ImDrawFlags_RoundCornersAll or 0
    if (flags == ~0)
        return ImDrawFlags_RoundCornersAll;

    // Legacy Support for hard coded 0x01 to 0x0F (matching 15 out of 16 old flags combinations)
    //   0x01 --> ImDrawFlags_RoundCornersTopLeft (VALUE 0x01 OVERLAPS ImDrawFlags_Closed but ImDrawFlags_Closed is never valid in this path!)
    //   0x02 --> ImDrawFlags_RoundCornersTopRight
    //   0x03 --> ImDrawFlags_RoundCornersTopLeft | ImDrawFlags_RoundCornersTopRight
    //   0x04 --> ImDrawFlags_RoundCornersBotLeft
    //   0x05 --> ImDrawFlags_RoundCornersTopLeft | ImDrawFlags_RoundCornersBotLeft
    //   ...
    //   0x0F --> ImDrawFlags_RoundCornersAll or 0
    // (See all values in ImDrawCornerFlags_)
    if (flags >= 0x01 && flags <= 0x0F)
        return (flags << 4);

    // We cannot support hard coded 0x00 with 'float rounding > 0.0f' --> replace with ImDrawFlags_RoundCornersNone or use 'float rounding = 0.0f'
#endif

    // If this triggers, please update your code replacing hardcoded values with new ImDrawFlags_RoundCorners* values.
    // Note that ImDrawFlags_Closed (== 0x01) is an invalid flag for AddRect(), AddRectFilled(), PathRect() etc...
    IM_ASSERT((flags & 0x0F) == 0 && "Misuse of legacy hardcoded ImDrawCornerFlags values!");

    if ((flags & ImDrawFlags_RoundCornersMask_) == 0)
        flags |= ImDrawFlags_RoundCornersAll;

    return flags;
}

void ImDrawList::PathRect(const ImVec2& a, const ImVec2& b, float rounding, ImDrawFlags flags)
{
    flags = FixRectCornerFlags(flags);
    rounding = ImMin(rounding, ImFabs(b.x - a.x) * ( ((flags & ImDrawFlags_RoundCornersTop)  == ImDrawFlags_RoundCornersTop)  || ((flags & ImDrawFlags_RoundCornersBottom) == ImDrawFlags_RoundCornersBottom) ? 0.5f : 1.0f ) - 1.0f);
    rounding = ImMin(rounding, ImFabs(b.y - a.y) * ( ((flags & ImDrawFlags_RoundCornersLeft) == ImDrawFlags_RoundCornersLeft) || ((flags & ImDrawFlags_RoundCornersRight)  == ImDrawFlags_RoundCornersRight)  ? 0.5f : 1.0f ) - 1.0f);

    if (rounding <= 0.0f || (flags & ImDrawFlags_RoundCornersMask_) == ImDrawFlags_RoundCornersNone)
    {
        PathLineTo(a);
        PathLineTo(ImVec2(b.x, a.y));
        PathLineTo(b);
        PathLineTo(ImVec2(a.x, b.y));
    }
    else
    {
        const float rounding_tl = (flags & ImDrawFlags_RoundCornersTopLeft)     ? rounding : 0.0f;
        const float rounding_tr = (flags & ImDrawFlags_RoundCornersTopRight)    ? rounding : 0.0f;
        const float rounding_br = (flags & ImDrawFlags_RoundCornersBottomRight) ? rounding : 0.0f;
        const float rounding_bl = (flags & ImDrawFlags_RoundCornersBottomLeft)  ? rounding : 0.0f;
        PathArcToFast(ImVec2(a.x + rounding_tl, a.y + rounding_tl), rounding_tl, 6, 9);
        PathArcToFast(ImVec2(b.x - rounding_tr, a.y + rounding_tr), rounding_tr, 9, 12);
        PathArcToFast(ImVec2(b.x - rounding_br, b.y - rounding_br), rounding_br, 0, 3);
        PathArcToFast(ImVec2(a.x + rounding_bl, b.y - rounding_bl), rounding_bl, 3, 6);
    }
}

void ImDrawList::AddLine(const ImVec2& p1, const ImVec2& p2, ImU32 col, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;
    PathLineTo(p1 + ImVec2(0.5f, 0.5f));
    PathLineTo(p2 + ImVec2(0.5f, 0.5f));
    PathStroke(col, 0, thickness);
}

// p_min = upper-left, p_max = lower-right
// Note we don't render 1 pixels sized rectangles properly.
void ImDrawList::AddRect(const ImVec2& p_min, const ImVec2& p_max, ImU32 col, float rounding, ImDrawFlags flags, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;
    if (Flags & ImDrawListFlags_AntiAliasedLines)
        PathRect(p_min + ImVec2(0.50f, 0.50f), p_max - ImVec2(0.50f, 0.50f), rounding, flags);
    else
        PathRect(p_min + ImVec2(0.50f, 0.50f), p_max - ImVec2(0.49f, 0.49f), rounding, flags); // Better looking lower-right corner and rounded non-AA shapes.
    PathStroke(col, ImDrawFlags_Closed, thickness);
}

void ImDrawList::AddRectFilled(const ImVec2& p_min, const ImVec2& p_max, ImU32 col, float rounding, ImDrawFlags flags)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;
    if (rounding <= 0.0f || (flags & ImDrawFlags_RoundCornersMask_) == ImDrawFlags_RoundCornersNone)
    {
        PrimReserve(6, 4);
        PrimRect(p_min, p_max, col);
    }
    else
    {
        PathRect(p_min, p_max, rounding, flags);
        PathFillConvex(col);
    }
}

// p_min = upper-left, p_max = lower-right
void ImDrawList::AddRectFilledMultiColor(const ImVec2& p_min, const ImVec2& p_max, ImU32 col_upr_left, ImU32 col_upr_right, ImU32 col_bot_right, ImU32 col_bot_left)
{
    if (((col_upr_left | col_upr_right | col_bot_right | col_bot_left) & IM_COL32_A_MASK) == 0)
        return;

    const ImVec2 uv = _Data->TexUvWhitePixel;
    PrimReserve(6, 4);
    PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx)); PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx + 1)); PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx + 2));
    PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx)); PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx + 2)); PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx + 3));
    PrimWriteVtx(p_min, uv, col_upr_left);
    PrimWriteVtx(ImVec2(p_max.x, p_min.y), uv, col_upr_right);
    PrimWriteVtx(p_max, uv, col_bot_right);
    PrimWriteVtx(ImVec2(p_min.x, p_max.y), uv, col_bot_left);
}

void ImDrawList::AddQuad(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, ImU32 col, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(p1);
    PathLineTo(p2);
    PathLineTo(p3);
    PathLineTo(p4);
    PathStroke(col, ImDrawFlags_Closed, thickness);
}

void ImDrawList::AddQuadFilled(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, ImU32 col)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(p1);
    PathLineTo(p2);
    PathLineTo(p3);
    PathLineTo(p4);
    PathFillConvex(col);
}

void ImDrawList::AddTriangle(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, ImU32 col, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(p1);
    PathLineTo(p2);
    PathLineTo(p3);
    PathStroke(col, ImDrawFlags_Closed, thickness);
}

void ImDrawList::AddTriangleFilled(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, ImU32 col)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(p1);
    PathLineTo(p2);
    PathLineTo(p3);
    PathFillConvex(col);
}

void ImDrawList::AddCircle(const ImVec2& center, float radius, ImU32 col, int num_segments, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0 || radius <= 0.0f)
        return;

    // Obtain segment count
    if (num_segments <= 0)
    {
        // Automatic segment count
        num_segments = _CalcCircleAutoSegmentCount(radius);
    }
    else
    {
        // Explicit segment count (still clamp to avoid drawing insanely tessellated shapes)
        num_segments = ImClamp(num_segments, 3, IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MAX);
    }

    // Because we are filling a closed shape we remove 1 from the count of segments/points
    const float a_max = (IM_PI * 2.0f) * ((float)num_segments - 1.0f) / (float)num_segments;
    if (num_segments == 12)
        PathArcToFast(center, radius - 0.5f, 0, 12 - 1);
    else
        PathArcTo(center, radius - 0.5f, 0.0f, a_max, num_segments - 1);
    PathStroke(col, ImDrawFlags_Closed, thickness);
}

void ImDrawList::AddCircleFilled(const ImVec2& center, float radius, ImU32 col, int num_segments)
{
    if ((col & IM_COL32_A_MASK) == 0 || radius <= 0.0f)
        return;

    // Obtain segment count
    if (num_segments <= 0)
    {
        // Automatic segment count
        num_segments = _CalcCircleAutoSegmentCount(radius);
    }
    else
    {
        // Explicit segment count (still clamp to avoid drawing insanely tessellated shapes)
        num_segments = ImClamp(num_segments, 3, IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MAX);
    }

    // Because we are filling a closed shape we remove 1 from the count of segments/points
    const float a_max = (IM_PI * 2.0f) * ((float)num_segments - 1.0f) / (float)num_segments;
    if (num_segments == 12)
        PathArcToFast(center, radius, 0, 12 - 1);
    else
        PathArcTo(center, radius, 0.0f, a_max, num_segments - 1);
    PathFillConvex(col);
}

// Guaranteed to honor 'num_segments'
void ImDrawList::AddNgon(const ImVec2& center, float radius, ImU32 col, int num_segments, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0 || num_segments <= 2)
        return;

    // Because we are filling a closed shape we remove 1 from the count of segments/points
    const float a_max = (IM_PI * 2.0f) * ((float)num_segments - 1.0f) / (float)num_segments;
    PathArcTo(center, radius - 0.5f, 0.0f, a_max, num_segments - 1);
    PathStroke(col, ImDrawFlags_Closed, thickness);
}

// Guaranteed to honor 'num_segments'
void ImDrawList::AddNgonFilled(const ImVec2& center, float radius, ImU32 col, int num_segments)
{
    if ((col & IM_COL32_A_MASK) == 0 || num_segments <= 2)
        return;

    // Because we are filling a closed shape we remove 1 from the count of segments/points
    const float a_max = (IM_PI * 2.0f) * ((float)num_segments - 1.0f) / (float)num_segments;
    PathArcTo(center, radius, 0.0f, a_max, num_segments - 1);
    PathFillConvex(col);
}

// Cubic Bezier takes 4 controls points
void ImDrawList::AddBezierCubic(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, ImU32 col, float thickness, int num_segments)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(p1);
    PathBezierCubicCurveTo(p2, p3, p4, num_segments);
    PathStroke(col, 0, thickness);
}

// Quadratic Bezier takes 3 controls points
void ImDrawList::AddBezierQuadratic(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, ImU32 col, float thickness, int num_segments)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(p1);
    PathBezierQuadraticCurveTo(p2, p3, num_segments);
    PathStroke(col, 0, thickness);
}

void ImDrawList::AddText(const ImFont* font, float font_size, const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_end, float wrap_width, const ImVec4* cpu_fine_clip_rect)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    if (text_end == NULL)
        text_end = text_begin + strlen(text_begin);
    if (text_begin == text_end)
        return;

    // Pull default font/size from the shared ImDrawListSharedData instance
    if (font == NULL)
        font = _Data->Font;
    if (font_size == 0.0f)
        font_size = _Data->FontSize;

    IM_ASSERT(font->ContainerAtlas->TexID == _CmdHeader.TextureId);  // Use high-level ImGui::PushFont() or low-level ImDrawList::PushTextureId() to change font.

    ImVec4 clip_rect = _CmdHeader.ClipRect;
    if (cpu_fine_clip_rect)
    {
        clip_rect.x = ImMax(clip_rect.x, cpu_fine_clip_rect->x);
        clip_rect.y = ImMax(clip_rect.y, cpu_fine_clip_rect->y);
        clip_rect.z = ImMin(clip_rect.z, cpu_fine_clip_rect->z);
        clip_rect.w = ImMin(clip_rect.w, cpu_fine_clip_rect->w);
    }
    font->RenderText(this, font_size, pos, col, clip_rect, text_begin, text_end, wrap_width, cpu_fine_clip_rect != NULL);
}

void ImDrawList::AddText(const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_end)
{
    AddText(NULL, 0.0f, pos, col, text_begin, text_end);
}

void ImDrawList::AddImage(ImTextureID user_texture_id, const ImVec2& p_min, const ImVec2& p_max, const ImVec2& uv_min, const ImVec2& uv_max, ImU32 col)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    const bool push_texture_id = user_texture_id != _CmdHeader.TextureId;
    if (push_texture_id)
        PushTextureID(user_texture_id);

    PrimReserve(6, 4);
    PrimRectUV(p_min, p_max, uv_min, uv_max, col);

    if (push_texture_id)
        PopTextureID();
}

void ImDrawList::AddImageQuad(ImTextureID user_texture_id, const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, const ImVec2& uv1, const ImVec2& uv2, const ImVec2& uv3, const ImVec2& uv4, ImU32 col)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    const bool push_texture_id = user_texture_id != _CmdHeader.TextureId;
    if (push_texture_id)
        PushTextureID(user_texture_id);

    PrimReserve(6, 4);
    PrimQuadUV(p1, p2, p3, p4, uv1, uv2, uv3, uv4, col);

    if (push_texture_id)
        PopTextureID();
}

void ImDrawList::AddImageRounded(ImTextureID user_texture_id, const ImVec2& p_min, const ImVec2& p_max, const ImVec2& uv_min, const ImVec2& uv_max, ImU32 col, float rounding, ImDrawFlags flags)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    flags = FixRectCornerFlags(flags);
    if (rounding <= 0.0f || (flags & ImDrawFlags_RoundCornersMask_) == ImDrawFlags_RoundCornersNone)
    {
        AddImage(user_texture_id, p_min, p_max, uv_min, uv_max, col);
        return;
    }

    const bool push_texture_id = user_texture_id != _CmdHeader.TextureId;
    if (push_texture_id)
        PushTextureID(user_texture_id);

    int vert_start_idx = VtxBuffer.Size;
    PathRect(p_min, p_max, rounding, flags);
    PathFillConvex(col);
    int vert_end_idx = VtxBuffer.Size;
    ImGui::ShadeVertsLinearUV(this, vert_start_idx, vert_end_idx, p_min, p_max, uv_min, uv_max, true);

    if (push_texture_id)
        PopTextureID();
}


//-----------------------------------------------------------------------------
// [SECTION] ImDrawListSplitter
//-----------------------------------------------------------------------------
// FIXME: This may be a little confusing, trying to be a little too low-level/optimal instead of just doing vector swap..
//-----------------------------------------------------------------------------

void ImDrawListSplitter::ClearFreeMemory()
{
    for (int i = 0; i < _Channels.Size; i++)
    {
        if (i == _Current)
            memset(&_Channels[i], 0, sizeof(_Channels[i]));  // Current channel is a copy of CmdBuffer/IdxBuffer, don't destruct again
        _Channels[i]._CmdBuffer.clear();
        _Channels[i]._IdxBuffer.clear();
    }
    _Current = 0;
    _Count = 1;
    _Channels.clear();
}

void ImDrawListSplitter::Split(ImDrawList* draw_list, int channels_count)
{
    IM_UNUSED(draw_list);
    IM_ASSERT(_Current == 0 && _Count <= 1 && "Nested channel splitting is not supported. Please use separate instances of ImDrawListSplitter.");
    int old_channels_count = _Channels.Size;
    if (old_channels_count < channels_count)
    {
        _Channels.reserve(channels_count); // Avoid over reserving since this is likely to stay stable
        _Channels.resize(channels_count);
    }
    _Count = channels_count;

    // Channels[] (24/32 bytes each) hold storage that we'll swap with draw_list->_CmdBuffer/_IdxBuffer
    // The content of Channels[0] at this point doesn't matter. We clear it to make state tidy in a debugger but we don't strictly need to.
    // When we switch to the next channel, we'll copy draw_list->_CmdBuffer/_IdxBuffer into Channels[0] and then Channels[1] into draw_list->CmdBuffer/_IdxBuffer
    memset(&_Channels[0], 0, sizeof(ImDrawChannel));
    for (int i = 1; i < channels_count; i++)
    {
        if (i >= old_channels_count)
        {
            IM_PLACEMENT_NEW(&_Channels[i]) ImDrawChannel();
        }
        else
        {
            _Channels[i]._CmdBuffer.resize(0);
            _Channels[i]._IdxBuffer.resize(0);
        }
    }
}

void ImDrawListSplitter::Merge(ImDrawList* draw_list)
{
    // Note that we never use or rely on _Channels.Size because it is merely a buffer that we never shrink back to 0 to keep all sub-buffers ready for use.
    if (_Count <= 1)
        return;

    SetCurrentChannel(draw_list, 0);
    draw_list->_PopUnusedDrawCmd();

    // Calculate our final buffer sizes. Also fix the incorrect IdxOffset values in each command.
    int new_cmd_buffer_count = 0;
    int new_idx_buffer_count = 0;
    ImDrawCmd* last_cmd = (_Count > 0 && draw_list->CmdBuffer.Size > 0) ? &draw_list->CmdBuffer.back() : NULL;
    int idx_offset = last_cmd ? last_cmd->IdxOffset + last_cmd->ElemCount : 0;
    for (int i = 1; i < _Count; i++)
    {
        ImDrawChannel& ch = _Channels[i];

        // Equivalent of PopUnusedDrawCmd() for this channel's cmdbuffer and except we don't need to test for UserCallback.
        if (ch._CmdBuffer.Size > 0 && ch._CmdBuffer.back().ElemCount == 0)
            ch._CmdBuffer.pop_back();

        if (ch._CmdBuffer.Size > 0 && last_cmd != NULL)
        {
            ImDrawCmd* next_cmd = &ch._CmdBuffer[0];
            if (ImDrawCmd_HeaderCompare(last_cmd, next_cmd) == 0 && last_cmd->UserCallback == NULL && next_cmd->UserCallback == NULL)
            {
                // Merge previous channel last draw command with current channel first draw command if matching.
                last_cmd->ElemCount += next_cmd->ElemCount;
                idx_offset += next_cmd->ElemCount;
                ch._CmdBuffer.erase(ch._CmdBuffer.Data); // FIXME-OPT: Improve for multiple merges.
            }
        }
        if (ch._CmdBuffer.Size > 0)
            last_cmd = &ch._CmdBuffer.back();
        new_cmd_buffer_count += ch._CmdBuffer.Size;
        new_idx_buffer_count += ch._IdxBuffer.Size;
        for (int cmd_n = 0; cmd_n < ch._CmdBuffer.Size; cmd_n++)
        {
            ch._CmdBuffer.Data[cmd_n].IdxOffset = idx_offset;
            idx_offset += ch._CmdBuffer.Data[cmd_n].ElemCount;
        }
    }
    draw_list->CmdBuffer.resize(draw_list->CmdBuffer.Size + new_cmd_buffer_count);
    draw_list->IdxBuffer.resize(draw_list->IdxBuffer.Size + new_idx_buffer_count);

    // Write commands and indices in order (they are fairly small structures, we don't copy vertices only indices)
    ImDrawCmd* cmd_write = draw_list->CmdBuffer.Data + draw_list->CmdBuffer.Size - new_cmd_buffer_count;
    ImDrawIdx* idx_write = draw_list->IdxBuffer.Data + draw_list->IdxBuffer.Size - new_idx_buffer_count;
    for (int i = 1; i < _Count; i++)
    {
        ImDrawChannel& ch = _Channels[i];
        if (int sz = ch._CmdBuffer.Size) { memcpy(cmd_write, ch._CmdBuffer.Data, sz * sizeof(ImDrawCmd)); cmd_write += sz; }
        if (int sz = ch._IdxBuffer.Size) { memcpy(idx_write, ch._IdxBuffer.Data, sz * sizeof(ImDrawIdx)); idx_write += sz; }
    }
    draw_list->_IdxWritePtr = idx_write;

    // Ensure there's always a non-callback draw command trailing the command-buffer
    if (draw_list->CmdBuffer.Size == 0 || draw_list->CmdBuffer.back().UserCallback != NULL)
        draw_list->AddDrawCmd();

    // If current command is used with different settings we need to add a new command
    ImDrawCmd* curr_cmd = &draw_list->CmdBuffer.Data[draw_list->CmdBuffer.Size - 1];
    if (curr_cmd->ElemCount == 0)
        ImDrawCmd_HeaderCopy(curr_cmd, &draw_list->_CmdHeader); // Copy ClipRect, TextureId, VtxOffset
    else if (ImDrawCmd_HeaderCompare(curr_cmd, &draw_list->_CmdHeader) != 0)
        draw_list->AddDrawCmd();

    _Count = 1;
}

void ImDrawListSplitter::SetCurrentChannel(ImDrawList* draw_list, int idx)
{
    IM_ASSERT(idx >= 0 && idx < _Count);
    if (_Current == idx)
        return;

    // Overwrite ImVector (12/16 bytes), four times. This is merely a silly optimization instead of doing .swap()
    memcpy(&_Channels.Data[_Current]._CmdBuffer, &draw_list->CmdBuffer, sizeof(draw_list->CmdBuffer));
    memcpy(&_Channels.Data[_Current]._IdxBuffer, &draw_list->IdxBuffer, sizeof(draw_list->IdxBuffer));
    _Current = idx;
    memcpy(&draw_list->CmdBuffer, &_Channels.Data[idx]._CmdBuffer, sizeof(draw_list->CmdBuffer));
    memcpy(&draw_list->IdxBuffer, &_Channels.Data[idx]._IdxBuffer, sizeof(draw_list->IdxBuffer));
    draw_list->_IdxWritePtr = draw_list->IdxBuffer.Data + draw_list->IdxBuffer.Size;

    // If current command is used with different settings we need to add a new command
    ImDrawCmd* curr_cmd = (draw_list->CmdBuffer.Size == 0) ? NULL : &draw_list->CmdBuffer.Data[draw_list->CmdBuffer.Size - 1];
    if (curr_cmd == NULL)
        draw_list->AddDrawCmd();
    else if (curr_cmd->ElemCount == 0)
        ImDrawCmd_HeaderCopy(curr_cmd, &draw_list->_CmdHeader); // Copy ClipRect, TextureId, VtxOffset
    else if (ImDrawCmd_HeaderCompare(curr_cmd, &draw_list->_CmdHeader) != 0)
        draw_list->AddDrawCmd();
}

//-----------------------------------------------------------------------------
// [SECTION] ImDrawData
//-----------------------------------------------------------------------------

// For backward compatibility: convert all buffers from indexed to de-indexed, in case you cannot render indexed. Note: this is slow and most likely a waste of resources. Always prefer indexed rendering!
void ImDrawData::DeIndexAllBuffers()
{
    ImVector<ImDrawVert> new_vtx_buffer;
    TotalVtxCount = TotalIdxCount = 0;
    for (int i = 0; i < CmdListsCount; i++)
    {
        ImDrawList* cmd_list = CmdLists[i];
        if (cmd_list->IdxBuffer.empty())
            continue;
        new_vtx_buffer.resize(cmd_list->IdxBuffer.Size);
        for (int j = 0; j < cmd_list->IdxBuffer.Size; j++)
            new_vtx_buffer[j] = cmd_list->VtxBuffer[cmd_list->IdxBuffer[j]];
        cmd_list->VtxBuffer.swap(new_vtx_buffer);
        cmd_list->IdxBuffer.resize(0);
        TotalVtxCount += cmd_list->VtxBuffer.Size;
    }
}

// Helper to scale the ClipRect field of each ImDrawCmd.
// Use if your final output buffer is at a different scale than draw_data->DisplaySize,
// or if there is a difference between your window resolution and framebuffer resolution.
void ImDrawData::ScaleClipRects(const ImVec2& fb_scale)
{
    for (int i = 0; i < CmdListsCount; i++)
    {
        ImDrawList* cmd_list = CmdLists[i];
        for (int cmd_i = 0; cmd_i < cmd_list->CmdBuffer.Size; cmd_i++)
        {
            ImDrawCmd* cmd = &cmd_list->CmdBuffer[cmd_i];
            cmd->ClipRect = ImVec4(cmd->ClipRect.x * fb_scale.x, cmd->ClipRect.y * fb_scale.y, cmd->ClipRect.z * fb_scale.x, cmd->ClipRect.w * fb_scale.y);
        }
    }
}

//-----------------------------------------------------------------------------
// [SECTION] Helpers ShadeVertsXXX functions
//-----------------------------------------------------------------------------

// Generic linear color gradient, write to RGB fields, leave A untouched.
void ImGui::ShadeVertsLinearColorGradientKeepAlpha(ImDrawList* draw_list, int vert_start_idx, int vert_end_idx, ImVec2 gradient_p0, ImVec2 gradient_p1, ImU32 col0, ImU32 col1)
{
    ImVec2 gradient_extent = gradient_p1 - gradient_p0;
    float gradient_inv_length2 = 1.0f / ImLengthSqr(gradient_extent);
    ImDrawVert* vert_start = draw_list->VtxBuffer.Data + vert_start_idx;
    ImDrawVert* vert_end = draw_list->VtxBuffer.Data + vert_end_idx;
    const int col0_r = (int)(col0 >> IM_COL32_R_SHIFT) & 0xFF;
    const int col0_g = (int)(col0 >> IM_COL32_G_SHIFT) & 0xFF;
    const int col0_b = (int)(col0 >> IM_COL32_B_SHIFT) & 0xFF;
    const int col_delta_r = ((int)(col1 >> IM_COL32_R_SHIFT) & 0xFF) - col0_r;
    const int col_delta_g = ((int)(col1 >> IM_COL32_G_SHIFT) & 0xFF) - col0_g;
    const int col_delta_b = ((int)(col1 >> IM_COL32_B_SHIFT) & 0xFF) - col0_b;
    for (ImDrawVert* vert = vert_start; vert < vert_end; vert++)
    {
        float d = ImDot(vert->pos - gradient_p0, gradient_extent);
        float t = ImClamp(d * gradient_inv_length2, 0.0f, 1.0f);
        int r = (int)(col0_r + col_delta_r * t);
        int g = (int)(col0_g + col_delta_g * t);
        int b = (int)(col0_b + col_delta_b * t);
        vert->col = (r << IM_COL32_R_SHIFT) | (g << IM_COL32_G_SHIFT) | (b << IM_COL32_B_SHIFT) | (vert->col & IM_COL32_A_MASK);
    }
}

// Distribute UV over (a, b) rectangle
void ImGui::ShadeVertsLinearUV(ImDrawList* draw_list, int vert_start_idx, int vert_end_idx, const ImVec2& a, const ImVec2& b, const ImVec2& uv_a, const ImVec2& uv_b, bool clamp)
{
    const ImVec2 size = b - a;
    const ImVec2 uv_size = uv_b - uv_a;
    const ImVec2 scale = ImVec2(
        size.x != 0.0f ? (uv_size.x / size.x) : 0.0f,
        size.y != 0.0f ? (uv_size.y / size.y) : 0.0f);

    ImDrawVert* vert_start = draw_list->VtxBuffer.Data + vert_start_idx;
    ImDrawVert* vert_end = draw_list->VtxBuffer.Data + vert_end_idx;
    if (clamp)
    {
        const ImVec2 min = ImMin(uv_a, uv_b);
        const ImVec2 max = ImMax(uv_a, uv_b);
        for (ImDrawVert* vertex = vert_start; vertex < vert_end; ++vertex)
            vertex->uv = ImClamp(uv_a + ImMul(ImVec2(vertex->pos.x, vertex->pos.y) - a, scale), min, max);
    }
    else
    {
        for (ImDrawVert* vertex = vert_start; vertex < vert_end; ++vertex)
            vertex->uv = uv_a + ImMul(ImVec2(vertex->pos.x, vertex->pos.y) - a, scale);
    }
}

//-----------------------------------------------------------------------------
// [SECTION] ImFontConfig
//-----------------------------------------------------------------------------

ImFontConfig::ImFontConfig()
{
    memset(this, 0, sizeof(*this));
    FontDataOwnedByAtlas = true;
    OversampleH = 3; // FIXME: 2 may be a better default?
    OversampleV = 1;
    GlyphMaxAdvanceX = FLT_MAX;
    RasterizerMultiply = 1.0f;
    EllipsisChar = (ImWchar)-1;
}

//-----------------------------------------------------------------------------
// [SECTION] ImFontAtlas
//-----------------------------------------------------------------------------

// A work of art lies ahead! (. = white layer, X = black layer, others are blank)
// The 2x2 white texels on the top left are the ones we'll use everywhere in Dear ImGui to render filled shapes.
const int FONT_ATLAS_DEFAULT_TEX_DATA_W = 108; // Actual texture will be 2 times that + 1 spacing.
const int FONT_ATLAS_DEFAULT_TEX_DATA_H = 27;
static const char FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[FONT_ATLAS_DEFAULT_TEX_DATA_W * FONT_ATLAS_DEFAULT_TEX_DATA_H + 1] =
{
    "..-         -XXXXXXX-    X    -           X           -XXXXXXX          -          XXXXXXX-     XX          "
    "..-         -X.....X-   X.X   -          X.X          -X.....X          -          X.....X-    X..X         "
    "---         -XXX.XXX-  X...X  -         X...X         -X....X           -           X....X-    X..X         "
    "X           -  X.X  - X.....X -        X.....X        -X...X            -            X...X-    X..X         "
    "XX          -  X.X  -X.......X-       X.......X       -X..X.X           -           X.X..X-    X..X         "
    "X.X         -  X.X  -XXXX.XXXX-       XXXX.XXXX       -X.X X.X          -          X.X X.X-    X..XXX       "
    "X..X        -  X.X  -   X.X   -          X.X          -XX   X.X         -         X.X   XX-    X..X..XXX    "
    "X...X       -  X.X  -   X.X   -    XX    X.X    XX    -      X.X        -        X.X      -    X..X..X..XX  "
    "X....X      -  X.X  -   X.X   -   X.X    X.X    X.X   -       X.X       -       X.X       -    X..X..X..X.X "
    "X.....X     -  X.X  -   X.X   -  X..X    X.X    X..X  -        X.X      -      X.X        -XXX X..X..X..X..X"
    "X......X    -  X.X  -   X.X   - X...XXXXXX.XXXXXX...X -         X.X   XX-XX   X.X         -X..XX........X..X"
    "X.......X   -  X.X  -   X.X   -X.....................X-          X.X X.X-X.X X.X          -X...X...........X"
    "X........X  -  X.X  -   X.X   - X...XXXXXX.XXXXXX...X -           X.X..X-X..X.X           - X..............X"
    "X.........X -XXX.XXX-   X.X   -  X..X    X.X    X..X  -            X...X-X...X            -  X.............X"
    "X..........X-X.....X-   X.X   -   X.X    X.X    X.X   -           X....X-X....X           -  X.............X"
    "X......XXXXX-XXXXXXX-   X.X   -    XX    X.X    XX    -          X.....X-X.....X          -   X............X"
    "X...X..X    ---------   X.X   -          X.X          -          XXXXXXX-XXXXXXX          -   X...........X "
    "X..X X..X   -       -XXXX.XXXX-       XXXX.XXXX       -------------------------------------    X..........X "
    "X.X  X..X   -       -X.......X-       X.......X       -    XX           XX    -           -    X..........X "
    "XX    X..X  -       - X.....X -        X.....X        -   X.X           X.X   -           -     X........X  "
    "      X..X          -  X...X  -         X...X         -  X..X           X..X  -           -     X........X  "
    "       XX           -   X.X   -          X.X          - X...XXXXXXXXXXXXX...X -           -     XXXXXXXXXX  "
    "------------        -    X    -           X           -X.....................X-           ------------------"
    "                    ----------------------------------- X...XXXXXXXXXXXXX...X -                             "
    "                                                      -  X..X           X..X  -                             "
    "                                                      -   X.X           X.X   -                             "
    "                                                      -    XX           XX    -                             "
};

static const ImVec2 FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[ImGuiMouseCursor_COUNT][3] =
{
    // Pos ........ Size ......... Offset ......
    { ImVec2( 0,3), ImVec2(12,19), ImVec2( 0, 0) }, // ImGuiMouseCursor_Arrow
    { ImVec2(13,0), ImVec2( 7,16), ImVec2( 1, 8) }, // ImGuiMouseCursor_TextInput
    { ImVec2(31,0), ImVec2(23,23), ImVec2(11,11) }, // ImGuiMouseCursor_ResizeAll
    { ImVec2(21,0), ImVec2( 9,23), ImVec2( 4,11) }, // ImGuiMouseCursor_ResizeNS
    { ImVec2(55,18),ImVec2(23, 9), ImVec2(11, 4) }, // ImGuiMouseCursor_ResizeEW
    { ImVec2(73,0), ImVec2(17,17), ImVec2( 8, 8) }, // ImGuiMouseCursor_ResizeNESW
    { ImVec2(55,0), ImVec2(17,17), ImVec2( 8, 8) }, // ImGuiMouseCursor_ResizeNWSE
    { ImVec2(91,0), ImVec2(17,22), ImVec2( 5, 0) }, // ImGuiMouseCursor_Hand
};

ImFontAtlas::ImFontAtlas()
{
    memset(this, 0, sizeof(*this));
    TexGlyphPadding = 1;
    PackIdMouseCursors = PackIdLines = -1;
}

ImFontAtlas::~ImFontAtlas()
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    Clear();
}

void    ImFontAtlas::ClearInputData()
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    for (int i = 0; i < ConfigData.Size; i++)
        if (ConfigData[i].FontData && ConfigData[i].FontDataOwnedByAtlas)
        {
            IM_FREE(ConfigData[i].FontData);
            ConfigData[i].FontData = NULL;
        }

    // When clearing this we lose access to the font name and other information used to build the font.
    for (int i = 0; i < Fonts.Size; i++)
        if (Fonts[i]->ConfigData >= ConfigData.Data && Fonts[i]->ConfigData < ConfigData.Data + ConfigData.Size)
        {
            Fonts[i]->ConfigData = NULL;
            Fonts[i]->ConfigDataCount = 0;
        }
    ConfigData.clear();
    CustomRects.clear();
    PackIdMouseCursors = PackIdLines = -1;
}

void    ImFontAtlas::ClearTexData()
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    if (TexPixelsAlpha8)
        IM_FREE(TexPixelsAlpha8);
    if (TexPixelsRGBA32)
        IM_FREE(TexPixelsRGBA32);
    TexPixelsAlpha8 = NULL;
    TexPixelsRGBA32 = NULL;
    TexPixelsUseColors = false;
}

void    ImFontAtlas::ClearFonts()
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    for (int i = 0; i < Fonts.Size; i++)
        IM_DELETE(Fonts[i]);
    Fonts.clear();
}

void    ImFontAtlas::Clear()
{
    ClearInputData();
    ClearTexData();
    ClearFonts();
}

void    ImFontAtlas::GetTexDataAsAlpha8(unsigned char** out_pixels, int* out_width, int* out_height, int* out_bytes_per_pixel)
{
    // Build atlas on demand
    if (TexPixelsAlpha8 == NULL)
    {
        if (ConfigData.empty())
            AddFontDefault();
        Build();
    }

    *out_pixels = TexPixelsAlpha8;
    if (out_width) *out_width = TexWidth;
    if (out_height) *out_height = TexHeight;
    if (out_bytes_per_pixel) *out_bytes_per_pixel = 1;
}

void    ImFontAtlas::GetTexDataAsRGBA32(unsigned char** out_pixels, int* out_width, int* out_height, int* out_bytes_per_pixel)
{
    // Convert to RGBA32 format on demand
    // Although it is likely to be the most commonly used format, our font rendering is 1 channel / 8 bpp
    if (!TexPixelsRGBA32)
    {
        unsigned char* pixels = NULL;
        GetTexDataAsAlpha8(&pixels, NULL, NULL);
        if (pixels)
        {
            TexPixelsRGBA32 = (unsigned int*)IM_ALLOC((size_t)TexWidth * (size_t)TexHeight * 4);
            const unsigned char* src = pixels;
            unsigned int* dst = TexPixelsRGBA32;
            for (int n = TexWidth * TexHeight; n > 0; n--)
                *dst++ = IM_COL32(255, 255, 255, (unsigned int)(*src++));
        }
    }

    *out_pixels = (unsigned char*)TexPixelsRGBA32;
    if (out_width) *out_width = TexWidth;
    if (out_height) *out_height = TexHeight;
    if (out_bytes_per_pixel) *out_bytes_per_pixel = 4;
}

ImFont* ImFontAtlas::AddFont(const ImFontConfig* font_cfg)
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    IM_ASSERT(font_cfg->FontData != NULL && font_cfg->FontDataSize > 0);
    IM_ASSERT(font_cfg->SizePixels > 0.0f);

    // Create new font
    if (!font_cfg->MergeMode)
        Fonts.push_back(IM_NEW(ImFont));
    else
        IM_ASSERT(!Fonts.empty() && "Cannot use MergeMode for the first font"); // When using MergeMode make sure that a font has already been added before. You can use ImGui::GetIO().Fonts->AddFontDefault() to add the default imgui font.

    ConfigData.push_back(*font_cfg);
    ImFontConfig& new_font_cfg = ConfigData.back();
    if (new_font_cfg.DstFont == NULL)
        new_font_cfg.DstFont = Fonts.back();
    if (!new_font_cfg.FontDataOwnedByAtlas)
    {
        new_font_cfg.FontData = IM_ALLOC(new_font_cfg.FontDataSize);
        new_font_cfg.FontDataOwnedByAtlas = true;
        memcpy(new_font_cfg.FontData, font_cfg->FontData, (size_t)new_font_cfg.FontDataSize);
    }

    if (new_font_cfg.DstFont->EllipsisChar == (ImWchar)-1)
        new_font_cfg.DstFont->EllipsisChar = font_cfg->EllipsisChar;

    // Invalidate texture
    ClearTexData();
    return new_font_cfg.DstFont;
}

// Default font TTF is compressed with stb_compress then base85 encoded (see misc/fonts/binary_to_compressed_c.cpp for encoder)
static unsigned int stb_decompress_length(const unsigned char* input);
static unsigned int stb_decompress(unsigned char* output, const unsigned char* input, unsigned int length);
static const char*  GetDefaultCompressedFontDataTTFBase85();
static unsigned int Decode85Byte(char c)                                    { return c >= '\\' ? c-36 : c-35; }
static void         Decode85(const unsigned char* src, unsigned char* dst)
{
    while (*src)
    {
        unsigned int tmp = Decode85Byte(src[0]) + 85 * (Decode85Byte(src[1]) + 85 * (Decode85Byte(src[2]) + 85 * (Decode85Byte(src[3]) + 85 * Decode85Byte(src[4]))));
        dst[0] = ((tmp >> 0) & 0xFF); dst[1] = ((tmp >> 8) & 0xFF); dst[2] = ((tmp >> 16) & 0xFF); dst[3] = ((tmp >> 24) & 0xFF);   // We can't assume little-endianness.
        src += 5;
        dst += 4;
    }
}

// Load embedded ProggyClean.ttf at size 13, disable oversampling
ImFont* ImFontAtlas::AddFontDefault(const ImFontConfig* font_cfg_template)
{
    ImFontConfig font_cfg = font_cfg_template ? *font_cfg_template : ImFontConfig();
    if (!font_cfg_template)
    {
        font_cfg.OversampleH = font_cfg.OversampleV = 1;
        font_cfg.PixelSnapH = true;
    }
    if (font_cfg.SizePixels <= 0.0f)
        font_cfg.SizePixels = 13.0f * 1.0f;
    if (font_cfg.Name[0] == '\0')
        ImFormatString(font_cfg.Name, IM_ARRAYSIZE(font_cfg.Name), "ProggyClean.ttf, %dpx", (int)font_cfg.SizePixels);
    font_cfg.EllipsisChar = (ImWchar)0x0085;
    font_cfg.GlyphOffset.y = 1.0f * IM_FLOOR(font_cfg.SizePixels / 13.0f);  // Add +1 offset per 13 units

    const char* ttf_compressed_base85 = GetDefaultCompressedFontDataTTFBase85();
    const ImWchar* glyph_ranges = font_cfg.GlyphRanges != NULL ? font_cfg.GlyphRanges : GetGlyphRangesDefault();
    ImFont* font = AddFontFromMemoryCompressedBase85TTF(ttf_compressed_base85, font_cfg.SizePixels, &font_cfg, glyph_ranges);
    return font;
}

ImFont* ImFontAtlas::AddFontFromFileTTF(const char* filename, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    size_t data_size = 0;
    void* data = ImFileLoadToMemory(filename, "rb", &data_size, 0);
    if (!data)
    {
        IM_ASSERT_USER_ERROR(0, "Could not load font file!");
        return NULL;
    }
    ImFontConfig font_cfg = font_cfg_template ? *font_cfg_template : ImFontConfig();
    if (font_cfg.Name[0] == '\0')
    {
        // Store a short copy of filename into into the font name for convenience
        const char* p;
        for (p = filename + strlen(filename); p > filename && p[-1] != '/' && p[-1] != '\\'; p--) {}
        ImFormatString(font_cfg.Name, IM_ARRAYSIZE(font_cfg.Name), "%s, %.0fpx", p, size_pixels);
    }
    return AddFontFromMemoryTTF(data, (int)data_size, size_pixels, &font_cfg, glyph_ranges);
}

// NB: Transfer ownership of 'ttf_data' to ImFontAtlas, unless font_cfg_template->FontDataOwnedByAtlas == false. Owned TTF buffer will be deleted after Build().
ImFont* ImFontAtlas::AddFontFromMemoryTTF(void* ttf_data, int ttf_size, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");
    ImFontConfig font_cfg = font_cfg_template ? *font_cfg_template : ImFontConfig();
    IM_ASSERT(font_cfg.FontData == NULL);
    font_cfg.FontData = ttf_data;
    font_cfg.FontDataSize = ttf_size;
    font_cfg.SizePixels = size_pixels;
    if (glyph_ranges)
        font_cfg.GlyphRanges = glyph_ranges;
    return AddFont(&font_cfg);
}

ImFont* ImFontAtlas::AddFontFromMemoryCompressedTTF(const void* compressed_ttf_data, int compressed_ttf_size, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)
{
    const unsigned int buf_decompressed_size = stb_decompress_length((const unsigned char*)compressed_ttf_data);
    unsigned char* buf_decompressed_data = (unsigned char*)IM_ALLOC(buf_decompressed_size);
    stb_decompress(buf_decompressed_data, (const unsigned char*)compressed_ttf_data, (unsigned int)compressed_ttf_size);

    ImFontConfig font_cfg = font_cfg_template ? *font_cfg_template : ImFontConfig();
    IM_ASSERT(font_cfg.FontData == NULL);
    font_cfg.FontDataOwnedByAtlas = true;
    return AddFontFromMemoryTTF(buf_decompressed_data, (int)buf_decompressed_size, size_pixels, &font_cfg, glyph_ranges);
}

ImFont* ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(const char* compressed_ttf_data_base85, float size_pixels, const ImFontConfig* font_cfg, const ImWchar* glyph_ranges)
{
    int compressed_ttf_size = (((int)strlen(compressed_ttf_data_base85) + 4) / 5) * 4;
    void* compressed_ttf = IM_ALLOC((size_t)compressed_ttf_size);
    Decode85((const unsigned char*)compressed_ttf_data_base85, (unsigned char*)compressed_ttf);
    ImFont* font = AddFontFromMemoryCompressedTTF(compressed_ttf, compressed_ttf_size, size_pixels, font_cfg, glyph_ranges);
    IM_FREE(compressed_ttf);
    return font;
}

int ImFontAtlas::AddCustomRectRegular(int width, int height)
{
    IM_ASSERT(width > 0 && width <= 0xFFFF);
    IM_ASSERT(height > 0 && height <= 0xFFFF);
    ImFontAtlasCustomRect r;
    r.Width = (unsigned short)width;
    r.Height = (unsigned short)height;
    CustomRects.push_back(r);
    return CustomRects.Size - 1; // Return index
}

int ImFontAtlas::AddCustomRectFontGlyph(ImFont* font, ImWchar id, int width, int height, float advance_x, const ImVec2& offset)
{
#ifdef IMGUI_USE_WCHAR32
    IM_ASSERT(id <= IM_UNICODE_CODEPOINT_MAX);
#endif
    IM_ASSERT(font != NULL);
    IM_ASSERT(width > 0 && width <= 0xFFFF);
    IM_ASSERT(height > 0 && height <= 0xFFFF);
    ImFontAtlasCustomRect r;
    r.Width = (unsigned short)width;
    r.Height = (unsigned short)height;
    r.GlyphID = id;
    r.GlyphAdvanceX = advance_x;
    r.GlyphOffset = offset;
    r.Font = font;
    CustomRects.push_back(r);
    return CustomRects.Size - 1; // Return index
}

void ImFontAtlas::CalcCustomRectUV(const ImFontAtlasCustomRect* rect, ImVec2* out_uv_min, ImVec2* out_uv_max) const
{
    IM_ASSERT(TexWidth > 0 && TexHeight > 0);   // Font atlas needs to be built before we can calculate UV coordinates
    IM_ASSERT(rect->IsPacked());                // Make sure the rectangle has been packed
    *out_uv_min = ImVec2((float)rect->X * TexUvScale.x, (float)rect->Y * TexUvScale.y);
    *out_uv_max = ImVec2((float)(rect->X + rect->Width) * TexUvScale.x, (float)(rect->Y + rect->Height) * TexUvScale.y);
}

bool ImFontAtlas::GetMouseCursorTexData(ImGuiMouseCursor cursor_type, ImVec2* out_offset, ImVec2* out_size, ImVec2 out_uv_border[2], ImVec2 out_uv_fill[2])
{
    if (cursor_type <= ImGuiMouseCursor_None || cursor_type >= ImGuiMouseCursor_COUNT)
        return false;
    if (Flags & ImFontAtlasFlags_NoMouseCursors)
        return false;

    IM_ASSERT(PackIdMouseCursors != -1);
    ImFontAtlasCustomRect* r = GetCustomRectByIndex(PackIdMouseCursors);
    ImVec2 pos = FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[cursor_type][0] + ImVec2((float)r->X, (float)r->Y);
    ImVec2 size = FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[cursor_type][1];
    *out_size = size;
    *out_offset = FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[cursor_type][2];
    out_uv_border[0] = (pos) * TexUvScale;
    out_uv_border[1] = (pos + size) * TexUvScale;
    pos.x += FONT_ATLAS_DEFAULT_TEX_DATA_W + 1;
    out_uv_fill[0] = (pos) * TexUvScale;
    out_uv_fill[1] = (pos + size) * TexUvScale;
    return true;
}

bool    ImFontAtlas::Build()
{
    IM_ASSERT(!Locked && "Cannot modify a locked ImFontAtlas between NewFrame() and EndFrame/Render()!");

    // Select builder
    // - Note that we do not reassign to atlas->FontBuilderIO, since it is likely to point to static data which
    //   may mess with some hot-reloading schemes. If you need to assign to this (for dynamic selection) AND are
    //   using a hot-reloading scheme that messes up static data, store your own instance of ImFontBuilderIO somewhere
    //   and point to it instead of pointing directly to return value of the GetBuilderXXX functions.
    const ImFontBuilderIO* builder_io = FontBuilderIO;
    if (builder_io == NULL)
    {
#ifdef IMGUI_ENABLE_FREETYPE
        builder_io = ImGuiFreeType::GetBuilderForFreeType();
#elif defined(IMGUI_ENABLE_STB_TRUETYPE)
        builder_io = ImFontAtlasGetBuilderForStbTruetype();
#else
        IM_ASSERT(0); // Invalid Build function
#endif
    }

    // Build
    return builder_io->FontBuilder_Build(this);
}

void    ImFontAtlasBuildMultiplyCalcLookupTable(unsigned char out_table[256], float in_brighten_factor)
{
    for (unsigned int i = 0; i < 256; i++)
    {
        unsigned int value = (unsigned int)(i * in_brighten_factor);
        out_table[i] = value > 255 ? 255 : (value & 0xFF);
    }
}

void    ImFontAtlasBuildMultiplyRectAlpha8(const unsigned char table[256], unsigned char* pixels, int x, int y, int w, int h, int stride)
{
    unsigned char* data = pixels + x + y * stride;
    for (int j = h; j > 0; j--, data += stride)
        for (int i = 0; i < w; i++)
            data[i] = table[data[i]];
}

#ifdef IMGUI_ENABLE_STB_TRUETYPE
// Temporary data for one source font (multiple source fonts can be merged into one destination ImFont)
// (C++03 doesn't allow instancing ImVector<> with function-local types so we declare the type here.)
struct ImFontBuildSrcData
{
    stbtt_fontinfo      FontInfo;
    stbtt_pack_range    PackRange;          // Hold the list of codepoints to pack (essentially points to Codepoints.Data)
    stbrp_rect*         Rects;              // Rectangle to pack. We first fill in their size and the packer will give us their position.
    stbtt_packedchar*   PackedChars;        // Output glyphs
    const ImWchar*      SrcRanges;          // Ranges as requested by user (user is allowed to request too much, e.g. 0x0020..0xFFFF)
    int                 DstIndex;           // Index into atlas->Fonts[] and dst_tmp_array[]
    int                 GlyphsHighest;      // Highest requested codepoint
    int                 GlyphsCount;        // Glyph count (excluding missing glyphs and glyphs already set by an earlier source font)
    ImBitVector         GlyphsSet;          // Glyph bit map (random access, 1-bit per codepoint. This will be a maximum of 8KB)
    ImVector<int>       GlyphsList;         // Glyph codepoints list (flattened version of GlyphsMap)
};

// Temporary data for one destination ImFont* (multiple source fonts can be merged into one destination ImFont)
struct ImFontBuildDstData
{
    int                 SrcCount;           // Number of source fonts targeting this destination font.
    int                 GlyphsHighest;
    int                 GlyphsCount;
    ImBitVector         GlyphsSet;          // This is used to resolve collision when multiple sources are merged into a same destination font.
};

static void UnpackBitVectorToFlatIndexList(const ImBitVector* in, ImVector<int>* out)
{
    IM_ASSERT(sizeof(in->Storage.Data[0]) == sizeof(int));
    const ImU32* it_begin = in->Storage.begin();
    const ImU32* it_end = in->Storage.end();
    for (const ImU32* it = it_begin; it < it_end; it++)
        if (ImU32 entries_32 = *it)
            for (ImU32 bit_n = 0; bit_n < 32; bit_n++)
                if (entries_32 & ((ImU32)1 << bit_n))
                    out->push_back((int)(((it - it_begin) << 5) + bit_n));
}

static bool ImFontAtlasBuildWithStbTruetype(ImFontAtlas* atlas)
{
    IM_ASSERT(atlas->ConfigData.Size > 0);

    ImFontAtlasBuildInit(atlas);

    // Clear atlas
    atlas->TexID = (ImTextureID)NULL;
    atlas->TexWidth = atlas->TexHeight = 0;
    atlas->TexUvScale = ImVec2(0.0f, 0.0f);
    atlas->TexUvWhitePixel = ImVec2(0.0f, 0.0f);
    atlas->ClearTexData();

    // Temporary storage for building
    ImVector<ImFontBuildSrcData> src_tmp_array;
    ImVector<ImFontBuildDstData> dst_tmp_array;
    src_tmp_array.resize(atlas->ConfigData.Size);
    dst_tmp_array.resize(atlas->Fonts.Size);
    memset(src_tmp_array.Data, 0, (size_t)src_tmp_array.size_in_bytes());
    memset(dst_tmp_array.Data, 0, (size_t)dst_tmp_array.size_in_bytes());

    // 1. Initialize font loading structure, check font data validity
    for (int src_i = 0; src_i < atlas->ConfigData.Size; src_i++)
    {
        ImFontBuildSrcData& src_tmp = src_tmp_array[src_i];
        ImFontConfig& cfg = atlas->ConfigData[src_i];
        IM_ASSERT(cfg.DstFont && (!cfg.DstFont->IsLoaded() || cfg.DstFont->ContainerAtlas == atlas));

        // Find index from cfg.DstFont (we allow the user to set cfg.DstFont. Also it makes casual debugging nicer than when storing indices)
        src_tmp.DstIndex = -1;
        for (int output_i = 0; output_i < atlas->Fonts.Size && src_tmp.DstIndex == -1; output_i++)
            if (cfg.DstFont == atlas->Fonts[output_i])
                src_tmp.DstIndex = output_i;
        if (src_tmp.DstIndex == -1)
        {
            IM_ASSERT(src_tmp.DstIndex != -1); // cfg.DstFont not pointing within atlas->Fonts[] array?
            return false;
        }
        // Initialize helper structure for font loading and verify that the TTF/OTF data is correct
        const int font_offset = stbtt_GetFontOffsetForIndex((unsigned char*)cfg.FontData, cfg.FontNo);
        IM_ASSERT(font_offset >= 0 && "FontData is incorrect, or FontNo cannot be found.");
        if (!stbtt_InitFont(&src_tmp.FontInfo, (unsigned char*)cfg.FontData, font_offset))
            return false;

        // Measure highest codepoints
        ImFontBuildDstData& dst_tmp = dst_tmp_array[src_tmp.DstIndex];
        src_tmp.SrcRanges = cfg.GlyphRanges ? cfg.GlyphRanges : atlas->GetGlyphRangesDefault();
        for (const ImWchar* src_range = src_tmp.SrcRanges; src_range[0] && src_range[1]; src_range += 2)
            src_tmp.GlyphsHighest = ImMax(src_tmp.GlyphsHighest, (int)src_range[1]);
        dst_tmp.SrcCount++;
        dst_tmp.GlyphsHighest = ImMax(dst_tmp.GlyphsHighest, src_tmp.GlyphsHighest);
    }

    // 2. For every requested codepoint, check for their presence in the font data, and handle redundancy or overlaps between source fonts to avoid unused glyphs.
    int total_glyphs_count = 0;
    for (int src_i = 0; src_i < src_tmp_array.Size; src_i++)
    {
        ImFontBuildSrcData& src_tmp = src_tmp_array[src_i];
        ImFontBuildDstData& dst_tmp = dst_tmp_array[src_tmp.DstIndex];
        src_tmp.GlyphsSet.Create(src_tmp.GlyphsHighest + 1);
        if (dst_tmp.GlyphsSet.Storage.empty())
            dst_tmp.GlyphsSet.Create(dst_tmp.GlyphsHighest + 1);

        for (const ImWchar* src_range = src_tmp.SrcRanges; src_range[0] && src_range[1]; src_range += 2)
            for (unsigned int codepoint = src_range[0]; codepoint <= src_range[1]; codepoint++)
            {
                if (dst_tmp.GlyphsSet.TestBit(codepoint))    // Don't overwrite existing glyphs. We could make this an option for MergeMode (e.g. MergeOverwrite==true)
                    continue;
                if (!stbtt_FindGlyphIndex(&src_tmp.FontInfo, codepoint))    // It is actually in the font?
                    continue;

                // Add to avail set/counters
                src_tmp.GlyphsCount++;
                dst_tmp.GlyphsCount++;
                src_tmp.GlyphsSet.SetBit(codepoint);
                dst_tmp.GlyphsSet.SetBit(codepoint);
                total_glyphs_count++;
            }
    }

    // 3. Unpack our bit map into a flat list (we now have all the Unicode points that we know are requested _and_ available _and_ not overlapping another)
    for (int src_i = 0; src_i < src_tmp_array.Size; src_i++)
    {
        ImFontBuildSrcData& src_tmp = src_tmp_array[src_i];
        src_tmp.GlyphsList.reserve(src_tmp.GlyphsCount);
        UnpackBitVectorToFlatIndexList(&src_tmp.GlyphsSet, &src_tmp.GlyphsList);
        src_tmp.GlyphsSet.Clear();
        IM_ASSERT(src_tmp.GlyphsList.Size == src_tmp.GlyphsCount);
    }
    for (int dst_i = 0; dst_i < dst_tmp_array.Size; dst_i++)
        dst_tmp_array[dst_i].GlyphsSet.Clear();
    dst_tmp_array.clear();

    // Allocate packing character data and flag packed characters buffer as non-packed (x0=y0=x1=y1=0)
    // (We technically don't need to zero-clear buf_rects, but let's do it for the sake of sanity)
    ImVector<stbrp_rect> buf_rects;
    ImVector<stbtt_packedchar> buf_packedchars;
    buf_rects.resize(total_glyphs_count);
    buf_packedchars.resize(total_glyphs_count);
    memset(buf_rects.Data, 0, (size_t)buf_rects.size_in_bytes());
    memset(buf_packedchars.Data, 0, (size_t)buf_packedchars.size_in_bytes());

    // 4. Gather glyphs sizes so we can pack them in our virtual canvas.
    int total_surface = 0;
    int buf_rects_out_n = 0;
    int buf_packedchars_out_n = 0;
    for (int src_i = 0; src_i < src_tmp_array.Size; src_i++)
    {
        ImFontBuildSrcData& src_tmp = src_tmp_array[src_i];
        if (src_tmp.GlyphsCount == 0)
            continue;

        src_tmp.Rects = &buf_rects[buf_rects_out_n];
        src_tmp.PackedChars = &buf_packedchars[buf_packedchars_out_n];
        buf_rects_out_n += src_tmp.GlyphsCount;
        buf_packedchars_out_n += src_tmp.GlyphsCount;

        // Convert our ranges in the format stb_truetype wants
        ImFontConfig& cfg = atlas->ConfigData[src_i];
        src_tmp.PackRange.font_size = cfg.SizePixels;
        src_tmp.PackRange.first_unicode_codepoint_in_range = 0;
        src_tmp.PackRange.array_of_unicode_codepoints = src_tmp.GlyphsList.Data;
        src_tmp.PackRange.num_chars = src_tmp.GlyphsList.Size;
        src_tmp.PackRange.chardata_for_range = src_tmp.PackedChars;
        src_tmp.PackRange.h_oversample = (unsigned char)cfg.OversampleH;
        src_tmp.PackRange.v_oversample = (unsigned char)cfg.OversampleV;

        // Gather the sizes of all rectangles we will need to pack (this loop is based on stbtt_PackFontRangesGatherRects)
        const float scale = (cfg.SizePixels > 0) ? stbtt_ScaleForPixelHeight(&src_tmp.FontInfo, cfg.SizePixels) : stbtt_ScaleForMappingEmToPixels(&src_tmp.FontInfo, -cfg.SizePixels);
        const int padding = atlas->TexGlyphPadding;
        for (int glyph_i = 0; glyph_i < src_tmp.GlyphsList.Size; glyph_i++)
        {
            int x0, y0, x1, y1;
            const int glyph_index_in_font = stbtt_FindGlyphIndex(&src_tmp.FontInfo, src_tmp.GlyphsList[glyph_i]);
            IM_ASSERT(glyph_index_in_font != 0);
            stbtt_GetGlyphBitmapBoxSubpixel(&src_tmp.FontInfo, glyph_index_in_font, scale * cfg.OversampleH, scale * cfg.OversampleV, 0, 0, &x0, &y0, &x1, &y1);
            src_tmp.Rects[glyph_i].w = (stbrp_coord)(x1 - x0 + padding + cfg.OversampleH - 1);
            src_tmp.Rects[glyph_i].h = (stbrp_coord)(y1 - y0 + padding + cfg.OversampleV - 1);
            total_surface += src_tmp.Rects[glyph_i].w * src_tmp.Rects[glyph_i].h;
        }
    }

    // We need a width for the skyline algorithm, any width!
    // The exact width doesn't really matter much, but some API/GPU have texture size limitations and increasing width can decrease height.
    // User can override TexDesiredWidth and TexGlyphPadding if they wish, otherwise we use a simple heuristic to select the width based on expected surface.
    const int surface_sqrt = (int)ImSqrt((float)total_surface) + 1;
    atlas->TexHeight = 0;
    if (atlas->TexDesiredWidth > 0)
        atlas->TexWidth = atlas->TexDesiredWidth;
    else
        atlas->TexWidth = (surface_sqrt >= 4096 * 0.7f) ? 4096 : (surface_sqrt >= 2048 * 0.7f) ? 2048 : (surface_sqrt >= 1024 * 0.7f) ? 1024 : 512;

    // 5. Start packing
    // Pack our extra data rectangles first, so it will be on the upper-left corner of our texture (UV will have small values).
    const int TEX_HEIGHT_MAX = 1024 * 32;
    stbtt_pack_context spc = {};
    stbtt_PackBegin(&spc, NULL, atlas->TexWidth, TEX_HEIGHT_MAX, 0, atlas->TexGlyphPadding, NULL);
    ImFontAtlasBuildPackCustomRects(atlas, spc.pack_info);

    // 6. Pack each source font. No rendering yet, we are working with rectangles in an infinitely tall texture at this point.
    for (int src_i = 0; src_i < src_tmp_array.Size; src_i++)
    {
        ImFontBuildSrcData& src_tmp = src_tmp_array[src_i];
        if (src_tmp.GlyphsCount == 0)
            continue;

        stbrp_pack_rects((stbrp_context*)spc.pack_info, src_tmp.Rects, src_tmp.GlyphsCount);

        // Extend texture height and mark missing glyphs as non-packed so we won't render them.
        // FIXME: We are not handling packing failure here (would happen if we got off TEX_HEIGHT_MAX or if a single if larger than TexWidth?)
        for (int glyph_i = 0; glyph_i < src_tmp.GlyphsCount; glyph_i++)
            if (src_tmp.Rects[glyph_i].was_packed)
                atlas->TexHeight = ImMax(atlas->TexHeight, src_tmp.Rects[glyph_i].y + src_tmp.Rects[glyph_i].h);
    }

    // 7. Allocate texture
    atlas->TexHeight = (atlas->Flags & ImFontAtlasFlags_NoPowerOfTwoHeight) ? (atlas->TexHeight + 1) : ImUpperPowerOfTwo(atlas->TexHeight);
    atlas->TexUvScale = ImVec2(1.0f / atlas->TexWidth, 1.0f / atlas->TexHeight);
    atlas->TexPixelsAlpha8 = (unsigned char*)IM_ALLOC(atlas->TexWidth * atlas->TexHeight);
    memset(atlas->TexPixelsAlpha8, 0, atlas->TexWidth * atlas->TexHeight);
    spc.pixels = atlas->TexPixelsAlpha8;
    spc.height = atlas->TexHeight;

    // 8. Render/rasterize font characters into the texture
    for (int src_i = 0; src_i < src_tmp_array.Size; src_i++)
    {
        ImFontConfig& cfg = atlas->ConfigData[src_i];
        ImFontBuildSrcData& src_tmp = src_tmp_array[src_i];
        if (src_tmp.GlyphsCount == 0)
            continue;

        stbtt_PackFontRangesRenderIntoRects(&spc, &src_tmp.FontInfo, &src_tmp.PackRange, 1, src_tmp.Rects);

        // Apply multiply operator
        if (cfg.RasterizerMultiply != 1.0f)
        {
            unsigned char multiply_table[256];
            ImFontAtlasBuildMultiplyCalcLookupTable(multiply_table, cfg.RasterizerMultiply);
            stbrp_rect* r = &src_tmp.Rects[0];
            for (int glyph_i = 0; glyph_i < src_tmp.GlyphsCount; glyph_i++, r++)
                if (r->was_packed)
                    ImFontAtlasBuildMultiplyRectAlpha8(multiply_table, atlas->TexPixelsAlpha8, r->x, r->y, r->w, r->h, atlas->TexWidth * 1);
        }
        src_tmp.Rects = NULL;
    }

    // End packing
    stbtt_PackEnd(&spc);
    buf_rects.clear();

    // 9. Setup ImFont and glyphs for runtime
    for (int src_i = 0; src_i < src_tmp_array.Size; src_i++)
    {
        ImFontBuildSrcData& src_tmp = src_tmp_array[src_i];
        if (src_tmp.GlyphsCount == 0)
            continue;

        // When merging fonts with MergeMode=true:
        // - We can have multiple input fonts writing into a same destination font.
        // - dst_font->ConfigData is != from cfg which is our source configuration.
        ImFontConfig& cfg = atlas->ConfigData[src_i];
        ImFont* dst_font = cfg.DstFont;

        const float font_scale = stbtt_ScaleForPixelHeight(&src_tmp.FontInfo, cfg.SizePixels);
        int unscaled_ascent, unscaled_descent, unscaled_line_gap;
        stbtt_GetFontVMetrics(&src_tmp.FontInfo, &unscaled_ascent, &unscaled_descent, &unscaled_line_gap);

        const float ascent = ImFloor(unscaled_ascent * font_scale + ((unscaled_ascent > 0.0f) ? +1 : -1));
        const float descent = ImFloor(unscaled_descent * font_scale + ((unscaled_descent > 0.0f) ? +1 : -1));
        ImFontAtlasBuildSetupFont(atlas, dst_font, &cfg, ascent, descent);
        const float font_off_x = cfg.GlyphOffset.x;
        const float font_off_y = cfg.GlyphOffset.y + IM_ROUND(dst_font->Ascent);

        for (int glyph_i = 0; glyph_i < src_tmp.GlyphsCount; glyph_i++)
        {
            // Register glyph
            const int codepoint = src_tmp.GlyphsList[glyph_i];
            const stbtt_packedchar& pc = src_tmp.PackedChars[glyph_i];
            stbtt_aligned_quad q;
            float unused_x = 0.0f, unused_y = 0.0f;
            stbtt_GetPackedQuad(src_tmp.PackedChars, atlas->TexWidth, atlas->TexHeight, glyph_i, &unused_x, &unused_y, &q, 0);
            dst_font->AddGlyph(&cfg, (ImWchar)codepoint, q.x0 + font_off_x, q.y0 + font_off_y, q.x1 + font_off_x, q.y1 + font_off_y, q.s0, q.t0, q.s1, q.t1, pc.xadvance);
        }
    }

    // Cleanup temporary (ImVector doesn't honor destructor)
    for (int src_i = 0; src_i < src_tmp_array.Size; src_i++)
        src_tmp_array[src_i].~ImFontBuildSrcData();

    ImFontAtlasBuildFinish(atlas);
    return true;
}

const ImFontBuilderIO* ImFontAtlasGetBuilderForStbTruetype()
{
    static ImFontBuilderIO io;
    io.FontBuilder_Build = ImFontAtlasBuildWithStbTruetype;
    return &io;
}

#endif // IMGUI_ENABLE_STB_TRUETYPE

void ImFontAtlasBuildSetupFont(ImFontAtlas* atlas, ImFont* font, ImFontConfig* font_config, float ascent, float descent)
{
    if (!font_config->MergeMode)
    {
        font->ClearOutputData();
        font->FontSize = font_config->SizePixels;
        font->ConfigData = font_config;
        font->ConfigDataCount = 0;
        font->ContainerAtlas = atlas;
        font->Ascent = ascent;
        font->Descent = descent;
    }
    font->ConfigDataCount++;
}

void ImFontAtlasBuildPackCustomRects(ImFontAtlas* atlas, void* stbrp_context_opaque)
{
    stbrp_context* pack_context = (stbrp_context*)stbrp_context_opaque;
    IM_ASSERT(pack_context != NULL);

    ImVector<ImFontAtlasCustomRect>& user_rects = atlas->CustomRects;
    IM_ASSERT(user_rects.Size >= 1); // We expect at least the default custom rects to be registered, else something went wrong.

    ImVector<stbrp_rect> pack_rects;
    pack_rects.resize(user_rects.Size);
    memset(pack_rects.Data, 0, (size_t)pack_rects.size_in_bytes());
    for (int i = 0; i < user_rects.Size; i++)
    {
        pack_rects[i].w = user_rects[i].Width;
        pack_rects[i].h = user_rects[i].Height;
    }
    stbrp_pack_rects(pack_context, &pack_rects[0], pack_rects.Size);
    for (int i = 0; i < pack_rects.Size; i++)
        if (pack_rects[i].was_packed)
        {
            user_rects[i].X = pack_rects[i].x;
            user_rects[i].Y = pack_rects[i].y;
            IM_ASSERT(pack_rects[i].w == user_rects[i].Width && pack_rects[i].h == user_rects[i].Height);
            atlas->TexHeight = ImMax(atlas->TexHeight, pack_rects[i].y + pack_rects[i].h);
        }
}

void ImFontAtlasBuildRender8bppRectFromString(ImFontAtlas* atlas, int x, int y, int w, int h, const char* in_str, char in_marker_char, unsigned char in_marker_pixel_value)
{
    IM_ASSERT(x >= 0 && x + w <= atlas->TexWidth);
    IM_ASSERT(y >= 0 && y + h <= atlas->TexHeight);
    unsigned char* out_pixel = atlas->TexPixelsAlpha8 + x + (y * atlas->TexWidth);
    for (int off_y = 0; off_y < h; off_y++, out_pixel += atlas->TexWidth, in_str += w)
        for (int off_x = 0; off_x < w; off_x++)
            out_pixel[off_x] = (in_str[off_x] == in_marker_char) ? in_marker_pixel_value : 0x00;
}

void ImFontAtlasBuildRender32bppRectFromString(ImFontAtlas* atlas, int x, int y, int w, int h, const char* in_str, char in_marker_char, unsigned int in_marker_pixel_value)
{
    IM_ASSERT(x >= 0 && x + w <= atlas->TexWidth);
    IM_ASSERT(y >= 0 && y + h <= atlas->TexHeight);
    unsigned int* out_pixel = atlas->TexPixelsRGBA32 + x + (y * atlas->TexWidth);
    for (int off_y = 0; off_y < h; off_y++, out_pixel += atlas->TexWidth, in_str += w)
        for (int off_x = 0; off_x < w; off_x++)
            out_pixel[off_x] = (in_str[off_x] == in_marker_char) ? in_marker_pixel_value : IM_COL32_BLACK_TRANS;
}

static void ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas* atlas)
{
    ImFontAtlasCustomRect* r = atlas->GetCustomRectByIndex(atlas->PackIdMouseCursors);
    IM_ASSERT(r->IsPacked());

    const int w = atlas->TexWidth;
    if (!(atlas->Flags & ImFontAtlasFlags_NoMouseCursors))
    {
        // Render/copy pixels
        IM_ASSERT(r->Width == FONT_ATLAS_DEFAULT_TEX_DATA_W * 2 + 1 && r->Height == FONT_ATLAS_DEFAULT_TEX_DATA_H);
        const int x_for_white = r->X;
        const int x_for_black = r->X + FONT_ATLAS_DEFAULT_TEX_DATA_W + 1;
        if (atlas->TexPixelsAlpha8 != NULL)
        {
            ImFontAtlasBuildRender8bppRectFromString(atlas, x_for_white, r->Y, FONT_ATLAS_DEFAULT_TEX_DATA_W, FONT_ATLAS_DEFAULT_TEX_DATA_H, FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, '.', 0xFF);
            ImFontAtlasBuildRender8bppRectFromString(atlas, x_for_black, r->Y, FONT_ATLAS_DEFAULT_TEX_DATA_W, FONT_ATLAS_DEFAULT_TEX_DATA_H, FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, 'X', 0xFF);
        }
        else
        {
            ImFontAtlasBuildRender32bppRectFromString(atlas, x_for_white, r->Y, FONT_ATLAS_DEFAULT_TEX_DATA_W, FONT_ATLAS_DEFAULT_TEX_DATA_H, FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, '.', IM_COL32_WHITE);
            ImFontAtlasBuildRender32bppRectFromString(atlas, x_for_black, r->Y, FONT_ATLAS_DEFAULT_TEX_DATA_W, FONT_ATLAS_DEFAULT_TEX_DATA_H, FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS, 'X', IM_COL32_WHITE);
        }
    }
    else
    {
        // Render 4 white pixels
        IM_ASSERT(r->Width == 2 && r->Height == 2);
        const int offset = (int)r->X + (int)r->Y * w;
        if (atlas->TexPixelsAlpha8 != NULL)
        {
            atlas->TexPixelsAlpha8[offset] = atlas->TexPixelsAlpha8[offset + 1] = atlas->TexPixelsAlpha8[offset + w] = atlas->TexPixelsAlpha8[offset + w + 1] = 0xFF;
        }
        else
        {
            atlas->TexPixelsRGBA32[offset] = atlas->TexPixelsRGBA32[offset + 1] = atlas->TexPixelsRGBA32[offset + w] = atlas->TexPixelsRGBA32[offset + w + 1] = IM_COL32_WHITE;
        }
    }
    atlas->TexUvWhitePixel = ImVec2((r->X + 0.5f) * atlas->TexUvScale.x, (r->Y + 0.5f) * atlas->TexUvScale.y);
}

static void ImFontAtlasBuildRenderLinesTexData(ImFontAtlas* atlas)
{
    if (atlas->Flags & ImFontAtlasFlags_NoBakedLines)
        return;

    // This generates a triangular shape in the texture, with the various line widths stacked on top of each other to allow interpolation between them
    ImFontAtlasCustomRect* r = atlas->GetCustomRectByIndex(atlas->PackIdLines);
    IM_ASSERT(r->IsPacked());
    for (unsigned int n = 0; n < IM_DRAWLIST_TEX_LINES_WIDTH_MAX + 1; n++) // +1 because of the zero-width row
    {
        // Each line consists of at least two empty pixels at the ends, with a line of solid pixels in the middle
        unsigned int y = n;
        unsigned int line_width = n;
        unsigned int pad_left = (r->Width - line_width) / 2;
        unsigned int pad_right = r->Width - (pad_left + line_width);

        // Write each slice
        IM_ASSERT(pad_left + line_width + pad_right == r->Width && y < r->Height); // Make sure we're inside the texture bounds before we start writing pixels
        if (atlas->TexPixelsAlpha8 != NULL)
        {
            unsigned char* write_ptr = &atlas->TexPixelsAlpha8[r->X + ((r->Y + y) * atlas->TexWidth)];
            for (unsigned int i = 0; i < pad_left; i++)
                *(write_ptr + i) = 0x00;

            for (unsigned int i = 0; i < line_width; i++)
                *(write_ptr + pad_left + i) = 0xFF;

            for (unsigned int i = 0; i < pad_right; i++)
                *(write_ptr + pad_left + line_width + i) = 0x00;
        }
        else
        {
            unsigned int* write_ptr = &atlas->TexPixelsRGBA32[r->X + ((r->Y + y) * atlas->TexWidth)];
            for (unsigned int i = 0; i < pad_left; i++)
                *(write_ptr + i) = IM_COL32_BLACK_TRANS;

            for (unsigned int i = 0; i < line_width; i++)
                *(write_ptr + pad_left + i) = IM_COL32_WHITE;

            for (unsigned int i = 0; i < pad_right; i++)
                *(write_ptr + pad_left + line_width + i) = IM_COL32_BLACK_TRANS;
        }

        // Calculate UVs for this line
        ImVec2 uv0 = ImVec2((float)(r->X + pad_left - 1), (float)(r->Y + y)) * atlas->TexUvScale;
        ImVec2 uv1 = ImVec2((float)(r->X + pad_left + line_width + 1), (float)(r->Y + y + 1)) * atlas->TexUvScale;
        float half_v = (uv0.y + uv1.y) * 0.5f; // Calculate a constant V in the middle of the row to avoid sampling artifacts
        atlas->TexUvLines[n] = ImVec4(uv0.x, half_v, uv1.x, half_v);
    }
}

// Note: this is called / shared by both the stb_truetype and the FreeType builder
void ImFontAtlasBuildInit(ImFontAtlas* atlas)
{
    // Register texture region for mouse cursors or standard white pixels
    if (atlas->PackIdMouseCursors < 0)
    {
        if (!(atlas->Flags & ImFontAtlasFlags_NoMouseCursors))
            atlas->PackIdMouseCursors = atlas->AddCustomRectRegular(FONT_ATLAS_DEFAULT_TEX_DATA_W * 2 + 1, FONT_ATLAS_DEFAULT_TEX_DATA_H);
        else
            atlas->PackIdMouseCursors = atlas->AddCustomRectRegular(2, 2);
    }

    // Register texture region for thick lines
    // The +2 here is to give space for the end caps, whilst height +1 is to accommodate the fact we have a zero-width row
    if (atlas->PackIdLines < 0)
    {
        if (!(atlas->Flags & ImFontAtlasFlags_NoBakedLines))
            atlas->PackIdLines = atlas->AddCustomRectRegular(IM_DRAWLIST_TEX_LINES_WIDTH_MAX + 2, IM_DRAWLIST_TEX_LINES_WIDTH_MAX + 1);
    }
}

// This is called/shared by both the stb_truetype and the FreeType builder.
void ImFontAtlasBuildFinish(ImFontAtlas* atlas)
{
    // Render into our custom data blocks
    IM_ASSERT(atlas->TexPixelsAlpha8 != NULL || atlas->TexPixelsRGBA32 != NULL);
    ImFontAtlasBuildRenderDefaultTexData(atlas);
    ImFontAtlasBuildRenderLinesTexData(atlas);

    // Register custom rectangle glyphs
    for (int i = 0; i < atlas->CustomRects.Size; i++)
    {
        const ImFontAtlasCustomRect* r = &atlas->CustomRects[i];
        if (r->Font == NULL || r->GlyphID == 0)
            continue;

        // Will ignore ImFontConfig settings: GlyphMinAdvanceX, GlyphMinAdvanceY, GlyphExtraSpacing, PixelSnapH
        IM_ASSERT(r->Font->ContainerAtlas == atlas);
        ImVec2 uv0, uv1;
        atlas->CalcCustomRectUV(r, &uv0, &uv1);
        r->Font->AddGlyph(NULL, (ImWchar)r->GlyphID, r->GlyphOffset.x, r->GlyphOffset.y, r->GlyphOffset.x + r->Width, r->GlyphOffset.y + r->Height, uv0.x, uv0.y, uv1.x, uv1.y, r->GlyphAdvanceX);
    }

    // Build all fonts lookup tables
    for (int i = 0; i < atlas->Fonts.Size; i++)
        if (atlas->Fonts[i]->DirtyLookupTables)
            atlas->Fonts[i]->BuildLookupTable();

    // Ellipsis character is required for rendering elided text. We prefer using U+2026 (horizontal ellipsis).
    // However some old fonts may contain ellipsis at U+0085. Here we auto-detect most suitable ellipsis character.
    // FIXME: Also note that 0x2026 is currently seldom included in our font ranges. Because of this we are more likely to use three individual dots.
    for (int i = 0; i < atlas->Fonts.size(); i++)
    {
        ImFont* font = atlas->Fonts[i];
        if (font->EllipsisChar != (ImWchar)-1)
            continue;
        const ImWchar ellipsis_variants[] = { (ImWchar)0x2026, (ImWchar)0x0085 };
        for (int j = 0; j < IM_ARRAYSIZE(ellipsis_variants); j++)
            if (font->FindGlyphNoFallback(ellipsis_variants[j]) != NULL) // Verify glyph exists
            {
                font->EllipsisChar = ellipsis_variants[j];
                break;
            }
    }
}

// Retrieve list of range (2 int per range, values are inclusive)
const ImWchar*   ImFontAtlas::GetGlyphRangesDefault()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0,
    };
    return &ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesKorean()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0x3131, 0x3163, // Korean alphabets
        0xAC00, 0xD7A3, // Korean characters
        0,
    };
    return &ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesChineseFull()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0x2000, 0x206F, // General Punctuation
        0x3000, 0x30FF, // CJK Symbols and Punctuations, Hiragana, Katakana
        0x31F0, 0x31FF, // Katakana Phonetic Extensions
        0xFF00, 0xFFEF, // Half-width characters
        0x4e00, 0x9FAF, // CJK Ideograms
        0,
    };
    return &ranges[0];
}

static void UnpackAccumulativeOffsetsIntoRanges(int base_codepoint, const short* accumulative_offsets, int accumulative_offsets_count, ImWchar* out_ranges)
{
    for (int n = 0; n < accumulative_offsets_count; n++, out_ranges += 2)
    {
        out_ranges[0] = out_ranges[1] = (ImWchar)(base_codepoint + accumulative_offsets[n]);
        base_codepoint += accumulative_offsets[n];
    }
    out_ranges[0] = 0;
}

//-------------------------------------------------------------------------
// [SECTION] ImFontAtlas glyph ranges helpers
//-------------------------------------------------------------------------

const ImWchar*  ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon()
{
    // Store 2500 regularly used characters for Simplified Chinese.
    // Sourced from https://zh.wiktionary.org/wiki/%E9%99%84%E5%BD%95:%E7%8E%B0%E4%BB%A3%E6%B1%89%E8%AF%AD%E5%B8%B8%E7%94%A8%E5%AD%97%E8%A1%A8
    // This table covers 97.97% of all characters used during the month in July, 1987.
    // You can use ImFontGlyphRangesBuilder to create your own ranges derived from this, by merging existing ranges or adding new characters.
    // (Stored as accumulative offsets from the initial unicode codepoint 0x4E00. This encoding is designed to helps us compact the source code size.)
    static const short accumulative_offsets_from_0x4E00[] =
    {
        0,1,2,4,1,1,1,1,2,1,3,2,1,2,2,1,1,1,1,1,5,2,1,2,3,3,3,2,2,4,1,1,1,2,1,5,2,3,1,2,1,2,1,1,2,1,1,2,2,1,4,1,1,1,1,5,10,1,2,19,2,1,2,1,2,1,2,1,2,
        1,5,1,6,3,2,1,2,2,1,1,1,4,8,5,1,1,4,1,1,3,1,2,1,5,1,2,1,1,1,10,1,1,5,2,4,6,1,4,2,2,2,12,2,1,1,6,1,1,1,4,1,1,4,6,5,1,4,2,2,4,10,7,1,1,4,2,4,
        2,1,4,3,6,10,12,5,7,2,14,2,9,1,1,6,7,10,4,7,13,1,5,4,8,4,1,1,2,28,5,6,1,1,5,2,5,20,2,2,9,8,11,2,9,17,1,8,6,8,27,4,6,9,20,11,27,6,68,2,2,1,1,
        1,2,1,2,2,7,6,11,3,3,1,1,3,1,2,1,1,1,1,1,3,1,1,8,3,4,1,5,7,2,1,4,4,8,4,2,1,2,1,1,4,5,6,3,6,2,12,3,1,3,9,2,4,3,4,1,5,3,3,1,3,7,1,5,1,1,1,1,2,
        3,4,5,2,3,2,6,1,1,2,1,7,1,7,3,4,5,15,2,2,1,5,3,22,19,2,1,1,1,1,2,5,1,1,1,6,1,1,12,8,2,9,18,22,4,1,1,5,1,16,1,2,7,10,15,1,1,6,2,4,1,2,4,1,6,
        1,1,3,2,4,1,6,4,5,1,2,1,1,2,1,10,3,1,3,2,1,9,3,2,5,7,2,19,4,3,6,1,1,1,1,1,4,3,2,1,1,1,2,5,3,1,1,1,2,2,1,1,2,1,1,2,1,3,1,1,1,3,7,1,4,1,1,2,1,
        1,2,1,2,4,4,3,8,1,1,1,2,1,3,5,1,3,1,3,4,6,2,2,14,4,6,6,11,9,1,15,3,1,28,5,2,5,5,3,1,3,4,5,4,6,14,3,2,3,5,21,2,7,20,10,1,2,19,2,4,28,28,2,3,
        2,1,14,4,1,26,28,42,12,40,3,52,79,5,14,17,3,2,2,11,3,4,6,3,1,8,2,23,4,5,8,10,4,2,7,3,5,1,1,6,3,1,2,2,2,5,28,1,1,7,7,20,5,3,29,3,17,26,1,8,4,
        27,3,6,11,23,5,3,4,6,13,24,16,6,5,10,25,35,7,3,2,3,3,14,3,6,2,6,1,4,2,3,8,2,1,1,3,3,3,4,1,1,13,2,2,4,5,2,1,14,14,1,2,2,1,4,5,2,3,1,14,3,12,
        3,17,2,16,5,1,2,1,8,9,3,19,4,2,2,4,17,25,21,20,28,75,1,10,29,103,4,1,2,1,1,4,2,4,1,2,3,24,2,2,2,1,1,2,1,3,8,1,1,1,2,1,1,3,1,1,1,6,1,5,3,1,1,
        1,3,4,1,1,5,2,1,5,6,13,9,16,1,1,1,1,3,2,3,2,4,5,2,5,2,2,3,7,13,7,2,2,1,1,1,1,2,3,3,2,1,6,4,9,2,1,14,2,14,2,1,18,3,4,14,4,11,41,15,23,15,23,
        176,1,3,4,1,1,1,1,5,3,1,2,3,7,3,1,1,2,1,2,4,4,6,2,4,1,9,7,1,10,5,8,16,29,1,1,2,2,3,1,3,5,2,4,5,4,1,1,2,2,3,3,7,1,6,10,1,17,1,44,4,6,2,1,1,6,
        5,4,2,10,1,6,9,2,8,1,24,1,2,13,7,8,8,2,1,4,1,3,1,3,3,5,2,5,10,9,4,9,12,2,1,6,1,10,1,1,7,7,4,10,8,3,1,13,4,3,1,6,1,3,5,2,1,2,17,16,5,2,16,6,
        1,4,2,1,3,3,6,8,5,11,11,1,3,3,2,4,6,10,9,5,7,4,7,4,7,1,1,4,2,1,3,6,8,7,1,6,11,5,5,3,24,9,4,2,7,13,5,1,8,82,16,61,1,1,1,4,2,2,16,10,3,8,1,1,
        6,4,2,1,3,1,1,1,4,3,8,4,2,2,1,1,1,1,1,6,3,5,1,1,4,6,9,2,1,1,1,2,1,7,2,1,6,1,5,4,4,3,1,8,1,3,3,1,3,2,2,2,2,3,1,6,1,2,1,2,1,3,7,1,8,2,1,2,1,5,
        2,5,3,5,10,1,2,1,1,3,2,5,11,3,9,3,5,1,1,5,9,1,2,1,5,7,9,9,8,1,3,3,3,6,8,2,3,2,1,1,32,6,1,2,15,9,3,7,13,1,3,10,13,2,14,1,13,10,2,1,3,10,4,15,
        2,15,15,10,1,3,9,6,9,32,25,26,47,7,3,2,3,1,6,3,4,3,2,8,5,4,1,9,4,2,2,19,10,6,2,3,8,1,2,2,4,2,1,9,4,4,4,6,4,8,9,2,3,1,1,1,1,3,5,5,1,3,8,4,6,
        2,1,4,12,1,5,3,7,13,2,5,8,1,6,1,2,5,14,6,1,5,2,4,8,15,5,1,23,6,62,2,10,1,1,8,1,2,2,10,4,2,2,9,2,1,1,3,2,3,1,5,3,3,2,1,3,8,1,1,1,11,3,1,1,4,
        3,7,1,14,1,2,3,12,5,2,5,1,6,7,5,7,14,11,1,3,1,8,9,12,2,1,11,8,4,4,2,6,10,9,13,1,1,3,1,5,1,3,2,4,4,1,18,2,3,14,11,4,29,4,2,7,1,3,13,9,2,2,5,
        3,5,20,7,16,8,5,72,34,6,4,22,12,12,28,45,36,9,7,39,9,191,1,1,1,4,11,8,4,9,2,3,22,1,1,1,1,4,17,1,7,7,1,11,31,10,2,4,8,2,3,2,1,4,2,16,4,32,2,
        3,19,13,4,9,1,5,2,14,8,1,1,3,6,19,6,5,1,16,6,2,10,8,5,1,2,3,1,5,5,1,11,6,6,1,3,3,2,6,3,8,1,1,4,10,7,5,7,7,5,8,9,2,1,3,4,1,1,3,1,3,3,2,6,16,
        1,4,6,3,1,10,6,1,3,15,2,9,2,10,25,13,9,16,6,2,2,10,11,4,3,9,1,2,6,6,5,4,30,40,1,10,7,12,14,33,6,3,6,7,3,1,3,1,11,14,4,9,5,12,11,49,18,51,31,
        140,31,2,2,1,5,1,8,1,10,1,4,4,3,24,1,10,1,3,6,6,16,3,4,5,2,1,4,2,57,10,6,22,2,22,3,7,22,6,10,11,36,18,16,33,36,2,5,5,1,1,1,4,10,1,4,13,2,7,
        5,2,9,3,4,1,7,43,3,7,3,9,14,7,9,1,11,1,1,3,7,4,18,13,1,14,1,3,6,10,73,2,2,30,6,1,11,18,19,13,22,3,46,42,37,89,7,3,16,34,2,2,3,9,1,7,1,1,1,2,
        2,4,10,7,3,10,3,9,5,28,9,2,6,13,7,3,1,3,10,2,7,2,11,3,6,21,54,85,2,1,4,2,2,1,39,3,21,2,2,5,1,1,1,4,1,1,3,4,15,1,3,2,4,4,2,3,8,2,20,1,8,7,13,
        4,1,26,6,2,9,34,4,21,52,10,4,4,1,5,12,2,11,1,7,2,30,12,44,2,30,1,1,3,6,16,9,17,39,82,2,2,24,7,1,7,3,16,9,14,44,2,1,2,1,2,3,5,2,4,1,6,7,5,3,
        2,6,1,11,5,11,2,1,18,19,8,1,3,24,29,2,1,3,5,2,2,1,13,6,5,1,46,11,3,5,1,1,5,8,2,10,6,12,6,3,7,11,2,4,16,13,2,5,1,1,2,2,5,2,28,5,2,23,10,8,4,
        4,22,39,95,38,8,14,9,5,1,13,5,4,3,13,12,11,1,9,1,27,37,2,5,4,4,63,211,95,2,2,2,1,3,5,2,1,1,2,2,1,1,1,3,2,4,1,2,1,1,5,2,2,1,1,2,3,1,3,1,1,1,
        3,1,4,2,1,3,6,1,1,3,7,15,5,3,2,5,3,9,11,4,2,22,1,6,3,8,7,1,4,28,4,16,3,3,25,4,4,27,27,1,4,1,2,2,7,1,3,5,2,28,8,2,14,1,8,6,16,25,3,3,3,14,3,
        3,1,1,2,1,4,6,3,8,4,1,1,1,2,3,6,10,6,2,3,18,3,2,5,5,4,3,1,5,2,5,4,23,7,6,12,6,4,17,11,9,5,1,1,10,5,12,1,1,11,26,33,7,3,6,1,17,7,1,5,12,1,11,
        2,4,1,8,14,17,23,1,2,1,7,8,16,11,9,6,5,2,6,4,16,2,8,14,1,11,8,9,1,1,1,9,25,4,11,19,7,2,15,2,12,8,52,7,5,19,2,16,4,36,8,1,16,8,24,26,4,6,2,9,
        5,4,36,3,28,12,25,15,37,27,17,12,59,38,5,32,127,1,2,9,17,14,4,1,2,1,1,8,11,50,4,14,2,19,16,4,17,5,4,5,26,12,45,2,23,45,104,30,12,8,3,10,2,2,
        3,3,1,4,20,7,2,9,6,15,2,20,1,3,16,4,11,15,6,134,2,5,59,1,2,2,2,1,9,17,3,26,137,10,211,59,1,2,4,1,4,1,1,1,2,6,2,3,1,1,2,3,2,3,1,3,4,4,2,3,3,
        1,4,3,1,7,2,2,3,1,2,1,3,3,3,2,2,3,2,1,3,14,6,1,3,2,9,6,15,27,9,34,145,1,1,2,1,1,1,1,2,1,1,1,1,2,2,2,3,1,2,1,1,1,2,3,5,8,3,5,2,4,1,3,2,2,2,12,
        4,1,1,1,10,4,5,1,20,4,16,1,15,9,5,12,2,9,2,5,4,2,26,19,7,1,26,4,30,12,15,42,1,6,8,172,1,1,4,2,1,1,11,2,2,4,2,1,2,1,10,8,1,2,1,4,5,1,2,5,1,8,
        4,1,3,4,2,1,6,2,1,3,4,1,2,1,1,1,1,12,5,7,2,4,3,1,1,1,3,3,6,1,2,2,3,3,3,2,1,2,12,14,11,6,6,4,12,2,8,1,7,10,1,35,7,4,13,15,4,3,23,21,28,52,5,
        26,5,6,1,7,10,2,7,53,3,2,1,1,1,2,163,532,1,10,11,1,3,3,4,8,2,8,6,2,2,23,22,4,2,2,4,2,1,3,1,3,3,5,9,8,2,1,2,8,1,10,2,12,21,20,15,105,2,3,1,1,
        3,2,3,1,1,2,5,1,4,15,11,19,1,1,1,1,5,4,5,1,1,2,5,3,5,12,1,2,5,1,11,1,1,15,9,1,4,5,3,26,8,2,1,3,1,1,15,19,2,12,1,2,5,2,7,2,19,2,20,6,26,7,5,
        2,2,7,34,21,13,70,2,128,1,1,2,1,1,2,1,1,3,2,2,2,15,1,4,1,3,4,42,10,6,1,49,85,8,1,2,1,1,4,4,2,3,6,1,5,7,4,3,211,4,1,2,1,2,5,1,2,4,2,2,6,5,6,
        10,3,4,48,100,6,2,16,296,5,27,387,2,2,3,7,16,8,5,38,15,39,21,9,10,3,7,59,13,27,21,47,5,21,6
    };
    static ImWchar base_ranges[] = // not zero-terminated
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0x2000, 0x206F, // General Punctuation
        0x3000, 0x30FF, // CJK Symbols and Punctuations, Hiragana, Katakana
        0x31F0, 0x31FF, // Katakana Phonetic Extensions
        0xFF00, 0xFFEF  // Half-width characters
    };
    static ImWchar full_ranges[IM_ARRAYSIZE(base_ranges) + IM_ARRAYSIZE(accumulative_offsets_from_0x4E00) * 2 + 1] = { 0 };
    if (!full_ranges[0])
    {
        memcpy(full_ranges, base_ranges, sizeof(base_ranges));
        UnpackAccumulativeOffsetsIntoRanges(0x4E00, accumulative_offsets_from_0x4E00, IM_ARRAYSIZE(accumulative_offsets_from_0x4E00), full_ranges + IM_ARRAYSIZE(base_ranges));
    }
    return &full_ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesJapanese()
{
    // 2999 ideograms code points for Japanese
    // - 2136 Joyo (meaning "for regular use" or "for common use") Kanji code points
    // - 863 Jinmeiyo (meaning "for personal name") Kanji code points
    // - Sourced from the character information database of the Information-technology Promotion Agency, Japan
    //   - https://mojikiban.ipa.go.jp/mji/
    //   - Available under the terms of the Creative Commons Attribution-ShareAlike 2.1 Japan (CC BY-SA 2.1 JP).
    //     - https://creativecommons.org/licenses/by-sa/2.1/jp/deed.en
    //     - https://creativecommons.org/licenses/by-sa/2.1/jp/legalcode
    //   - You can generate this code by the script at:
    //     - https://github.com/vaiorabbit/everyday_use_kanji
    // - References:
    //   - List of Joyo Kanji
    //     - (Official list by the Agency for Cultural Affairs) https://www.bunka.go.jp/kokugo_nihongo/sisaku/joho/joho/kakuki/14/tosin02/index.html
    //     - (Wikipedia) https://en.wikipedia.org/wiki/List_of_j%C5%8Dy%C5%8D_kanji
    //   - List of Jinmeiyo Kanji
    //     - (Official list by the Ministry of Justice) http://www.moj.go.jp/MINJI/minji86.html
    //     - (Wikipedia) https://en.wikipedia.org/wiki/Jinmeiy%C5%8D_kanji
    // - Missing 1 Joyo Kanji: U+20B9F (Kun'yomi: Shikaru, On'yomi: Shitsu,shichi), see https://github.com/ocornut/imgui/pull/3627 for details.
    // You can use ImFontGlyphRangesBuilder to create your own ranges derived from this, by merging existing ranges or adding new characters.
    // (Stored as accumulative offsets from the initial unicode codepoint 0x4E00. This encoding is designed to helps us compact the source code size.)
    static const short accumulative_offsets_from_0x4E00[] =
    {
        0,1,2,4,1,1,1,1,2,1,3,3,2,2,1,5,3,5,7,5,6,1,2,1,7,2,6,3,1,8,1,1,4,1,1,18,2,11,2,6,2,1,2,1,5,1,2,1,3,1,2,1,2,3,3,1,1,2,3,1,1,1,12,7,9,1,4,5,1,
        1,2,1,10,1,1,9,2,2,4,5,6,9,3,1,1,1,1,9,3,18,5,2,2,2,2,1,6,3,7,1,1,1,1,2,2,4,2,1,23,2,10,4,3,5,2,4,10,2,4,13,1,6,1,9,3,1,1,6,6,7,6,3,1,2,11,3,
        2,2,3,2,15,2,2,5,4,3,6,4,1,2,5,2,12,16,6,13,9,13,2,1,1,7,16,4,7,1,19,1,5,1,2,2,7,7,8,2,6,5,4,9,18,7,4,5,9,13,11,8,15,2,1,1,1,2,1,2,2,1,2,2,8,
        2,9,3,3,1,1,4,4,1,1,1,4,9,1,4,3,5,5,2,7,5,3,4,8,2,1,13,2,3,3,1,14,1,1,4,5,1,3,6,1,5,2,1,1,3,3,3,3,1,1,2,7,6,6,7,1,4,7,6,1,1,1,1,1,12,3,3,9,5,
        2,6,1,5,6,1,2,3,18,2,4,14,4,1,3,6,1,1,6,3,5,5,3,2,2,2,2,12,3,1,4,2,3,2,3,11,1,7,4,1,2,1,3,17,1,9,1,24,1,1,4,2,2,4,1,2,7,1,1,1,3,1,2,2,4,15,1,
        1,2,1,1,2,1,5,2,5,20,2,5,9,1,10,8,7,6,1,1,1,1,1,1,6,2,1,2,8,1,1,1,1,5,1,1,3,1,1,1,1,3,1,1,12,4,1,3,1,1,1,1,1,10,3,1,7,5,13,1,2,3,4,6,1,1,30,
        2,9,9,1,15,38,11,3,1,8,24,7,1,9,8,10,2,1,9,31,2,13,6,2,9,4,49,5,2,15,2,1,10,2,1,1,1,2,2,6,15,30,35,3,14,18,8,1,16,10,28,12,19,45,38,1,3,2,3,
        13,2,1,7,3,6,5,3,4,3,1,5,7,8,1,5,3,18,5,3,6,1,21,4,24,9,24,40,3,14,3,21,3,2,1,2,4,2,3,1,15,15,6,5,1,1,3,1,5,6,1,9,7,3,3,2,1,4,3,8,21,5,16,4,
        5,2,10,11,11,3,6,3,2,9,3,6,13,1,2,1,1,1,1,11,12,6,6,1,4,2,6,5,2,1,1,3,3,6,13,3,1,1,5,1,2,3,3,14,2,1,2,2,2,5,1,9,5,1,1,6,12,3,12,3,4,13,2,14,
        2,8,1,17,5,1,16,4,2,2,21,8,9,6,23,20,12,25,19,9,38,8,3,21,40,25,33,13,4,3,1,4,1,2,4,1,2,5,26,2,1,1,2,1,3,6,2,1,1,1,1,1,1,2,3,1,1,1,9,2,3,1,1,
        1,3,6,3,2,1,1,6,6,1,8,2,2,2,1,4,1,2,3,2,7,3,2,4,1,2,1,2,2,1,1,1,1,1,3,1,2,5,4,10,9,4,9,1,1,1,1,1,1,5,3,2,1,6,4,9,6,1,10,2,31,17,8,3,7,5,40,1,
        7,7,1,6,5,2,10,7,8,4,15,39,25,6,28,47,18,10,7,1,3,1,1,2,1,1,1,3,3,3,1,1,1,3,4,2,1,4,1,3,6,10,7,8,6,2,2,1,3,3,2,5,8,7,9,12,2,15,1,1,4,1,2,1,1,
        1,3,2,1,3,3,5,6,2,3,2,10,1,4,2,8,1,1,1,11,6,1,21,4,16,3,1,3,1,4,2,3,6,5,1,3,1,1,3,3,4,6,1,1,10,4,2,7,10,4,7,4,2,9,4,3,1,1,1,4,1,8,3,4,1,3,1,
        6,1,4,2,1,4,7,2,1,8,1,4,5,1,1,2,2,4,6,2,7,1,10,1,1,3,4,11,10,8,21,4,6,1,3,5,2,1,2,28,5,5,2,3,13,1,2,3,1,4,2,1,5,20,3,8,11,1,3,3,3,1,8,10,9,2,
        10,9,2,3,1,1,2,4,1,8,3,6,1,7,8,6,11,1,4,29,8,4,3,1,2,7,13,1,4,1,6,2,6,12,12,2,20,3,2,3,6,4,8,9,2,7,34,5,1,18,6,1,1,4,4,5,7,9,1,2,2,4,3,4,1,7,
        2,2,2,6,2,3,25,5,3,6,1,4,6,7,4,2,1,4,2,13,6,4,4,3,1,5,3,4,4,3,2,1,1,4,1,2,1,1,3,1,11,1,6,3,1,7,3,6,2,8,8,6,9,3,4,11,3,2,10,12,2,5,11,1,6,4,5,
        3,1,8,5,4,6,6,3,5,1,1,3,2,1,2,2,6,17,12,1,10,1,6,12,1,6,6,19,9,6,16,1,13,4,4,15,7,17,6,11,9,15,12,6,7,2,1,2,2,15,9,3,21,4,6,49,18,7,3,2,3,1,
        6,8,2,2,6,2,9,1,3,6,4,4,1,2,16,2,5,2,1,6,2,3,5,3,1,2,5,1,2,1,9,3,1,8,6,4,8,11,3,1,1,1,1,3,1,13,8,4,1,3,2,2,1,4,1,11,1,5,2,1,5,2,5,8,6,1,1,7,
        4,3,8,3,2,7,2,1,5,1,5,2,4,7,6,2,8,5,1,11,4,5,3,6,18,1,2,13,3,3,1,21,1,1,4,1,4,1,1,1,8,1,2,2,7,1,2,4,2,2,9,2,1,1,1,4,3,6,3,12,5,1,1,1,5,6,3,2,
        4,8,2,2,4,2,7,1,8,9,5,2,3,2,1,3,2,13,7,14,6,5,1,1,2,1,4,2,23,2,1,1,6,3,1,4,1,15,3,1,7,3,9,14,1,3,1,4,1,1,5,8,1,3,8,3,8,15,11,4,14,4,4,2,5,5,
        1,7,1,6,14,7,7,8,5,15,4,8,6,5,6,2,1,13,1,20,15,11,9,2,5,6,2,11,2,6,2,5,1,5,8,4,13,19,25,4,1,1,11,1,34,2,5,9,14,6,2,2,6,1,1,14,1,3,14,13,1,6,
        12,21,14,14,6,32,17,8,32,9,28,1,2,4,11,8,3,1,14,2,5,15,1,1,1,1,3,6,4,1,3,4,11,3,1,1,11,30,1,5,1,4,1,5,8,1,1,3,2,4,3,17,35,2,6,12,17,3,1,6,2,
        1,1,12,2,7,3,3,2,1,16,2,8,3,6,5,4,7,3,3,8,1,9,8,5,1,2,1,3,2,8,1,2,9,12,1,1,2,3,8,3,24,12,4,3,7,5,8,3,3,3,3,3,3,1,23,10,3,1,2,2,6,3,1,16,1,16,
        22,3,10,4,11,6,9,7,7,3,6,2,2,2,4,10,2,1,1,2,8,7,1,6,4,1,3,3,3,5,10,12,12,2,3,12,8,15,1,1,16,6,6,1,5,9,11,4,11,4,2,6,12,1,17,5,13,1,4,9,5,1,11,
        2,1,8,1,5,7,28,8,3,5,10,2,17,3,38,22,1,2,18,12,10,4,38,18,1,4,44,19,4,1,8,4,1,12,1,4,31,12,1,14,7,75,7,5,10,6,6,13,3,2,11,11,3,2,5,28,15,6,18,
        18,5,6,4,3,16,1,7,18,7,36,3,5,3,1,7,1,9,1,10,7,2,4,2,6,2,9,7,4,3,32,12,3,7,10,2,23,16,3,1,12,3,31,4,11,1,3,8,9,5,1,30,15,6,12,3,2,2,11,19,9,
        14,2,6,2,3,19,13,17,5,3,3,25,3,14,1,1,1,36,1,3,2,19,3,13,36,9,13,31,6,4,16,34,2,5,4,2,3,3,5,1,1,1,4,3,1,17,3,2,3,5,3,1,3,2,3,5,6,3,12,11,1,3,
        1,2,26,7,12,7,2,14,3,3,7,7,11,25,25,28,16,4,36,1,2,1,6,2,1,9,3,27,17,4,3,4,13,4,1,3,2,2,1,10,4,2,4,6,3,8,2,1,18,1,1,24,2,2,4,33,2,3,63,7,1,6,
        40,7,3,4,4,2,4,15,18,1,16,1,1,11,2,41,14,1,3,18,13,3,2,4,16,2,17,7,15,24,7,18,13,44,2,2,3,6,1,1,7,5,1,7,1,4,3,3,5,10,8,2,3,1,8,1,1,27,4,2,1,
        12,1,2,1,10,6,1,6,7,5,2,3,7,11,5,11,3,6,6,2,3,15,4,9,1,1,2,1,2,11,2,8,12,8,5,4,2,3,1,5,2,2,1,14,1,12,11,4,1,11,17,17,4,3,2,5,5,7,3,1,5,9,9,8,
        2,5,6,6,13,13,2,1,2,6,1,2,2,49,4,9,1,2,10,16,7,8,4,3,2,23,4,58,3,29,1,14,19,19,11,11,2,7,5,1,3,4,6,2,18,5,12,12,17,17,3,3,2,4,1,6,2,3,4,3,1,
        1,1,1,5,1,1,9,1,3,1,3,6,1,8,1,1,2,6,4,14,3,1,4,11,4,1,3,32,1,2,4,13,4,1,2,4,2,1,3,1,11,1,4,2,1,4,4,6,3,5,1,6,5,7,6,3,23,3,5,3,5,3,3,13,3,9,10,
        1,12,10,2,3,18,13,7,160,52,4,2,2,3,2,14,5,4,12,4,6,4,1,20,4,11,6,2,12,27,1,4,1,2,2,7,4,5,2,28,3,7,25,8,3,19,3,6,10,2,2,1,10,2,5,4,1,3,4,1,5,
        3,2,6,9,3,6,2,16,3,3,16,4,5,5,3,2,1,2,16,15,8,2,6,21,2,4,1,22,5,8,1,1,21,11,2,1,11,11,19,13,12,4,2,3,2,3,6,1,8,11,1,4,2,9,5,2,1,11,2,9,1,1,2,
        14,31,9,3,4,21,14,4,8,1,7,2,2,2,5,1,4,20,3,3,4,10,1,11,9,8,2,1,4,5,14,12,14,2,17,9,6,31,4,14,1,20,13,26,5,2,7,3,6,13,2,4,2,19,6,2,2,18,9,3,5,
        12,12,14,4,6,2,3,6,9,5,22,4,5,25,6,4,8,5,2,6,27,2,35,2,16,3,7,8,8,6,6,5,9,17,2,20,6,19,2,13,3,1,1,1,4,17,12,2,14,7,1,4,18,12,38,33,2,10,1,1,
        2,13,14,17,11,50,6,33,20,26,74,16,23,45,50,13,38,33,6,6,7,4,4,2,1,3,2,5,8,7,8,9,3,11,21,9,13,1,3,10,6,7,1,2,2,18,5,5,1,9,9,2,68,9,19,13,2,5,
        1,4,4,7,4,13,3,9,10,21,17,3,26,2,1,5,2,4,5,4,1,7,4,7,3,4,2,1,6,1,1,20,4,1,9,2,2,1,3,3,2,3,2,1,1,1,20,2,3,1,6,2,3,6,2,4,8,1,3,2,10,3,5,3,4,4,
        3,4,16,1,6,1,10,2,4,2,1,1,2,10,11,2,2,3,1,24,31,4,10,10,2,5,12,16,164,15,4,16,7,9,15,19,17,1,2,1,1,5,1,1,1,1,1,3,1,4,3,1,3,1,3,1,2,1,1,3,3,7,
        2,8,1,2,2,2,1,3,4,3,7,8,12,92,2,10,3,1,3,14,5,25,16,42,4,7,7,4,2,21,5,27,26,27,21,25,30,31,2,1,5,13,3,22,5,6,6,11,9,12,1,5,9,7,5,5,22,60,3,5,
        13,1,1,8,1,1,3,3,2,1,9,3,3,18,4,1,2,3,7,6,3,1,2,3,9,1,3,1,3,2,1,3,1,1,1,2,1,11,3,1,6,9,1,3,2,3,1,2,1,5,1,1,4,3,4,1,2,2,4,4,1,7,2,1,2,2,3,5,13,
        18,3,4,14,9,9,4,16,3,7,5,8,2,6,48,28,3,1,1,4,2,14,8,2,9,2,1,15,2,4,3,2,10,16,12,8,7,1,1,3,1,1,1,2,7,4,1,6,4,38,39,16,23,7,15,15,3,2,12,7,21,
        37,27,6,5,4,8,2,10,8,8,6,5,1,2,1,3,24,1,16,17,9,23,10,17,6,1,51,55,44,13,294,9,3,6,2,4,2,2,15,1,1,1,13,21,17,68,14,8,9,4,1,4,9,3,11,7,1,1,1,
        5,6,3,2,1,1,1,2,3,8,1,2,2,4,1,5,5,2,1,4,3,7,13,4,1,4,1,3,1,1,1,5,5,10,1,6,1,5,2,1,5,2,4,1,4,5,7,3,18,2,9,11,32,4,3,3,2,4,7,11,16,9,11,8,13,38,
        32,8,4,2,1,1,2,1,2,4,4,1,1,1,4,1,21,3,11,1,16,1,1,6,1,3,2,4,9,8,57,7,44,1,3,3,13,3,10,1,1,7,5,2,7,21,47,63,3,15,4,7,1,16,1,1,2,8,2,3,42,15,4,
        1,29,7,22,10,3,78,16,12,20,18,4,67,11,5,1,3,15,6,21,31,32,27,18,13,71,35,5,142,4,10,1,2,50,19,33,16,35,37,16,19,27,7,1,133,19,1,4,8,7,20,1,4,
        4,1,10,3,1,6,1,2,51,5,40,15,24,43,22928,11,1,13,154,70,3,1,1,7,4,10,1,2,1,1,2,1,2,1,2,2,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,
        3,2,1,1,1,1,2,1,1,
    };
    static ImWchar base_ranges[] = // not zero-terminated
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0x3000, 0x30FF, // CJK Symbols and Punctuations, Hiragana, Katakana
        0x31F0, 0x31FF, // Katakana Phonetic Extensions
        0xFF00, 0xFFEF  // Half-width characters
    };
    static ImWchar full_ranges[IM_ARRAYSIZE(base_ranges) + IM_ARRAYSIZE(accumulative_offsets_from_0x4E00)*2 + 1] = { 0 };
    if (!full_ranges[0])
    {
        memcpy(full_ranges, base_ranges, sizeof(base_ranges));
        UnpackAccumulativeOffsetsIntoRanges(0x4E00, accumulative_offsets_from_0x4E00, IM_ARRAYSIZE(accumulative_offsets_from_0x4E00), full_ranges + IM_ARRAYSIZE(base_ranges));
    }
    return &full_ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesCyrillic()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0x0400, 0x052F, // Cyrillic + Cyrillic Supplement
        0x2DE0, 0x2DFF, // Cyrillic Extended-A
        0xA640, 0xA69F, // Cyrillic Extended-B
        0,
    };
    return &ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesThai()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin
        0x2010, 0x205E, // Punctuations
        0x0E00, 0x0E7F, // Thai
        0,
    };
    return &ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesVietnamese()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin
        0x0102, 0x0103,
        0x0110, 0x0111,
        0x0128, 0x0129,
        0x0168, 0x0169,
        0x01A0, 0x01A1,
        0x01AF, 0x01B0,
        0x1EA0, 0x1EF9,
        0,
    };
    return &ranges[0];
}

//-----------------------------------------------------------------------------
// [SECTION] ImFontGlyphRangesBuilder
//-----------------------------------------------------------------------------

void ImFontGlyphRangesBuilder::AddText(const char* text, const char* text_end)
{
    while (text_end ? (text < text_end) : *text)
    {
        unsigned int c = 0;
        int c_len = ImTextCharFromUtf8(&c, text, text_end);
        text += c_len;
        if (c_len == 0)
            break;
        AddChar((ImWchar)c);
    }
}

void ImFontGlyphRangesBuilder::AddRanges(const ImWchar* ranges)
{
    for (; ranges[0]; ranges += 2)
        for (ImWchar c = ranges[0]; c <= ranges[1]; c++)
            AddChar(c);
}

void ImFontGlyphRangesBuilder::BuildRanges(ImVector<ImWchar>* out_ranges)
{
    const int max_codepoint = IM_UNICODE_CODEPOINT_MAX;
    for (int n = 0; n <= max_codepoint; n++)
        if (GetBit(n))
        {
            out_ranges->push_back((ImWchar)n);
            while (n < max_codepoint && GetBit(n + 1))
                n++;
            out_ranges->push_back((ImWchar)n);
        }
    out_ranges->push_back(0);
}

//-----------------------------------------------------------------------------
// [SECTION] ImFont
//-----------------------------------------------------------------------------

ImFont::ImFont()
{
    FontSize = 0.0f;
    FallbackAdvanceX = 0.0f;
    FallbackChar = (ImWchar)'?';
    EllipsisChar = (ImWchar)-1;
    FallbackGlyph = NULL;
    ContainerAtlas = NULL;
    ConfigData = NULL;
    ConfigDataCount = 0;
    DirtyLookupTables = false;
    Scale = 1.0f;
    Ascent = Descent = 0.0f;
    MetricsTotalSurface = 0;
    memset(Used4kPagesMap, 0, sizeof(Used4kPagesMap));
}

ImFont::~ImFont()
{
    ClearOutputData();
}

void    ImFont::ClearOutputData()
{
    FontSize = 0.0f;
    FallbackAdvanceX = 0.0f;
    Glyphs.clear();
    IndexAdvanceX.clear();
    IndexLookup.clear();
    FallbackGlyph = NULL;
    ContainerAtlas = NULL;
    DirtyLookupTables = true;
    Ascent = Descent = 0.0f;
    MetricsTotalSurface = 0;
}

void ImFont::BuildLookupTable()
{
    int max_codepoint = 0;
    for (int i = 0; i != Glyphs.Size; i++)
        max_codepoint = ImMax(max_codepoint, (int)Glyphs[i].Codepoint);

    // Build lookup table
    IM_ASSERT(Glyphs.Size < 0xFFFF); // -1 is reserved
    IndexAdvanceX.clear();
    IndexLookup.clear();
    DirtyLookupTables = false;
    memset(Used4kPagesMap, 0, sizeof(Used4kPagesMap));
    GrowIndex(max_codepoint + 1);
    for (int i = 0; i < Glyphs.Size; i++)
    {
        int codepoint = (int)Glyphs[i].Codepoint;
        IndexAdvanceX[codepoint] = Glyphs[i].AdvanceX;
        IndexLookup[codepoint] = (ImWchar)i;

        // Mark 4K page as used
        const int page_n = codepoint / 4096;
        Used4kPagesMap[page_n >> 3] |= 1 << (page_n & 7);
    }

    // Create a glyph to handle TAB
    // FIXME: Needs proper TAB handling but it needs to be contextualized (or we could arbitrary say that each string starts at "column 0" ?)
    if (FindGlyph((ImWchar)' '))
    {
        if (Glyphs.back().Codepoint != '\t')   // So we can call this function multiple times (FIXME: Flaky)
            Glyphs.resize(Glyphs.Size + 1);
        ImFontGlyph& tab_glyph = Glyphs.back();
        tab_glyph = *FindGlyph((ImWchar)' ');
        tab_glyph.Codepoint = '\t';
        tab_glyph.AdvanceX *= IM_TABSIZE;
        IndexAdvanceX[(int)tab_glyph.Codepoint] = (float)tab_glyph.AdvanceX;
        IndexLookup[(int)tab_glyph.Codepoint] = (ImWchar)(Glyphs.Size - 1);
    }

    // Mark special glyphs as not visible (note that AddGlyph already mark as non-visible glyphs with zero-size polygons)
    SetGlyphVisible((ImWchar)' ', false);
    SetGlyphVisible((ImWchar)'\t', false);

    // Setup fall-backs
    FallbackGlyph = FindGlyphNoFallback(FallbackChar);
    FallbackAdvanceX = FallbackGlyph ? FallbackGlyph->AdvanceX : 0.0f;
    for (int i = 0; i < max_codepoint + 1; i++)
        if (IndexAdvanceX[i] < 0.0f)
            IndexAdvanceX[i] = FallbackAdvanceX;
}

// API is designed this way to avoid exposing the 4K page size
// e.g. use with IsGlyphRangeUnused(0, 255)
bool ImFont::IsGlyphRangeUnused(unsigned int c_begin, unsigned int c_last)
{
    unsigned int page_begin = (c_begin / 4096);
    unsigned int page_last = (c_last / 4096);
    for (unsigned int page_n = page_begin; page_n <= page_last; page_n++)
        if ((page_n >> 3) < sizeof(Used4kPagesMap))
            if (Used4kPagesMap[page_n >> 3] & (1 << (page_n & 7)))
                return false;
    return true;
}

void ImFont::SetGlyphVisible(ImWchar c, bool visible)
{
    if (ImFontGlyph* glyph = (ImFontGlyph*)(void*)FindGlyph((ImWchar)c))
        glyph->Visible = visible ? 1 : 0;
}

void ImFont::SetFallbackChar(ImWchar c)
{
    FallbackChar = c;
    BuildLookupTable();
}

void ImFont::GrowIndex(int new_size)
{
    IM_ASSERT(IndexAdvanceX.Size == IndexLookup.Size);
    if (new_size <= IndexLookup.Size)
        return;
    IndexAdvanceX.resize(new_size, -1.0f);
    IndexLookup.resize(new_size, (ImWchar)-1);
}

// x0/y0/x1/y1 are offset from the character upper-left layout position, in pixels. Therefore x0/y0 are often fairly close to zero.
// Not to be mistaken with texture coordinates, which are held by u0/v0/u1/v1 in normalized format (0.0..1.0 on each texture axis).
// 'cfg' is not necessarily == 'this->ConfigData' because multiple source fonts+configs can be used to build one target font.
void ImFont::AddGlyph(const ImFontConfig* cfg, ImWchar codepoint, float x0, float y0, float x1, float y1, float u0, float v0, float u1, float v1, float advance_x)
{
    if (cfg != NULL)
    {
        // Clamp & recenter if needed
        const float advance_x_original = advance_x;
        advance_x = ImClamp(advance_x, cfg->GlyphMinAdvanceX, cfg->GlyphMaxAdvanceX);
        if (advance_x != advance_x_original)
        {
            float char_off_x = cfg->PixelSnapH ? ImFloor((advance_x - advance_x_original) * 0.5f) : (advance_x - advance_x_original) * 0.5f;
            x0 += char_off_x;
            x1 += char_off_x;
        }

        // Snap to pixel
        if (cfg->PixelSnapH)
            advance_x = IM_ROUND(advance_x);

        // Bake spacing
        advance_x += cfg->GlyphExtraSpacing.x;
    }

    Glyphs.resize(Glyphs.Size + 1);
    ImFontGlyph& glyph = Glyphs.back();
    glyph.Codepoint = (unsigned int)codepoint;
    glyph.Visible = (x0 != x1) && (y0 != y1);
    glyph.Colored = false;
    glyph.X0 = x0;
    glyph.Y0 = y0;
    glyph.X1 = x1;
    glyph.Y1 = y1;
    glyph.U0 = u0;
    glyph.V0 = v0;
    glyph.U1 = u1;
    glyph.V1 = v1;
    glyph.AdvanceX = advance_x;

    // Compute rough surface usage metrics (+1 to account for average padding, +0.99 to round)
    // We use (U1-U0)*TexWidth instead of X1-X0 to account for oversampling.
    float pad = ContainerAtlas->TexGlyphPadding + 0.99f;
    DirtyLookupTables = true;
    MetricsTotalSurface += (int)((glyph.U1 - glyph.U0) * ContainerAtlas->TexWidth + pad) * (int)((glyph.V1 - glyph.V0) * ContainerAtlas->TexHeight + pad);
}

void ImFont::AddRemapChar(ImWchar dst, ImWchar src, bool overwrite_dst)
{
    IM_ASSERT(IndexLookup.Size > 0);    // Currently this can only be called AFTER the font has been built, aka after calling ImFontAtlas::GetTexDataAs*() function.
    unsigned int index_size = (unsigned int)IndexLookup.Size;

    if (dst < index_size && IndexLookup.Data[dst] == (ImWchar)-1 && !overwrite_dst) // 'dst' already exists
        return;
    if (src >= index_size && dst >= index_size) // both 'dst' and 'src' don't exist -> no-op
        return;

    GrowIndex(dst + 1);
    IndexLookup[dst] = (src < index_size) ? IndexLookup.Data[src] : (ImWchar)-1;
    IndexAdvanceX[dst] = (src < index_size) ? IndexAdvanceX.Data[src] : 1.0f;
}

const ImFontGlyph* ImFont::FindGlyph(ImWchar c) const
{
    if (c >= (size_t)IndexLookup.Size)
        return FallbackGlyph;
    const ImWchar i = IndexLookup.Data[c];
    if (i == (ImWchar)-1)
        return FallbackGlyph;
    return &Glyphs.Data[i];
}

const ImFontGlyph* ImFont::FindGlyphNoFallback(ImWchar c) const
{
    if (c >= (size_t)IndexLookup.Size)
        return NULL;
    const ImWchar i = IndexLookup.Data[c];
    if (i == (ImWchar)-1)
        return NULL;
    return &Glyphs.Data[i];
}

const char* ImFont::CalcWordWrapPositionA(float scale, const char* text, const char* text_end, float wrap_width) const
{
    // Simple word-wrapping for English, not full-featured. Please submit failing cases!
    // FIXME: Much possible improvements (don't cut things like "word !", "word!!!" but cut within "word,,,,", more sensible support for punctuations, support for Unicode punctuations, etc.)

    // For references, possible wrap point marked with ^
    //  "aaa bbb, ccc,ddd. eee   fff. ggg!"
    //      ^    ^    ^   ^   ^__    ^    ^

    // List of hardcoded separators: .,;!?'"

    // Skip extra blanks after a line returns (that includes not counting them in width computation)
    // e.g. "Hello    world" --> "Hello" "World"

    // Cut words that cannot possibly fit within one line.
    // e.g.: "The tropical fish" with ~5 characters worth of width --> "The tr" "opical" "fish"

    float line_width = 0.0f;
    float word_width = 0.0f;
    float blank_width = 0.0f;
    wrap_width /= scale; // We work with unscaled widths to avoid scaling every characters

    const char* word_end = text;
    const char* prev_word_end = NULL;
    bool inside_word = true;

    const char* s = text;
    while (s < text_end)
    {
        unsigned int c = (unsigned int)*s;
        const char* next_s;
        if (c < 0x80)
            next_s = s + 1;
        else
            next_s = s + ImTextCharFromUtf8(&c, s, text_end);
        if (c == 0)
            break;

        if (c < 32)
        {
            if (c == '\n')
            {
                line_width = word_width = blank_width = 0.0f;
                inside_word = true;
                s = next_s;
                continue;
            }
            if (c == '\r')
            {
                s = next_s;
                continue;
            }
        }

        const float char_width = ((int)c < IndexAdvanceX.Size ? IndexAdvanceX.Data[c] : FallbackAdvanceX);
        if (ImCharIsBlankW(c))
        {
            if (inside_word)
            {
                line_width += blank_width;
                blank_width = 0.0f;
                word_end = s;
            }
            blank_width += char_width;
            inside_word = false;
        }
        else
        {
            word_width += char_width;
            if (inside_word)
            {
                word_end = next_s;
            }
            else
            {
                prev_word_end = word_end;
                line_width += word_width + blank_width;
                word_width = blank_width = 0.0f;
            }

            // Allow wrapping after punctuation.
            inside_word = (c != '.' && c != ',' && c != ';' && c != '!' && c != '?' && c != '\"');
        }

        // We ignore blank width at the end of the line (they can be skipped)
        if (line_width + word_width > wrap_width)
        {
            // Words that cannot possibly fit within an entire line will be cut anywhere.
            if (word_width < wrap_width)
                s = prev_word_end ? prev_word_end : word_end;
            break;
        }

        s = next_s;
    }

    return s;
}

ImVec2 ImFont::CalcTextSizeA(float size, float max_width, float wrap_width, const char* text_begin, const char* text_end, const char** remaining) const
{
    if (!text_end)
        text_end = text_begin + strlen(text_begin); // FIXME-OPT: Need to avoid this.

    const float line_height = size;
    const float scale = size / FontSize;

    ImVec2 text_size = ImVec2(0, 0);
    float line_width = 0.0f;

    const bool word_wrap_enabled = (wrap_width > 0.0f);
    const char* word_wrap_eol = NULL;

    const char* s = text_begin;
    while (s < text_end)
    {
        if (word_wrap_enabled)
        {
            // Calculate how far we can render. Requires two passes on the string data but keeps the code simple and not intrusive for what's essentially an uncommon feature.
            if (!word_wrap_eol)
            {
                word_wrap_eol = CalcWordWrapPositionA(scale, s, text_end, wrap_width - line_width);
                if (word_wrap_eol == s) // Wrap_width is too small to fit anything. Force displaying 1 character to minimize the height discontinuity.
                    word_wrap_eol++;    // +1 may not be a character start point in UTF-8 but it's ok because we use s >= word_wrap_eol below
            }

            if (s >= word_wrap_eol)
            {
                if (text_size.x < line_width)
                    text_size.x = line_width;
                text_size.y += line_height;
                line_width = 0.0f;
                word_wrap_eol = NULL;

                // Wrapping skips upcoming blanks
                while (s < text_end)
                {
                    const char c = *s;
                    if (ImCharIsBlankA(c)) { s++; } else if (c == '\n') { s++; break; } else { break; }
                }
                continue;
            }
        }

        // Decode and advance source
        const char* prev_s = s;
        unsigned int c = (unsigned int)*s;
        if (c < 0x80)
        {
            s += 1;
        }
        else
        {
            s += ImTextCharFromUtf8(&c, s, text_end);
            if (c == 0) // Malformed UTF-8?
                break;
        }

        if (c < 32)
        {
            if (c == '\n')
            {
                text_size.x = ImMax(text_size.x, line_width);
                text_size.y += line_height;
                line_width = 0.0f;
                continue;
            }
            if (c == '\r')
                continue;
        }

        const float char_width = ((int)c < IndexAdvanceX.Size ? IndexAdvanceX.Data[c] : FallbackAdvanceX) * scale;
        if (line_width + char_width >= max_width)
        {
            s = prev_s;
            break;
        }

        line_width += char_width;
    }

    if (text_size.x < line_width)
        text_size.x = line_width;

    if (line_width > 0 || text_size.y == 0.0f)
        text_size.y += line_height;

    if (remaining)
        *remaining = s;

    return text_size;
}

// Note: as with every ImDrawList drawing function, this expects that the font atlas texture is bound.
void ImFont::RenderChar(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, ImWchar c) const
{
    const ImFontGlyph* glyph = FindGlyph(c);
    if (!glyph || !glyph->Visible)
        return;
    if (glyph->Colored)
        col |= ~IM_COL32_A_MASK;
    float scale = (size >= 0.0f) ? (size / FontSize) : 1.0f;
    pos.x = IM_FLOOR(pos.x);
    pos.y = IM_FLOOR(pos.y);
    draw_list->PrimReserve(6, 4);
    draw_list->PrimRectUV(ImVec2(pos.x + glyph->X0 * scale, pos.y + glyph->Y0 * scale), ImVec2(pos.x + glyph->X1 * scale, pos.y + glyph->Y1 * scale), ImVec2(glyph->U0, glyph->V0), ImVec2(glyph->U1, glyph->V1), col);
}

// Note: as with every ImDrawList drawing function, this expects that the font atlas texture is bound.
void ImFont::RenderText(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, const ImVec4& clip_rect, const char* text_begin, const char* text_end, float wrap_width, bool cpu_fine_clip) const
{
    if (!text_end)
        text_end = text_begin + strlen(text_begin); // ImGui:: functions generally already provides a valid text_end, so this is merely to handle direct calls.

    // Align to be pixel perfect
    pos.x = IM_FLOOR(pos.x);
    pos.y = IM_FLOOR(pos.y);
    float x = pos.x;
    float y = pos.y;
    if (y > clip_rect.w)
        return;

    const float scale = size / FontSize;
    const float line_height = FontSize * scale;
    const bool word_wrap_enabled = (wrap_width > 0.0f);
    const char* word_wrap_eol = NULL;

    // Fast-forward to first visible line
    const char* s = text_begin;
    if (y + line_height < clip_rect.y && !word_wrap_enabled)
        while (y + line_height < clip_rect.y && s < text_end)
        {
            s = (const char*)memchr(s, '\n', text_end - s);
            s = s ? s + 1 : text_end;
            y += line_height;
        }

    // For large text, scan for the last visible line in order to avoid over-reserving in the call to PrimReserve()
    // Note that very large horizontal line will still be affected by the issue (e.g. a one megabyte string buffer without a newline will likely crash atm)
    if (text_end - s > 10000 && !word_wrap_enabled)
    {
        const char* s_end = s;
        float y_end = y;
        while (y_end < clip_rect.w && s_end < text_end)
        {
            s_end = (const char*)memchr(s_end, '\n', text_end - s_end);
            s_end = s_end ? s_end + 1 : text_end;
            y_end += line_height;
        }
        text_end = s_end;
    }
    if (s == text_end)
        return;

    // Reserve vertices for remaining worse case (over-reserving is useful and easily amortized)
    const int vtx_count_max = (int)(text_end - s) * 4;
    const int idx_count_max = (int)(text_end - s) * 6;
    const int idx_expected_size = draw_list->IdxBuffer.Size + idx_count_max;
    draw_list->PrimReserve(idx_count_max, vtx_count_max);

    ImDrawVert* vtx_write = draw_list->_VtxWritePtr;
    ImDrawIdx* idx_write = draw_list->_IdxWritePtr;
    unsigned int vtx_current_idx = draw_list->_VtxCurrentIdx;

    const ImU32 col_untinted = col | ~IM_COL32_A_MASK;

    while (s < text_end)
    {
        if (word_wrap_enabled)
        {
            // Calculate how far we can render. Requires two passes on the string data but keeps the code simple and not intrusive for what's essentially an uncommon feature.
            if (!word_wrap_eol)
            {
                word_wrap_eol = CalcWordWrapPositionA(scale, s, text_end, wrap_width - (x - pos.x));
                if (word_wrap_eol == s) // Wrap_width is too small to fit anything. Force displaying 1 character to minimize the height discontinuity.
                    word_wrap_eol++;    // +1 may not be a character start point in UTF-8 but it's ok because we use s >= word_wrap_eol below
            }

            if (s >= word_wrap_eol)
            {
                x = pos.x;
                y += line_height;
                word_wrap_eol = NULL;

                // Wrapping skips upcoming blanks
                while (s < text_end)
                {
                    const char c = *s;
                    if (ImCharIsBlankA(c)) { s++; } else if (c == '\n') { s++; break; } else { break; }
                }
                continue;
            }
        }

        // Decode and advance source
        unsigned int c = (unsigned int)*s;
        if (c < 0x80)
        {
            s += 1;
        }
        else
        {
            s += ImTextCharFromUtf8(&c, s, text_end);
            if (c == 0) // Malformed UTF-8?
                break;
        }

        if (c < 32)
        {
            if (c == '\n')
            {
                x = pos.x;
                y += line_height;
                if (y > clip_rect.w)
                    break; // break out of main loop
                continue;
            }
            if (c == '\r')
                continue;
        }

        const ImFontGlyph* glyph = FindGlyph((ImWchar)c);
        if (glyph == NULL)
            continue;

        float char_width = glyph->AdvanceX * scale;
        if (glyph->Visible)
        {
            // We don't do a second finer clipping test on the Y axis as we've already skipped anything before clip_rect.y and exit once we pass clip_rect.w
            float x1 = x + glyph->X0 * scale;
            float x2 = x + glyph->X1 * scale;
            float y1 = y + glyph->Y0 * scale;
            float y2 = y + glyph->Y1 * scale;
            if (x1 <= clip_rect.z && x2 >= clip_rect.x)
            {
                // Render a character
                float u1 = glyph->U0;
                float v1 = glyph->V0;
                float u2 = glyph->U1;
                float v2 = glyph->V1;

                // CPU side clipping used to fit text in their frame when the frame is too small. Only does clipping for axis aligned quads.
                if (cpu_fine_clip)
                {
                    if (x1 < clip_rect.x)
                    {
                        u1 = u1 + (1.0f - (x2 - clip_rect.x) / (x2 - x1)) * (u2 - u1);
                        x1 = clip_rect.x;
                    }
                    if (y1 < clip_rect.y)
                    {
                        v1 = v1 + (1.0f - (y2 - clip_rect.y) / (y2 - y1)) * (v2 - v1);
                        y1 = clip_rect.y;
                    }
                    if (x2 > clip_rect.z)
                    {
                        u2 = u1 + ((clip_rect.z - x1) / (x2 - x1)) * (u2 - u1);
                        x2 = clip_rect.z;
                    }
                    if (y2 > clip_rect.w)
                    {
                        v2 = v1 + ((clip_rect.w - y1) / (y2 - y1)) * (v2 - v1);
                        y2 = clip_rect.w;
                    }
                    if (y1 >= y2)
                    {
                        x += char_width;
                        continue;
                    }
                }

                // Support for untinted glyphs
                ImU32 glyph_col = glyph->Colored ? col_untinted : col;

                // We are NOT calling PrimRectUV() here because non-inlined causes too much overhead in a debug builds. Inlined here:
                {
                    idx_write[0] = (ImDrawIdx)(vtx_current_idx); idx_write[1] = (ImDrawIdx)(vtx_current_idx+1); idx_write[2] = (ImDrawIdx)(vtx_current_idx+2);
                    idx_write[3] = (ImDrawIdx)(vtx_current_idx); idx_write[4] = (ImDrawIdx)(vtx_current_idx+2); idx_write[5] = (ImDrawIdx)(vtx_current_idx+3);
                    vtx_write[0].pos.x = x1; vtx_write[0].pos.y = y1; vtx_write[0].col = glyph_col; vtx_write[0].uv.x = u1; vtx_write[0].uv.y = v1;
                    vtx_write[1].pos.x = x2; vtx_write[1].pos.y = y1; vtx_write[1].col = glyph_col; vtx_write[1].uv.x = u2; vtx_write[1].uv.y = v1;
                    vtx_write[2].pos.x = x2; vtx_write[2].pos.y = y2; vtx_write[2].col = glyph_col; vtx_write[2].uv.x = u2; vtx_write[2].uv.y = v2;
                    vtx_write[3].pos.x = x1; vtx_write[3].pos.y = y2; vtx_write[3].col = glyph_col; vtx_write[3].uv.x = u1; vtx_write[3].uv.y = v2;
                    vtx_write += 4;
                    vtx_current_idx += 4;
                    idx_write += 6;
                }
            }
        }
        x += char_width;
    }

    // Give back unused vertices (clipped ones, blanks) ~ this is essentially a PrimUnreserve() action.
    draw_list->VtxBuffer.Size = (int)(vtx_write - draw_list->VtxBuffer.Data); // Same as calling shrink()
    draw_list->IdxBuffer.Size = (int)(idx_write - draw_list->IdxBuffer.Data);
    draw_list->CmdBuffer[draw_list->CmdBuffer.Size - 1].ElemCount -= (idx_expected_size - draw_list->IdxBuffer.Size);
    draw_list->_VtxWritePtr = vtx_write;
    draw_list->_IdxWritePtr = idx_write;
    draw_list->_VtxCurrentIdx = vtx_current_idx;
}

//-----------------------------------------------------------------------------
// [SECTION] ImGui Internal Render Helpers
//-----------------------------------------------------------------------------
// Vaguely redesigned to stop accessing ImGui global state:
// - RenderArrow()
// - RenderBullet()
// - RenderCheckMark()
// - RenderMouseCursor()
// - RenderArrowDockMenu()
// - RenderArrowPointingAt()
// - RenderRectFilledRangeH()
// - RenderRectFilledWithHole()
//-----------------------------------------------------------------------------
// Function in need of a redesign (legacy mess)
// - RenderColorRectWithAlphaCheckerboard()
//-----------------------------------------------------------------------------

// Render an arrow aimed to be aligned with text (p_min is a position in the same space text would be positioned). To e.g. denote expanded/collapsed state
void ImGui::RenderArrow(ImDrawList* draw_list, ImVec2 pos, ImU32 col, ImGuiDir dir, float scale)
{
    const float h = draw_list->_Data->FontSize * 1.00f;
    float r = h * 0.40f * scale;
    ImVec2 center = pos + ImVec2(h * 0.50f, h * 0.50f * scale);

    ImVec2 a, b, c;
    switch (dir)
    {
    case ImGuiDir_Up:
    case ImGuiDir_Down:
        if (dir == ImGuiDir_Up) r = -r;
        a = ImVec2(+0.000f, +0.750f) * r;
        b = ImVec2(-0.866f, -0.750f) * r;
        c = ImVec2(+0.866f, -0.750f) * r;
        break;
    case ImGuiDir_Left:
    case ImGuiDir_Right:
        if (dir == ImGuiDir_Left) r = -r;
        a = ImVec2(+0.750f, +0.000f) * r;
        b = ImVec2(-0.750f, +0.866f) * r;
        c = ImVec2(-0.750f, -0.866f) * r;
        break;
    case ImGuiDir_None:
    case ImGuiDir_COUNT:
        IM_ASSERT(0);
        break;
    }
    draw_list->AddTriangleFilled(center + a, center + b, center + c, col);
}

void ImGui::RenderBullet(ImDrawList* draw_list, ImVec2 pos, ImU32 col)
{
    draw_list->AddCircleFilled(pos, draw_list->_Data->FontSize * 0.20f, col, 8);
}

void ImGui::RenderCheckMark(ImDrawList* draw_list, ImVec2 pos, ImU32 col, float sz)
{
    float thickness = ImMax(sz / 5.0f, 1.0f);
    sz -= thickness * 0.5f;
    pos += ImVec2(thickness * 0.25f, thickness * 0.25f);

    float third = sz / 3.0f;
    float bx = pos.x + third;
    float by = pos.y + sz - third * 0.5f;
    draw_list->PathLineTo(ImVec2(bx - third, by - third));
    draw_list->PathLineTo(ImVec2(bx, by));
    draw_list->PathLineTo(ImVec2(bx + third * 2.0f, by - third * 2.0f));
    draw_list->PathStroke(col, 0, thickness);
}

void ImGui::RenderMouseCursor(ImDrawList* draw_list, ImVec2 pos, float scale, ImGuiMouseCursor mouse_cursor, ImU32 col_fill, ImU32 col_border, ImU32 col_shadow)
{
    if (mouse_cursor == ImGuiMouseCursor_None)
        return;
    IM_ASSERT(mouse_cursor > ImGuiMouseCursor_None && mouse_cursor < ImGuiMouseCursor_COUNT);

    ImFontAtlas* font_atlas = draw_list->_Data->Font->ContainerAtlas;
    ImVec2 offset, size, uv[4];
    if (font_atlas->GetMouseCursorTexData(mouse_cursor, &offset, &size, &uv[0], &uv[2]))
    {
        pos -= offset;
        ImTextureID tex_id = font_atlas->TexID;
        draw_list->PushTextureID(tex_id);
        draw_list->AddImage(tex_id, pos + ImVec2(1, 0) * scale, pos + (ImVec2(1, 0) + size) * scale,    uv[2], uv[3], col_shadow);
        draw_list->AddImage(tex_id, pos + ImVec2(2, 0) * scale, pos + (ImVec2(2, 0) + size) * scale,    uv[2], uv[3], col_shadow);
        draw_list->AddImage(tex_id, pos,                        pos + size * scale,                     uv[2], uv[3], col_border);
        draw_list->AddImage(tex_id, pos,                        pos + size * scale,                     uv[0], uv[1], col_fill);
        draw_list->PopTextureID();
    }
}

// Render an arrow. 'pos' is position of the arrow tip. half_sz.x is length from base to tip. half_sz.y is length on each side.
void ImGui::RenderArrowPointingAt(ImDrawList* draw_list, ImVec2 pos, ImVec2 half_sz, ImGuiDir direction, ImU32 col)
{
    switch (direction)
    {
    case ImGuiDir_Left:  draw_list->AddTriangleFilled(ImVec2(pos.x + half_sz.x, pos.y - half_sz.y), ImVec2(pos.x + half_sz.x, pos.y + half_sz.y), pos, col); return;
    case ImGuiDir_Right: draw_list->AddTriangleFilled(ImVec2(pos.x - half_sz.x, pos.y + half_sz.y), ImVec2(pos.x - half_sz.x, pos.y - half_sz.y), pos, col); return;
    case ImGuiDir_Up:    draw_list->AddTriangleFilled(ImVec2(pos.x + half_sz.x, pos.y + half_sz.y), ImVec2(pos.x - half_sz.x, pos.y + half_sz.y), pos, col); return;
    case ImGuiDir_Down:  draw_list->AddTriangleFilled(ImVec2(pos.x - half_sz.x, pos.y - half_sz.y), ImVec2(pos.x + half_sz.x, pos.y - half_sz.y), pos, col); return;
    case ImGuiDir_None: case ImGuiDir_COUNT: break; // Fix warnings
    }
}

// This is less wide than RenderArrow() and we use in dock nodes instead of the regular RenderArrow() to denote a change of functionality,
// and because the saved space means that the left-most tab label can stay at exactly the same position as the label of a loose window.
void ImGui::RenderArrowDockMenu(ImDrawList* draw_list, ImVec2 p_min, float sz, ImU32 col)
{
    draw_list->AddRectFilled(p_min + ImVec2(sz * 0.10f, sz * 0.15f), p_min + ImVec2(sz * 0.70f, sz * 0.30f), col);
    RenderArrowPointingAt(draw_list, p_min + ImVec2(sz * 0.40f, sz * 0.85f), ImVec2(sz * 0.30f, sz * 0.40f), ImGuiDir_Down, col);
}

static inline float ImAcos01(float x)
{
    if (x <= 0.0f) return IM_PI * 0.5f;
    if (x >= 1.0f) return 0.0f;
    return ImAcos(x);
    //return (-0.69813170079773212f * x * x - 0.87266462599716477f) * x + 1.5707963267948966f; // Cheap approximation, may be enough for what we do.
}

// FIXME: Cleanup and move code to ImDrawList.
void ImGui::RenderRectFilledRangeH(ImDrawList* draw_list, const ImRect& rect, ImU32 col, float x_start_norm, float x_end_norm, float rounding)
{
    if (x_end_norm == x_start_norm)
        return;
    if (x_start_norm > x_end_norm)
        ImSwap(x_start_norm, x_end_norm);

    ImVec2 p0 = ImVec2(ImLerp(rect.Min.x, rect.Max.x, x_start_norm), rect.Min.y);
    ImVec2 p1 = ImVec2(ImLerp(rect.Min.x, rect.Max.x, x_end_norm), rect.Max.y);
    if (rounding == 0.0f)
    {
        draw_list->AddRectFilled(p0, p1, col, 0.0f);
        return;
    }

    rounding = ImClamp(ImMin((rect.Max.x - rect.Min.x) * 0.5f, (rect.Max.y - rect.Min.y) * 0.5f) - 1.0f, 0.0f, rounding);
    const float inv_rounding = 1.0f / rounding;
    const float arc0_b = ImAcos01(1.0f - (p0.x - rect.Min.x) * inv_rounding);
    const float arc0_e = ImAcos01(1.0f - (p1.x - rect.Min.x) * inv_rounding);
    const float half_pi = IM_PI * 0.5f; // We will == compare to this because we know this is the exact value ImAcos01 can return.
    const float x0 = ImMax(p0.x, rect.Min.x + rounding);
    if (arc0_b == arc0_e)
    {
        draw_list->PathLineTo(ImVec2(x0, p1.y));
        draw_list->PathLineTo(ImVec2(x0, p0.y));
    }
    else if (arc0_b == 0.0f && arc0_e == half_pi)
    {
        draw_list->PathArcToFast(ImVec2(x0, p1.y - rounding), rounding, 3, 6); // BL
        draw_list->PathArcToFast(ImVec2(x0, p0.y + rounding), rounding, 6, 9); // TR
    }
    else
    {
        draw_list->PathArcTo(ImVec2(x0, p1.y - rounding), rounding, IM_PI - arc0_e, IM_PI - arc0_b, 3); // BL
        draw_list->PathArcTo(ImVec2(x0, p0.y + rounding), rounding, IM_PI + arc0_b, IM_PI + arc0_e, 3); // TR
    }
    if (p1.x > rect.Min.x + rounding)
    {
        const float arc1_b = ImAcos01(1.0f - (rect.Max.x - p1.x) * inv_rounding);
        const float arc1_e = ImAcos01(1.0f - (rect.Max.x - p0.x) * inv_rounding);
        const float x1 = ImMin(p1.x, rect.Max.x - rounding);
        if (arc1_b == arc1_e)
        {
            draw_list->PathLineTo(ImVec2(x1, p0.y));
            draw_list->PathLineTo(ImVec2(x1, p1.y));
        }
        else if (arc1_b == 0.0f && arc1_e == half_pi)
        {
            draw_list->PathArcToFast(ImVec2(x1, p0.y + rounding), rounding, 9, 12); // TR
            draw_list->PathArcToFast(ImVec2(x1, p1.y - rounding), rounding, 0, 3);  // BR
        }
        else
        {
            draw_list->PathArcTo(ImVec2(x1, p0.y + rounding), rounding, -arc1_e, -arc1_b, 3); // TR
            draw_list->PathArcTo(ImVec2(x1, p1.y - rounding), rounding, +arc1_b, +arc1_e, 3); // BR
        }
    }
    draw_list->PathFillConvex(col);
}

void ImGui::RenderRectFilledWithHole(ImDrawList* draw_list, ImRect outer, ImRect inner, ImU32 col, float rounding)
{
    const bool fill_L = (inner.Min.x > outer.Min.x);
    const bool fill_R = (inner.Max.x < outer.Max.x);
    const bool fill_U = (inner.Min.y > outer.Min.y);
    const bool fill_D = (inner.Max.y < outer.Max.y);
    if (fill_L) draw_list->AddRectFilled(ImVec2(outer.Min.x, inner.Min.y), ImVec2(inner.Min.x, inner.Max.y), col, rounding, (fill_U ? 0 : ImDrawFlags_RoundCornersTopLeft)  | (fill_D ? 0 : ImDrawFlags_RoundCornersBottomLeft));
    if (fill_R) draw_list->AddRectFilled(ImVec2(inner.Max.x, inner.Min.y), ImVec2(outer.Max.x, inner.Max.y), col, rounding, (fill_U ? 0 : ImDrawFlags_RoundCornersTopRight) | (fill_D ? 0 : ImDrawFlags_RoundCornersBottomRight));
    if (fill_U) draw_list->AddRectFilled(ImVec2(inner.Min.x, outer.Min.y), ImVec2(inner.Max.x, inner.Min.y), col, rounding, (fill_L ? 0 : ImDrawFlags_RoundCornersTopLeft)  | (fill_R ? 0 : ImDrawFlags_RoundCornersTopRight));
    if (fill_D) draw_list->AddRectFilled(ImVec2(inner.Min.x, inner.Max.y), ImVec2(inner.Max.x, outer.Max.y), col, rounding, (fill_L ? 0 : ImDrawFlags_RoundCornersBottomLeft)  | (fill_R ? 0 : ImDrawFlags_RoundCornersBottomRight));
    if (fill_L && fill_U) draw_list->AddRectFilled(ImVec2(outer.Min.x, outer.Min.y), ImVec2(inner.Min.x, inner.Min.y), col, rounding, ImDrawFlags_RoundCornersTopLeft);
    if (fill_R && fill_U) draw_list->AddRectFilled(ImVec2(inner.Max.x, outer.Min.y), ImVec2(outer.Max.x, inner.Min.y), col, rounding, ImDrawFlags_RoundCornersTopRight);
    if (fill_L && fill_D) draw_list->AddRectFilled(ImVec2(outer.Min.x, inner.Max.y), ImVec2(inner.Min.x, outer.Max.y), col, rounding, ImDrawFlags_RoundCornersBottomLeft);
    if (fill_R && fill_D) draw_list->AddRectFilled(ImVec2(inner.Max.x, inner.Max.y), ImVec2(outer.Max.x, outer.Max.y), col, rounding, ImDrawFlags_RoundCornersBottomRight);
}

// Helper for ColorPicker4()
// NB: This is rather brittle and will show artifact when rounding this enabled if rounded corners overlap multiple cells. Caller currently responsible for avoiding that.
// Spent a non reasonable amount of time trying to getting this right for ColorButton with rounding+anti-aliasing+ImGuiColorEditFlags_HalfAlphaPreview flag + various grid sizes and offsets, and eventually gave up... probably more reasonable to disable rounding altogether.
// FIXME: uses ImGui::GetColorU32
void ImGui::RenderColorRectWithAlphaCheckerboard(ImDrawList* draw_list, ImVec2 p_min, ImVec2 p_max, ImU32 col, float grid_step, ImVec2 grid_off, float rounding, ImDrawFlags flags)
{
    if ((flags & ImDrawFlags_RoundCornersMask_) == 0)
        flags = ImDrawFlags_RoundCornersDefault_;
    if (((col & IM_COL32_A_MASK) >> IM_COL32_A_SHIFT) < 0xFF)
    {
        ImU32 col_bg1 = GetColorU32(ImAlphaBlendColors(IM_COL32(204, 204, 204, 255), col));
        ImU32 col_bg2 = GetColorU32(ImAlphaBlendColors(IM_COL32(128, 128, 128, 255), col));
        draw_list->AddRectFilled(p_min, p_max, col_bg1, rounding, flags);

        int yi = 0;
        for (float y = p_min.y + grid_off.y; y < p_max.y; y += grid_step, yi++)
        {
            float y1 = ImClamp(y, p_min.y, p_max.y), y2 = ImMin(y + grid_step, p_max.y);
            if (y2 <= y1)
                continue;
            for (float x = p_min.x + grid_off.x + (yi & 1) * grid_step; x < p_max.x; x += grid_step * 2.0f)
            {
                float x1 = ImClamp(x, p_min.x, p_max.x), x2 = ImMin(x + grid_step, p_max.x);
                if (x2 <= x1)
                    continue;
                ImDrawFlags cell_flags = ImDrawFlags_RoundCornersNone;
                if (y1 <= p_min.y) { if (x1 <= p_min.x) cell_flags |= ImDrawFlags_RoundCornersTopLeft; if (x2 >= p_max.x) cell_flags |= ImDrawFlags_RoundCornersTopRight; }
                if (y2 >= p_max.y) { if (x1 <= p_min.x) cell_flags |= ImDrawFlags_RoundCornersBottomLeft; if (x2 >= p_max.x) cell_flags |= ImDrawFlags_RoundCornersBottomRight; }

                // Combine flags
                cell_flags = (flags == ImDrawFlags_RoundCornersNone || cell_flags == ImDrawFlags_RoundCornersNone) ? ImDrawFlags_RoundCornersNone : (cell_flags & flags);
                draw_list->AddRectFilled(ImVec2(x1, y1), ImVec2(x2, y2), col_bg2, rounding, cell_flags);
            }
        }
    }
    else
    {
        draw_list->AddRectFilled(p_min, p_max, col, rounding, flags);
    }
}

//-----------------------------------------------------------------------------
// [SECTION] Decompression code
//-----------------------------------------------------------------------------
// Compressed with stb_compress() then converted to a C array and encoded as base85.
// Use the program in misc/fonts/binary_to_compressed_c.cpp to create the array from a TTF file.
// The purpose of encoding as base85 instead of "0x00,0x01,..." style is only save on _source code_ size.
// Decompression from stb.h (public domain) by Sean Barrett https://github.com/nothings/stb/blob/master/stb.h
//-----------------------------------------------------------------------------

static unsigned int stb_decompress_length(const unsigned char *input)
{
    return (input[8] << 24) + (input[9] << 16) + (input[10] << 8) + input[11];
}

static unsigned char *stb__barrier_out_e, *stb__barrier_out_b;
static const unsigned char *stb__barrier_in_b;
static unsigned char *stb__dout;
static void stb__match(const unsigned char *data, unsigned int length)
{
    // INVERSE of memmove... write each byte before copying the next...
    IM_ASSERT(stb__dout + length <= stb__barrier_out_e);
    if (stb__dout + length > stb__barrier_out_e) { stb__dout += length; return; }
    if (data < stb__barrier_out_b) { stb__dout = stb__barrier_out_e+1; return; }
    while (length--) *stb__dout++ = *data++;
}

static void stb__lit(const unsigned char *data, unsigned int length)
{
    IM_ASSERT(stb__dout + length <= stb__barrier_out_e);
    if (stb__dout + length > stb__barrier_out_e) { stb__dout += length; return; }
    if (data < stb__barrier_in_b) { stb__dout = stb__barrier_out_e+1; return; }
    memcpy(stb__dout, data, length);
    stb__dout += length;
}

#define stb__in2(x)   ((i[x] << 8) + i[(x)+1])
#define stb__in3(x)   ((i[x] << 16) + stb__in2((x)+1))
#define stb__in4(x)   ((i[x] << 24) + stb__in3((x)+1))

static const unsigned char *stb_decompress_token(const unsigned char *i)
{
    if (*i >= 0x20) { // use fewer if's for cases that expand small
        if (*i >= 0x80)       stb__match(stb__dout-i[1]-1, i[0] - 0x80 + 1), i += 2;
        else if (*i >= 0x40)  stb__match(stb__dout-(stb__in2(0) - 0x4000 + 1), i[2]+1), i += 3;
        else /* *i >= 0x20 */ stb__lit(i+1, i[0] - 0x20 + 1), i += 1 + (i[0] - 0x20 + 1);
    } else { // more ifs for cases that expand large, since overhead is amortized
        if (*i >= 0x18)       stb__match(stb__dout-(stb__in3(0) - 0x180000 + 1), i[3]+1), i += 4;
        else if (*i >= 0x10)  stb__match(stb__dout-(stb__in3(0) - 0x100000 + 1), stb__in2(3)+1), i += 5;
        else if (*i >= 0x08)  stb__lit(i+2, stb__in2(0) - 0x0800 + 1), i += 2 + (stb__in2(0) - 0x0800 + 1);
        else if (*i == 0x07)  stb__lit(i+3, stb__in2(1) + 1), i += 3 + (stb__in2(1) + 1);
        else if (*i == 0x06)  stb__match(stb__dout-(stb__in3(1)+1), i[4]+1), i += 5;
        else if (*i == 0x04)  stb__match(stb__dout-(stb__in3(1)+1), stb__in2(4)+1), i += 6;
    }
    return i;
}

static unsigned int stb_adler32(unsigned int adler32, unsigned char *buffer, unsigned int buflen)
{
    const unsigned long ADLER_MOD = 65521;
    unsigned long s1 = adler32 & 0xffff, s2 = adler32 >> 16;
    unsigned long blocklen = buflen % 5552;

    unsigned long i;
    while (buflen) {
        for (i=0; i + 7 < blocklen; i += 8) {
            s1 += buffer[0], s2 += s1;
            s1 += buffer[1], s2 += s1;
            s1 += buffer[2], s2 += s1;
            s1 += buffer[3], s2 += s1;
            s1 += buffer[4], s2 += s1;
            s1 += buffer[5], s2 += s1;
            s1 += buffer[6], s2 += s1;
            s1 += buffer[7], s2 += s1;

            buffer += 8;
        }

        for (; i < blocklen; ++i)
            s1 += *buffer++, s2 += s1;

        s1 %= ADLER_MOD, s2 %= ADLER_MOD;
        buflen -= blocklen;
        blocklen = 5552;
    }
    return (unsigned int)(s2 << 16) + (unsigned int)s1;
}

static unsigned int stb_decompress(unsigned char *output, const unsigned char *i, unsigned int /*length*/)
{
    if (stb__in4(0) != 0x57bC0000) return 0;
    if (stb__in4(4) != 0)          return 0; // error! stream is > 4GB
    const unsigned int olen = stb_decompress_length(i);
    stb__barrier_in_b = i;
    stb__barrier_out_e = output + olen;
    stb__barrier_out_b = output;
    i += 16;

    stb__dout = output;
    for (;;) {
        const unsigned char *old_i = i;
        i = stb_decompress_token(i);
        if (i == old_i) {
            if (*i == 0x05 && i[1] == 0xfa) {
                IM_ASSERT(stb__dout == output + olen);
                if (stb__dout != output + olen) return 0;
                if (stb_adler32(1, output, olen) != (unsigned int) stb__in4(2))
                    return 0;
                return olen;
            } else {
                IM_ASSERT(0); /* NOTREACHED */
                return 0;
            }
        }
        IM_ASSERT(stb__dout <= output + olen);
        if (stb__dout > output + olen)
            return 0;
    }
}

//-----------------------------------------------------------------------------
// [SECTION] Default font data (ProggyClean.ttf)
//-----------------------------------------------------------------------------
// ProggyClean.ttf
// Copyright (c) 2004, 2005 Tristan Grimmer
// MIT license (see License.txt in http://www.upperbounds.net/download/ProggyClean.ttf.zip)
// Download and more information at http://upperbounds.net
//-----------------------------------------------------------------------------
// File: 'ProggyClean.ttf' (41208 bytes)
// Exported using misc/fonts/binary_to_compressed_c.cpp (with compression + base85 string encoding).
// The purpose of encoding as base85 instead of "0x00,0x01,..." style is only save on _source code_ size.
//-----------------------------------------------------------------------------
static const char proggy_clean_ttf_compressed_data_base85[11980 + 1] =
    "7])#######hV0qs'/###[),##/l:$#Q6>##5[n42>c-TH`->>#/e>11NNV=Bv(*:.F?uu#(gRU.o0XGH`$vhLG1hxt9?W`#,5LsCp#-i>.r$<$6pD>Lb';9Crc6tgXmKVeU2cD4Eo3R/"
    "2*>]b(MC;$jPfY.;h^`IWM9<Lh2TlS+f-s$o6Q<BWH`YiU.xfLq$N;$0iR/GX:U(jcW2p/W*q?-qmnUCI;jHSAiFWM.R*kU@C=GH?a9wp8f$e.-4^Qg1)Q-GL(lf(r/7GrRgwV%MS=C#"
    "`8ND>Qo#t'X#(v#Y9w0#1D$CIf;W'#pWUPXOuxXuU(H9M(1<q-UE31#^-V'8IRUo7Qf./L>=Ke$$'5F%)]0^#0X@U.a<r:QLtFsLcL6##lOj)#.Y5<-R&KgLwqJfLgN&;Q?gI^#DY2uL"
    "i@^rMl9t=cWq6##weg>$FBjVQTSDgEKnIS7EM9>ZY9w0#L;>>#Mx&4Mvt//L[MkA#W@lK.N'[0#7RL_&#w+F%HtG9M#XL`N&.,GM4Pg;-<nLENhvx>-VsM.M0rJfLH2eTM`*oJMHRC`N"
    "kfimM2J,W-jXS:)r0wK#@Fge$U>`w'N7G#$#fB#$E^$#:9:hk+eOe--6x)F7*E%?76%^GMHePW-Z5l'&GiF#$956:rS?dA#fiK:)Yr+`&#0j@'DbG&#^$PG.Ll+DNa<XCMKEV*N)LN/N"
    "*b=%Q6pia-Xg8I$<MR&,VdJe$<(7G;Ckl'&hF;;$<_=X(b.RS%%)###MPBuuE1V:v&cX&#2m#(&cV]`k9OhLMbn%s$G2,B$BfD3X*sp5#l,$R#]x_X1xKX%b5U*[r5iMfUo9U`N99hG)"
    "tm+/Us9pG)XPu`<0s-)WTt(gCRxIg(%6sfh=ktMKn3j)<6<b5Sk_/0(^]AaN#(p/L>&VZ>1i%h1S9u5o@YaaW$e+b<TWFn/Z:Oh(Cx2$lNEoN^e)#CFY@@I;BOQ*sRwZtZxRcU7uW6CX"
    "ow0i(?$Q[cjOd[P4d)]>ROPOpxTO7Stwi1::iB1q)C_=dV26J;2,]7op$]uQr@_V7$q^%lQwtuHY]=DX,n3L#0PHDO4f9>dC@O>HBuKPpP*E,N+b3L#lpR/MrTEH.IAQk.a>D[.e;mc."
    "x]Ip.PH^'/aqUO/$1WxLoW0[iLA<QT;5HKD+@qQ'NQ(3_PLhE48R.qAPSwQ0/WK?Z,[x?-J;jQTWA0X@KJ(_Y8N-:/M74:/-ZpKrUss?d#dZq]DAbkU*JqkL+nwX@@47`5>w=4h(9.`G"
    "CRUxHPeR`5Mjol(dUWxZa(>STrPkrJiWx`5U7F#.g*jrohGg`cg:lSTvEY/EV_7H4Q9[Z%cnv;JQYZ5q.l7Zeas:HOIZOB?G<Nald$qs]@]L<J7bR*>gv:[7MI2k).'2($5FNP&EQ(,)"
    "U]W]+fh18.vsai00);D3@4ku5P?DP8aJt+;qUM]=+b'8@;mViBKx0DE[-auGl8:PJ&Dj+M6OC]O^((##]`0i)drT;-7X`=-H3[igUnPG-NZlo.#k@h#=Ork$m>a>$-?Tm$UV(?#P6YY#"
    "'/###xe7q.73rI3*pP/$1>s9)W,JrM7SN]'/4C#v$U`0#V.[0>xQsH$fEmPMgY2u7Kh(G%siIfLSoS+MK2eTM$=5,M8p`A.;_R%#u[K#$x4AG8.kK/HSB==-'Ie/QTtG?-.*^N-4B/ZM"
    "_3YlQC7(p7q)&](`6_c)$/*JL(L-^(]$wIM`dPtOdGA,U3:w2M-0<q-]L_?^)1vw'.,MRsqVr.L;aN&#/EgJ)PBc[-f>+WomX2u7lqM2iEumMTcsF?-aT=Z-97UEnXglEn1K-bnEO`gu"
    "Ft(c%=;Am_Qs@jLooI&NX;]0#j4#F14;gl8-GQpgwhrq8'=l_f-b49'UOqkLu7-##oDY2L(te+Mch&gLYtJ,MEtJfLh'x'M=$CS-ZZ%P]8bZ>#S?YY#%Q&q'3^Fw&?D)UDNrocM3A76/"
    "/oL?#h7gl85[qW/NDOk%16ij;+:1a'iNIdb-ou8.P*w,v5#EI$TWS>Pot-R*H'-SEpA:g)f+O$%%`kA#G=8RMmG1&O`>to8bC]T&$,n.LoO>29sp3dt-52U%VM#q7'DHpg+#Z9%H[K<L"
    "%a2E-grWVM3@2=-k22tL]4$##6We'8UJCKE[d_=%wI;'6X-GsLX4j^SgJ$##R*w,vP3wK#iiW&#*h^D&R?jp7+/u&#(AP##XU8c$fSYW-J95_-Dp[g9wcO&#M-h1OcJlc-*vpw0xUX&#"
    "OQFKNX@QI'IoPp7nb,QU//MQ&ZDkKP)X<WSVL(68uVl&#c'[0#(s1X&xm$Y%B7*K:eDA323j998GXbA#pwMs-jgD$9QISB-A_(aN4xoFM^@C58D0+Q+q3n0#3U1InDjF682-SjMXJK)("
    "h$hxua_K]ul92%'BOU&#BRRh-slg8KDlr:%L71Ka:.A;%YULjDPmL<LYs8i#XwJOYaKPKc1h:'9Ke,g)b),78=I39B;xiY$bgGw-&.Zi9InXDuYa%G*f2Bq7mn9^#p1vv%#(Wi-;/Z5h"
    "o;#2:;%d&#x9v68C5g?ntX0X)pT`;%pB3q7mgGN)3%(P8nTd5L7GeA-GL@+%J3u2:(Yf>et`e;)f#Km8&+DC$I46>#Kr]]u-[=99tts1.qb#q72g1WJO81q+eN'03'eM>&1XxY-caEnO"
    "j%2n8)),?ILR5^.Ibn<-X-Mq7[a82Lq:F&#ce+S9wsCK*x`569E8ew'He]h:sI[2LM$[guka3ZRd6:t%IG:;$%YiJ:Nq=?eAw;/:nnDq0(CYcMpG)qLN4$##&J<j$UpK<Q4a1]MupW^-"
    "sj_$%[HK%'F####QRZJ::Y3EGl4'@%FkiAOg#p[##O`gukTfBHagL<LHw%q&OV0##F=6/:chIm0@eCP8X]:kFI%hl8hgO@RcBhS-@Qb$%+m=hPDLg*%K8ln(wcf3/'DW-$.lR?n[nCH-"
    "eXOONTJlh:.RYF%3'p6sq:UIMA945&^HFS87@$EP2iG<-lCO$%c`uKGD3rC$x0BL8aFn--`ke%#HMP'vh1/R&O_J9'um,.<tx[@%wsJk&bUT2`0uMv7gg#qp/ij.L56'hl;.s5CUrxjO"
    "M7-##.l+Au'A&O:-T72L]P`&=;ctp'XScX*rU.>-XTt,%OVU4)S1+R-#dg0/Nn?Ku1^0f$B*P:Rowwm-`0PKjYDDM'3]d39VZHEl4,.j']Pk-M.h^&:0FACm$maq-&sgw0t7/6(^xtk%"
    "LuH88Fj-ekm>GA#_>568x6(OFRl-IZp`&b,_P'$M<Jnq79VsJW/mWS*PUiq76;]/NM_>hLbxfc$mj`,O;&%W2m`Zh:/)Uetw:aJ%]K9h:TcF]u_-Sj9,VK3M.*'&0D[Ca]J9gp8,kAW]"
    "%(?A%R$f<->Zts'^kn=-^@c4%-pY6qI%J%1IGxfLU9CP8cbPlXv);C=b),<2mOvP8up,UVf3839acAWAW-W?#ao/^#%KYo8fRULNd2.>%m]UK:n%r$'sw]J;5pAoO_#2mO3n,'=H5(et"
    "Hg*`+RLgv>=4U8guD$I%D:W>-r5V*%j*W:Kvej.Lp$<M-SGZ':+Q_k+uvOSLiEo(<aD/K<CCc`'Lx>'?;++O'>()jLR-^u68PHm8ZFWe+ej8h:9r6L*0//c&iH&R8pRbA#Kjm%upV1g:"
    "a_#Ur7FuA#(tRh#.Y5K+@?3<-8m0$PEn;J:rh6?I6uG<-`wMU'ircp0LaE_OtlMb&1#6T.#FDKu#1Lw%u%+GM+X'e?YLfjM[VO0MbuFp7;>Q&#WIo)0@F%q7c#4XAXN-U&VB<HFF*qL("
    "$/V,;(kXZejWO`<[5?\?ewY(*9=%wDc;,u<'9t3W-(H1th3+G]ucQ]kLs7df($/*JL]@*t7Bu_G3_7mp7<iaQjO@.kLg;x3B0lqp7Hf,^Ze7-##@/c58Mo(3;knp0%)A7?-W+eI'o8)b<"
    "nKnw'Ho8C=Y>pqB>0ie&jhZ[?iLR@@_AvA-iQC(=ksRZRVp7`.=+NpBC%rh&3]R:8XDmE5^V8O(x<<aG/1N$#FX$0V5Y6x'aErI3I$7x%E`v<-BY,)%-?Psf*l?%C3.mM(=/M0:JxG'?"
    "7WhH%o'a<-80g0NBxoO(GH<dM]n.+%q@jH?f.UsJ2Ggs&4<-e47&Kl+f//9@`b+?.TeN_&B8Ss?v;^Trk;f#YvJkl&w$]>-+k?'(<S:68tq*WoDfZu';mM?8X[ma8W%*`-=;D.(nc7/;"
    ")g:T1=^J$&BRV(-lTmNB6xqB[@0*o.erM*<SWF]u2=st-*(6v>^](H.aREZSi,#1:[IXaZFOm<-ui#qUq2$##Ri;u75OK#(RtaW-K-F`S+cF]uN`-KMQ%rP/Xri.LRcB##=YL3BgM/3M"
    "D?@f&1'BW-)Ju<L25gl8uhVm1hL$##*8###'A3/LkKW+(^rWX?5W_8g)a(m&K8P>#bmmWCMkk&#TR`C,5d>g)F;t,4:@_l8G/5h4vUd%&%950:VXD'QdWoY-F$BtUwmfe$YqL'8(PWX("
    "P?^@Po3$##`MSs?DWBZ/S>+4%>fX,VWv/w'KD`LP5IbH;rTV>n3cEK8U#bX]l-/V+^lj3;vlMb&[5YQ8#pekX9JP3XUC72L,,?+Ni&co7ApnO*5NK,((W-i:$,kp'UDAO(G0Sq7MVjJs"
    "bIu)'Z,*[>br5fX^:FPAWr-m2KgL<LUN098kTF&#lvo58=/vjDo;.;)Ka*hLR#/k=rKbxuV`>Q_nN6'8uTG&#1T5g)uLv:873UpTLgH+#FgpH'_o1780Ph8KmxQJ8#H72L4@768@Tm&Q"
    "h4CB/5OvmA&,Q&QbUoi$a_%3M01H)4x7I^&KQVgtFnV+;[Pc>[m4k//,]1?#`VY[Jr*3&&slRfLiVZJ:]?=K3Sw=[$=uRB?3xk48@aeg<Z'<$#4H)6,>e0jT6'N#(q%.O=?2S]u*(m<-"
    "V8J'(1)G][68hW$5'q[GC&5j`TE?m'esFGNRM)j,ffZ?-qx8;->g4t*:CIP/[Qap7/9'#(1sao7w-.qNUdkJ)tCF&#B^;xGvn2r9FEPFFFcL@.iFNkTve$m%#QvQS8U@)2Z+3K:AKM5i"
    "sZ88+dKQ)W6>J%CL<KE>`.d*(B`-n8D9oK<Up]c$X$(,)M8Zt7/[rdkqTgl-0cuGMv'?>-XV1q['-5k'cAZ69e;D_?$ZPP&s^+7])$*$#@QYi9,5P&#9r+$%CE=68>K8r0=dSC%%(@p7"
    ".m7jilQ02'0-VWAg<a/''3u.=4L$Y)6k/K:_[3=&jvL<L0C/2'v:^;-DIBW,B4E68:kZ;%?8(Q8BH=kO65BW?xSG&#@uU,DS*,?.+(o(#1vCS8#CHF>TlGW'b)Tq7VT9q^*^$$.:&N@@"
    "$&)WHtPm*5_rO0&e%K&#-30j(E4#'Zb.o/(Tpm$>K'f@[PvFl,hfINTNU6u'0pao7%XUp9]5.>%h`8_=VYbxuel.NTSsJfLacFu3B'lQSu/m6-Oqem8T+oE--$0a/k]uj9EwsG>%veR*"
    "hv^BFpQj:K'#SJ,sB-'#](j.Lg92rTw-*n%@/;39rrJF,l#qV%OrtBeC6/,;qB3ebNW[?,Hqj2L.1NP&GjUR=1D8QaS3Up&@*9wP?+lo7b?@%'k4`p0Z$22%K3+iCZj?XJN4Nm&+YF]u"
    "@-W$U%VEQ/,,>>#)D<h#`)h0:<Q6909ua+&VU%n2:cG3FJ-%@Bj-DgLr`Hw&HAKjKjseK</xKT*)B,N9X3]krc12t'pgTV(Lv-tL[xg_%=M_q7a^x?7Ubd>#%8cY#YZ?=,`Wdxu/ae&#"
    "w6)R89tI#6@s'(6Bf7a&?S=^ZI_kS&ai`&=tE72L_D,;^R)7[$s<Eh#c&)q.MXI%#v9ROa5FZO%sF7q7Nwb&#ptUJ:aqJe$Sl68%.D###EC><?-aF&#RNQv>o8lKN%5/$(vdfq7+ebA#"
    "u1p]ovUKW&Y%q]'>$1@-[xfn$7ZTp7mM,G,Ko7a&Gu%G[RMxJs[0MM%wci.LFDK)(<c`Q8N)jEIF*+?P2a8g%)$q]o2aH8C&<SibC/q,(e:v;-b#6[$NtDZ84Je2KNvB#$P5?tQ3nt(0"
    "d=j.LQf./Ll33+(;q3L-w=8dX$#WF&uIJ@-bfI>%:_i2B5CsR8&9Z&#=mPEnm0f`<&c)QL5uJ#%u%lJj+D-r;BoF&#4DoS97h5g)E#o:&S4weDF,9^Hoe`h*L+_a*NrLW-1pG_&2UdB8"
    "6e%B/:=>)N4xeW.*wft-;$'58-ESqr<b?UI(_%@[P46>#U`'6AQ]m&6/`Z>#S?YY#Vc;r7U2&326d=w&H####?TZ`*4?&.MK?LP8Vxg>$[QXc%QJv92.(Db*B)gb*BM9dM*hJMAo*c&#"
    "b0v=Pjer]$gG&JXDf->'StvU7505l9$AFvgYRI^&<^b68?j#q9QX4SM'RO#&sL1IM.rJfLUAj221]d##DW=m83u5;'bYx,*Sl0hL(W;;$doB&O/TQ:(Z^xBdLjL<Lni;''X.`$#8+1GD"
    ":k$YUWsbn8ogh6rxZ2Z9]%nd+>V#*8U_72Lh+2Q8Cj0i:6hp&$C/:p(HK>T8Y[gHQ4`4)'$Ab(Nof%V'8hL&#<NEdtg(n'=S1A(Q1/I&4([%dM`,Iu'1:_hL>SfD07&6D<fp8dHM7/g+"
    "tlPN9J*rKaPct&?'uBCem^jn%9_K)<,C5K3s=5g&GmJb*[SYq7K;TRLGCsM-$$;S%:Y@r7AK0pprpL<Lrh,q7e/%KWK:50I^+m'vi`3?%Zp+<-d+$L-Sv:@.o19n$s0&39;kn;S%BSq*"
    "$3WoJSCLweV[aZ'MQIjO<7;X-X;&+dMLvu#^UsGEC9WEc[X(wI7#2.(F0jV*eZf<-Qv3J-c+J5AlrB#$p(H68LvEA'q3n0#m,[`*8Ft)FcYgEud]CWfm68,(aLA$@EFTgLXoBq/UPlp7"
    ":d[/;r_ix=:TF`S5H-b<LI&HY(K=h#)]Lk$K14lVfm:x$H<3^Ql<M`$OhapBnkup'D#L$Pb_`N*g]2e;X/Dtg,bsj&K#2[-:iYr'_wgH)NUIR8a1n#S?Yej'h8^58UbZd+^FKD*T@;6A"
    "7aQC[K8d-(v6GI$x:T<&'Gp5Uf>@M.*J:;$-rv29'M]8qMv-tLp,'886iaC=Hb*YJoKJ,(j%K=H`K.v9HggqBIiZu'QvBT.#=)0ukruV&.)3=(^1`o*Pj4<-<aN((^7('#Z0wK#5GX@7"
    "u][`*S^43933A4rl][`*O4CgLEl]v$1Q3AeF37dbXk,.)vj#x'd`;qgbQR%FW,2(?LO=s%Sc68%NP'##Aotl8x=BE#j1UD([3$M(]UI2LX3RpKN@;/#f'f/&_mt&F)XdF<9t4)Qa.*kT"
    "LwQ'(TTB9.xH'>#MJ+gLq9-##@HuZPN0]u:h7.T..G:;$/Usj(T7`Q8tT72LnYl<-qx8;-HV7Q-&Xdx%1a,hC=0u+HlsV>nuIQL-5<N?)NBS)QN*_I,?&)2'IM%L3I)X((e/dl2&8'<M"
    ":^#M*Q+[T.Xri.LYS3v%fF`68h;b-X[/En'CR.q7E)p'/kle2HM,u;^%OKC-N+Ll%F9CF<Nf'^#t2L,;27W:0O@6##U6W7:$rJfLWHj$#)woqBefIZ.PK<b*t7ed;p*_m;4ExK#h@&]>"
    "_>@kXQtMacfD.m-VAb8;IReM3$wf0''hra*so568'Ip&vRs849'MRYSp%:t:h5qSgwpEr$B>Q,;s(C#$)`svQuF$##-D,##,g68@2[T;.XSdN9Qe)rpt._K-#5wF)sP'##p#C0c%-Gb%"
    "hd+<-j'Ai*x&&HMkT]C'OSl##5RG[JXaHN;d'uA#x._U;.`PU@(Z3dt4r152@:v,'R.Sj'w#0<-;kPI)FfJ&#AYJ&#//)>-k=m=*XnK$>=)72L]0I%>.G690a:$##<,);?;72#?x9+d;"
    "^V'9;jY@;)br#q^YQpx:X#Te$Z^'=-=bGhLf:D6&bNwZ9-ZD#n^9HhLMr5G;']d&6'wYmTFmL<LD)F^%[tC'8;+9E#C$g%#5Y>q9wI>P(9mI[>kC-ekLC/R&CH+s'B;K-M6$EB%is00:"
    "+A4[7xks.LrNk0&E)wILYF@2L'0Nb$+pv<(2.768/FrY&h$^3i&@+G%JT'<-,v`3;_)I9M^AE]CN?Cl2AZg+%4iTpT3<n-&%H%b<FDj2M<hH=&Eh<2Len$b*aTX=-8QxN)k11IM1c^j%"
    "9s<L<NFSo)B?+<-(GxsF,^-Eh@$4dXhN$+#rxK8'je'D7k`e;)2pYwPA'_p9&@^18ml1^[@g4t*[JOa*[=Qp7(qJ_oOL^('7fB&Hq-:sf,sNj8xq^>$U4O]GKx'm9)b@p7YsvK3w^YR-"
    "CdQ*:Ir<($u&)#(&?L9Rg3H)4fiEp^iI9O8KnTj,]H?D*r7'M;PwZ9K0E^k&-cpI;.p/6_vwoFMV<->#%Xi.LxVnrU(4&8/P+:hLSKj$#U%]49t'I:rgMi'FL@a:0Y-uA[39',(vbma*"
    "hU%<-SRF`Tt:542R_VV$p@[p8DV[A,?1839FWdF<TddF<9Ah-6&9tWoDlh]&1SpGMq>Ti1O*H&#(AL8[_P%.M>v^-))qOT*F5Cq0`Ye%+$B6i:7@0IX<N+T+0MlMBPQ*Vj>SsD<U4JHY"
    "8kD2)2fU/M#$e.)T4,_=8hLim[&);?UkK'-x?'(:siIfL<$pFM`i<?%W(mGDHM%>iWP,##P`%/L<eXi:@Z9C.7o=@(pXdAO/NLQ8lPl+HPOQa8wD8=^GlPa8TKI1CjhsCTSLJM'/Wl>-"
    "S(qw%sf/@%#B6;/U7K]uZbi^Oc^2n<bhPmUkMw>%t<)'mEVE''n`WnJra$^TKvX5B>;_aSEK',(hwa0:i4G?.Bci.(X[?b*($,=-n<.Q%`(X=?+@Am*Js0&=3bh8K]mL<LoNs'6,'85`"
    "0?t/'_U59@]ddF<#LdF<eWdF<OuN/45rY<-L@&#+fm>69=Lb,OcZV/);TTm8VI;?%OtJ<(b4mq7M6:u?KRdF<gR@2L=FNU-<b[(9c/ML3m;Z[$oF3g)GAWqpARc=<ROu7cL5l;-[A]%/"
    "+fsd;l#SafT/f*W]0=O'$(Tb<[)*@e775R-:Yob%g*>l*:xP?Yb.5)%w_I?7uk5JC+FS(m#i'k.'a0i)9<7b'fs'59hq$*5Uhv##pi^8+hIEBF`nvo`;'l0.^S1<-wUK2/Coh58KKhLj"
    "M=SO*rfO`+qC`W-On.=AJ56>>i2@2LH6A:&5q`?9I3@@'04&p2/LVa*T-4<-i3;M9UvZd+N7>b*eIwg:CC)c<>nO&#<IGe;__.thjZl<%w(Wk2xmp4Q@I#I9,DF]u7-P=.-_:YJ]aS@V"
    "?6*C()dOp7:WL,b&3Rg/.cmM9&r^>$(>.Z-I&J(Q0Hd5Q%7Co-b`-c<N(6r@ip+AurK<m86QIth*#v;-OBqi+L7wDE-Ir8K['m+DDSLwK&/.?-V%U_%3:qKNu$_b*B-kp7NaD'QdWQPK"
    "Yq[@>P)hI;*_F]u`Rb[.j8_Q/<&>uu+VsH$sM9TA%?)(vmJ80),P7E>)tjD%2L=-t#fK[%`v=Q8<FfNkgg^oIbah*#8/Qt$F&:K*-(N/'+1vMB,u()-a.VUU*#[e%gAAO(S>WlA2);Sa"
    ">gXm8YB`1d@K#n]76-a$U,mF<fX]idqd)<3,]J7JmW4`6]uks=4-72L(jEk+:bJ0M^q-8Dm_Z?0olP1C9Sa&H[d&c$ooQUj]Exd*3ZM@-WGW2%s',B-_M%>%Ul:#/'xoFM9QX-$.QN'>"
    "[%$Z$uF6pA6Ki2O5:8w*vP1<-1`[G,)-m#>0`P&#eb#.3i)rtB61(o'$?X3B</R90;eZ]%Ncq;-Tl]#F>2Qft^ae_5tKL9MUe9b*sLEQ95C&`=G?@Mj=wh*'3E>=-<)Gt*Iw)'QG:`@I"
    "wOf7&]1i'S01B+Ev/Nac#9S;=;YQpg_6U`*kVY39xK,[/6Aj7:'1Bm-_1EYfa1+o&o4hp7KN_Q(OlIo@S%;jVdn0'1<Vc52=u`3^o-n1'g4v58Hj&6_t7$##?M)c<$bgQ_'SY((-xkA#"
    "Y(,p'H9rIVY-b,'%bCPF7.J<Up^,(dU1VY*5#WkTU>h19w,WQhLI)3S#f$2(eb,jr*b;3Vw]*7NH%$c4Vs,eD9>XW8?N]o+(*pgC%/72LV-u<Hp,3@e^9UB1J+ak9-TN/mhKPg+AJYd$"
    "MlvAF_jCK*.O-^(63adMT->W%iewS8W6m2rtCpo'RS1R84=@paTKt)>=%&1[)*vp'u+x,VrwN;&]kuO9JDbg=pO$J*.jVe;u'm0dr9l,<*wMK*Oe=g8lV_KEBFkO'oU]^=[-792#ok,)"
    "i]lR8qQ2oA8wcRCZ^7w/Njh;?.stX?Q1>S1q4Bn$)K1<-rGdO'$Wr.Lc.CG)$/*JL4tNR/,SVO3,aUw'DJN:)Ss;wGn9A32ijw%FL+Z0Fn.U9;reSq)bmI32U==5ALuG&#Vf1398/pVo"
    "1*c-(aY168o<`JsSbk-,1N;$>0:OUas(3:8Z972LSfF8eb=c-;>SPw7.6hn3m`9^Xkn(r.qS[0;T%&Qc=+STRxX'q1BNk3&*eu2;&8q$&x>Q#Q7^Tf+6<(d%ZVmj2bDi%.3L2n+4W'$P"
    "iDDG)g,r%+?,$@?uou5tSe2aN_AQU*<h`e-GI7)?OK2A.d7_c)?wQ5AS@DL3r#7fSkgl6-++D:'A,uq7SvlB$pcpH'q3n0#_%dY#xCpr-l<F0NR@-##FEV6NTF6##$l84N1w?AO>'IAO"
    "URQ##V^Fv-XFbGM7Fl(N<3DhLGF%q.1rC$#:T__&Pi68%0xi_&[qFJ(77j_&JWoF.V735&T,[R*:xFR*K5>>#`bW-?4Ne_&6Ne_&6Ne_&n`kr-#GJcM6X;uM6X;uM(.a..^2TkL%oR(#"
    ";u.T%fAr%4tJ8&><1=GHZ_+m9/#H1F^R#SC#*N=BA9(D?v[UiFY>>^8p,KKF.W]L29uLkLlu/+4T<XoIB&hx=T1PcDaB&;HH+-AFr?(m9HZV)FKS8JCw;SD=6[^/DZUL`EUDf]GGlG&>"
    "w$)F./^n3+rlo+DB;5sIYGNk+i1t-69Jg--0pao7Sm#K)pdHW&;LuDNH@H>#/X-TI(;P>#,Gc>#0Su>#4`1?#8lC?#<xU?#@.i?#D:%@#HF7@#LRI@#P_[@#Tkn@#Xw*A#]-=A#a9OA#"
    "d<F&#*;G##.GY##2Sl##6`($#:l:$#>xL$#B.`$#F:r$#JF.%#NR@%#R_R%#Vke%#Zww%#_-4&#3^Rh%Sflr-k'MS.o?.5/sWel/wpEM0%3'/1)K^f1-d>G21&v(35>V`39V7A4=onx4"
    "A1OY5EI0;6Ibgr6M$HS7Q<)58C5w,;WoA*#[%T*#`1g*#d=#+#hI5+#lUG+#pbY+#tnl+#x$),#&1;,#*=M,#.I`,#2Ur,#6b.-#;w[H#iQtA#m^0B#qjBB#uvTB##-hB#'9$C#+E6C#"
    "/QHC#3^ZC#7jmC#;v)D#?,<D#C8ND#GDaD#KPsD#O]/E#g1A5#KA*1#gC17#MGd;#8(02#L-d3#rWM4#Hga1#,<w0#T.j<#O#'2#CYN1#qa^:#_4m3#o@/=#eG8=#t8J5#`+78#4uI-#"
    "m3B2#SB[8#Q0@8#i[*9#iOn8#1Nm;#^sN9#qh<9#:=x-#P;K2#$%X9#bC+.#Rg;<#mN=.#MTF.#RZO.#2?)4#Y#(/#[)1/#b;L/#dAU/#0Sv;#lY$0#n`-0#sf60#(F24#wrH0#%/e0#"
    "TmD<#%JSMFove:CTBEXI:<eh2g)B,3h2^G3i;#d3jD>)4kMYD4lVu`4m`:&5niUA5@(A5BA1]PBB:xlBCC=2CDLXMCEUtiCf&0g2'tN?PGT4CPGT4CPGT4CPGT4CPGT4CPGT4CPGT4CP"
    "GT4CPGT4CPGT4CPGT4CPGT4CPGT4CP-qekC`.9kEg^+F$kwViFJTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5o,^<-28ZI'O?;xp"
    "O?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xp;7q-#lLYI:xvD=#";

static const char* GetDefaultCompressedFontDataTTFBase85()
{
    return proggy_clean_ttf_compressed_data_base85;
}

#endif // #ifndef IMGUI_DISABLE

// Junk Code By Troll Face & Thaisen's Gen
void giGMrLBwHPVQpizMDNqLfSZPYPbhfeAHq69459057() {     float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL32406367 = -629535661;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL93612572 = -675445137;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL41809785 = -322143695;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL47560581 = -958898573;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL62896798 = -62636535;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL47853301 = -841255211;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL41422019 = -992972182;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL89292651 = -334528927;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL84816346 = -818203262;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL13028850 = -140077428;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL11279369 = -287730068;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL15417104 = -120716398;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL20173832 = -9032651;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL54129381 = -576783672;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL74924232 = -132362372;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76857219 = -83018826;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL87802521 = -791920450;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL51808459 = -5397326;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL4150564 = -641759215;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL39216845 = 72088750;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL13594168 = -952167547;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL21944140 = -148302693;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL36775394 = 480494;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL55311721 = -841286142;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL71670128 = -966916940;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL45578247 = -319246930;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL52581260 = 19938866;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL43394746 = -737816702;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL30105993 = -504927963;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59498619 = -899421593;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL97683752 = -989300168;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL47185435 = 42738591;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL14841792 = -643882539;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL42542975 = -982372960;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL75081538 = -958885697;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL14376930 = -901688430;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL734320 = -446845030;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL35485629 = -170880976;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL72646082 = -80912900;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL77208027 = -138490582;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL64050313 = -810320500;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL35904057 = 91729745;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76233724 = -927165614;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59873088 = -906463643;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL58901598 = 98542486;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL34253888 = -146346336;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL7135845 = -734368532;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL40671144 = -767669380;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL64283796 = -159034787;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL61337759 = 84314679;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL66748237 = -481826111;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL79801269 = -50711291;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL87439906 = -798164812;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL91693507 = -482280852;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL55864890 = -4948142;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL10462228 = -381232969;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL56837178 = -575925632;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL86498063 = -480857554;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL75890452 = -991981634;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL17318551 = -743389606;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL95272041 = -761194078;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL98027272 = -155155481;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59186658 = -829600964;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL25317727 = -918781670;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL15345098 = -150777260;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL64093934 = -230468660;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL575312 = -476833860;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL77630857 = -26659691;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL79047843 = -617897975;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL60547302 = -230673942;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76122899 = -636173797;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL52316892 = -521039475;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL79162376 = -924484426;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL26942536 = -403268634;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL75166531 = -117590750;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL77690110 = -943897292;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL45710415 = -221137079;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76902305 = -93055864;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL96410122 = -839828629;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL37416240 = -720570604;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL38442403 = -584878398;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL11910116 = -212391754;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL79110950 = -478781915;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL68768233 = -489242643;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL92750382 = -317595483;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL17882484 = -838588877;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59745529 = -159096597;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL23148284 = -61601688;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL86678084 = -877424819;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL64619311 = -477652728;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL57539751 = -225762799;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL14236257 = -965987477;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59595177 = -178899342;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL55327531 = -337523295;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL81935986 = -377296505;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL66023040 = -555165020;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76717398 = -78669292;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL50915998 = 91616055;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL44527991 = -655686383;    float YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL94807664 = -629535661;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL32406367 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL93612572;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL93612572 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL41809785;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL41809785 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL47560581;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL47560581 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL62896798;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL62896798 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL47853301;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL47853301 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL41422019;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL41422019 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL89292651;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL89292651 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL84816346;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL84816346 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL13028850;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL13028850 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL11279369;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL11279369 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL15417104;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL15417104 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL20173832;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL20173832 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL54129381;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL54129381 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL74924232;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL74924232 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76857219;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76857219 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL87802521;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL87802521 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL51808459;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL51808459 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL4150564;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL4150564 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL39216845;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL39216845 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL13594168;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL13594168 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL21944140;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL21944140 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL36775394;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL36775394 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL55311721;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL55311721 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL71670128;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL71670128 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL45578247;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL45578247 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL52581260;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL52581260 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL43394746;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL43394746 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL30105993;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL30105993 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59498619;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59498619 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL97683752;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL97683752 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL47185435;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL47185435 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL14841792;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL14841792 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL42542975;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL42542975 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL75081538;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL75081538 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL14376930;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL14376930 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL734320;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL734320 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL35485629;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL35485629 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL72646082;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL72646082 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL77208027;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL77208027 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL64050313;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL64050313 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL35904057;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL35904057 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76233724;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76233724 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59873088;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59873088 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL58901598;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL58901598 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL34253888;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL34253888 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL7135845;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL7135845 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL40671144;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL40671144 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL64283796;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL64283796 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL61337759;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL61337759 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL66748237;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL66748237 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL79801269;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL79801269 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL87439906;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL87439906 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL91693507;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL91693507 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL55864890;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL55864890 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL10462228;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL10462228 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL56837178;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL56837178 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL86498063;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL86498063 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL75890452;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL75890452 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL17318551;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL17318551 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL95272041;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL95272041 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL98027272;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL98027272 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59186658;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59186658 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL25317727;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL25317727 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL15345098;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL15345098 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL64093934;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL64093934 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL575312;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL575312 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL77630857;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL77630857 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL79047843;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL79047843 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL60547302;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL60547302 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76122899;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76122899 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL52316892;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL52316892 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL79162376;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL79162376 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL26942536;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL26942536 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL75166531;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL75166531 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL77690110;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL77690110 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL45710415;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL45710415 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76902305;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76902305 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL96410122;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL96410122 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL37416240;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL37416240 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL38442403;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL38442403 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL11910116;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL11910116 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL79110950;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL79110950 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL68768233;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL68768233 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL92750382;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL92750382 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL17882484;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL17882484 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59745529;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59745529 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL23148284;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL23148284 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL86678084;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL86678084 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL64619311;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL64619311 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL57539751;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL57539751 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL14236257;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL14236257 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59595177;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL59595177 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL55327531;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL55327531 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL81935986;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL81935986 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL66023040;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL66023040 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76717398;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL76717398 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL50915998;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL50915998 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL44527991;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL44527991 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL94807664;     YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL94807664 = YpNdpcWzNEUtUVVoQqICoqOIrocjUQcPOaQsljNkTL32406367;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ZJXeaofxsQSyCuZeBvHwNnphYCwnmQhaM65642217() {     float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn92002463 = -858292038;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn95118421 = -485600522;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn78811173 = -396284618;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn43436339 = -731509451;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn74190025 = 36856438;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn45530422 = -699514884;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn38780502 = -322689768;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn40117935 = -688740302;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn98629789 = -250875762;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn96053364 = -81336281;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn36574300 = -689272508;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn50088306 = -215737648;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn90928394 = 84788831;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn12503220 = -480942019;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn72232038 = -924888893;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn73611473 = -988391717;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn23763626 = -720136730;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn16476790 = -374733431;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn84592766 = -780878845;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn19133954 = -590319903;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn94055285 = -785188372;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn90433738 = -40704571;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn28967219 = -863814585;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn20041961 = -405624379;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn47648133 = -423054530;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn39993155 = -453864401;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn65921330 = -429541131;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn8505915 = -259198292;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn79890335 = -294520579;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn97972085 = -946404835;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn22598071 = -534519496;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn89950695 = -374479406;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn63923830 = -623829412;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn25067417 = -484256891;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn80018899 = -607095682;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn92966826 = -113345012;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn91365997 = -739623664;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn33845967 = -115333365;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn91664025 = -899619417;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn50033682 = -412371530;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn22268127 = -178982097;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn5983238 = 86788326;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn17112967 = -660610444;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn34112593 = -230378381;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn59889914 = -447775583;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn99047017 = -389290495;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn12624567 = -626224199;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn87367537 = -422609;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn3673444 = -442972407;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn76505152 = -236937782;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn17234488 = -267934335;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn86386422 = -21954546;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn62855420 = 61886735;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn64968031 = -742449807;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn71586931 = 31117771;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn1568726 = -717587468;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn66151203 = -621785938;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn58769213 = -990660239;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn95788205 = -208454921;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn34196871 = -509279162;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn79609091 = -169973754;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn30274587 = 36508524;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn60227599 = -294219724;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn657704 = -304470927;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn73455294 = -546816786;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn46623605 = -214793103;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn86164475 = -591908237;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn65860977 = -430954278;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn32484321 = -873846337;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn79265211 = -711543881;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn82245475 = -148768053;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn89917658 = -504803366;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn24812765 = -475114015;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn34559084 = -268507315;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn96865827 = -311337807;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn88072048 = -771976698;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn73320771 = -380094127;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn94854625 = -533436204;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn60152046 = -957848797;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn48601116 = 66235964;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn27368588 = -827640202;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn78553792 = -329118523;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn4832472 = -816225886;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn3385184 = 42417203;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn80737598 = -578470501;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn36211649 = -412564950;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn27095275 = -336366141;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn98955799 = -881379605;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn53480485 = -415374663;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn78450173 = -889508214;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn26815624 = -491559075;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn32596785 = -748963425;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn38057761 = -906878444;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn57467155 = -290340255;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn70424591 = -142397777;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn91993539 = -115490621;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn45755639 = -618991950;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn16455263 = -256139517;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn60657299 = -683561596;    float khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn13266309 = -858292038;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn92002463 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn95118421;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn95118421 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn78811173;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn78811173 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn43436339;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn43436339 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn74190025;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn74190025 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn45530422;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn45530422 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn38780502;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn38780502 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn40117935;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn40117935 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn98629789;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn98629789 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn96053364;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn96053364 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn36574300;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn36574300 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn50088306;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn50088306 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn90928394;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn90928394 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn12503220;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn12503220 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn72232038;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn72232038 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn73611473;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn73611473 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn23763626;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn23763626 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn16476790;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn16476790 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn84592766;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn84592766 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn19133954;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn19133954 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn94055285;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn94055285 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn90433738;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn90433738 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn28967219;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn28967219 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn20041961;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn20041961 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn47648133;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn47648133 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn39993155;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn39993155 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn65921330;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn65921330 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn8505915;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn8505915 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn79890335;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn79890335 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn97972085;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn97972085 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn22598071;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn22598071 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn89950695;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn89950695 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn63923830;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn63923830 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn25067417;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn25067417 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn80018899;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn80018899 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn92966826;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn92966826 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn91365997;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn91365997 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn33845967;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn33845967 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn91664025;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn91664025 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn50033682;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn50033682 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn22268127;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn22268127 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn5983238;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn5983238 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn17112967;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn17112967 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn34112593;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn34112593 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn59889914;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn59889914 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn99047017;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn99047017 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn12624567;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn12624567 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn87367537;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn87367537 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn3673444;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn3673444 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn76505152;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn76505152 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn17234488;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn17234488 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn86386422;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn86386422 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn62855420;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn62855420 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn64968031;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn64968031 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn71586931;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn71586931 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn1568726;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn1568726 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn66151203;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn66151203 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn58769213;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn58769213 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn95788205;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn95788205 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn34196871;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn34196871 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn79609091;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn79609091 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn30274587;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn30274587 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn60227599;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn60227599 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn657704;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn657704 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn73455294;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn73455294 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn46623605;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn46623605 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn86164475;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn86164475 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn65860977;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn65860977 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn32484321;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn32484321 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn79265211;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn79265211 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn82245475;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn82245475 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn89917658;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn89917658 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn24812765;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn24812765 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn34559084;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn34559084 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn96865827;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn96865827 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn88072048;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn88072048 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn73320771;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn73320771 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn94854625;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn94854625 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn60152046;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn60152046 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn48601116;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn48601116 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn27368588;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn27368588 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn78553792;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn78553792 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn4832472;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn4832472 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn3385184;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn3385184 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn80737598;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn80737598 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn36211649;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn36211649 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn27095275;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn27095275 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn98955799;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn98955799 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn53480485;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn53480485 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn78450173;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn78450173 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn26815624;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn26815624 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn32596785;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn32596785 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn38057761;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn38057761 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn57467155;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn57467155 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn70424591;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn70424591 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn91993539;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn91993539 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn45755639;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn45755639 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn16455263;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn16455263 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn60657299;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn60657299 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn13266309;     khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn13266309 = khpBQBhJlBagDaeRTBVMtTmUqFXrrKbjslRNkdkuZn92002463;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void duwdoikMiDpCuMZOPSsyWpaFULWPsnKQk25944875() {     float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi82128772 = -917048239;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi78243486 = -860526692;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi74303872 = -533079079;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi16934914 = -917681273;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi87246760 = 95532996;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi26316826 = -592147992;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi33443940 = 39764759;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi92996498 = -325188041;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi22441478 = -258768399;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi309035 = -751210807;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi12726120 = -97692665;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi84837813 = -795325783;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi29274527 = -227447030;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi50922074 = -479102903;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi70306410 = -310009836;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi97791215 = -688771587;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi67725806 = -981481972;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi37832502 = -817582723;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi45507157 = -147289281;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi86458202 = -138198213;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi81977688 = -489613464;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi88515320 = -373801206;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi62205637 = -170274506;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi27963058 = -853648754;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi94533321 = 33434526;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi58784119 = -329738135;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi87888665 = -189070125;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi31676290 = -319088351;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi41099334 = 43280373;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi45761166 = -820807226;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi26061474 = -861186040;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi89317609 = -875303825;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi72892871 = -924054571;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi48906062 = -475708049;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi15615434 = -257431343;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi46197833 = -416374422;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi91599566 = -255439569;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi58203250 = 18607391;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi2197043 = -607081463;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi94545823 = -317079303;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35967800 = -984843372;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi60627701 = -827704887;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi76929808 = -36036039;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi64774534 = -94461570;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi51854331 = -560285538;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi19486011 = -872914400;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi93047857 = -174706699;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi77753997 = -27078862;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi31592098 = -878911754;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi5785558 = -693934119;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi46600011 = -642316379;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi30159529 = 13618621;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi12307876 = -749966260;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi17875094 = -866005089;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi43967187 = -97482500;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi93613451 = -443247034;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi16037850 = -590252187;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi46340814 = -679430325;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi22401593 = -851115799;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi28462641 = -574728869;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi38428161 = -303077868;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi1767650 = -641146891;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi51897165 = -268468415;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi76680311 = -437961174;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi74247561 = -890024768;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi23408510 = -222388840;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi11944942 = -871271212;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi80368465 = -751738981;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35306640 = -121671561;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi24108577 = -893635414;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi6191649 = -333332019;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi9522556 = -900089363;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35635460 = -110501261;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi50961333 = -830209978;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi50490402 = -153354841;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi21349987 = -661908578;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi11585513 = -237765167;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi97431102 = 24187064;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi76108726 = -193363216;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi75047311 = -93651074;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi65736262 = -55031437;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi10134669 = -61991264;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi84193 = -440176598;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35313776 = -262785508;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi99161155 = -78490847;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi95901944 = -774804661;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi77009734 = -25337566;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi55017778 = 41950517;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi4938875 = -278225549;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi22001982 = -814184310;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi30159984 = -826122236;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi45258752 = -576009244;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35801658 = -130276810;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi73734401 = 67647406;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi56117663 = 85998564;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi34200150 = -243696482;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi8730537 = -459236473;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi249497 = -598074866;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi90526972 = -204436803;    float DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi28445822 = -917048239;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi82128772 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi78243486;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi78243486 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi74303872;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi74303872 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi16934914;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi16934914 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi87246760;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi87246760 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi26316826;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi26316826 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi33443940;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi33443940 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi92996498;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi92996498 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi22441478;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi22441478 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi309035;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi309035 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi12726120;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi12726120 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi84837813;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi84837813 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi29274527;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi29274527 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi50922074;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi50922074 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi70306410;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi70306410 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi97791215;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi97791215 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi67725806;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi67725806 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi37832502;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi37832502 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi45507157;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi45507157 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi86458202;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi86458202 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi81977688;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi81977688 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi88515320;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi88515320 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi62205637;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi62205637 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi27963058;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi27963058 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi94533321;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi94533321 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi58784119;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi58784119 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi87888665;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi87888665 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi31676290;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi31676290 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi41099334;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi41099334 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi45761166;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi45761166 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi26061474;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi26061474 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi89317609;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi89317609 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi72892871;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi72892871 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi48906062;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi48906062 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi15615434;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi15615434 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi46197833;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi46197833 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi91599566;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi91599566 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi58203250;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi58203250 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi2197043;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi2197043 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi94545823;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi94545823 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35967800;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35967800 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi60627701;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi60627701 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi76929808;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi76929808 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi64774534;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi64774534 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi51854331;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi51854331 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi19486011;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi19486011 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi93047857;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi93047857 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi77753997;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi77753997 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi31592098;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi31592098 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi5785558;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi5785558 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi46600011;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi46600011 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi30159529;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi30159529 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi12307876;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi12307876 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi17875094;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi17875094 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi43967187;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi43967187 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi93613451;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi93613451 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi16037850;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi16037850 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi46340814;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi46340814 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi22401593;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi22401593 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi28462641;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi28462641 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi38428161;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi38428161 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi1767650;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi1767650 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi51897165;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi51897165 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi76680311;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi76680311 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi74247561;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi74247561 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi23408510;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi23408510 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi11944942;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi11944942 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi80368465;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi80368465 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35306640;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35306640 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi24108577;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi24108577 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi6191649;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi6191649 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi9522556;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi9522556 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35635460;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35635460 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi50961333;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi50961333 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi50490402;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi50490402 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi21349987;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi21349987 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi11585513;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi11585513 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi97431102;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi97431102 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi76108726;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi76108726 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi75047311;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi75047311 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi65736262;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi65736262 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi10134669;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi10134669 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi84193;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi84193 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35313776;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35313776 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi99161155;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi99161155 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi95901944;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi95901944 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi77009734;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi77009734 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi55017778;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi55017778 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi4938875;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi4938875 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi22001982;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi22001982 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi30159984;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi30159984 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi45258752;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi45258752 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35801658;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi35801658 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi73734401;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi73734401 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi56117663;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi56117663 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi34200150;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi34200150 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi8730537;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi8730537 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi249497;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi249497 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi90526972;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi90526972 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi28445822;     DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi28445822 = DvQHqxNQilfjLbWzyqKjGenTrIcLUUvtZSrRIGZVfi82128772;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void sLpXoKsgjNBPsmViABWFJUmoRChDtLnRC38490064() {     float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ1596943 = -230179451;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ31267351 = -306404689;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ91140864 = -184707694;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ35582063 = -734255536;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ87693276 = -530739420;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ51908900 = -482632761;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ78275818 = -403541471;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ58246731 = -418996007;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ83128274 = -986959778;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ78237758 = -756796853;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ66949383 = -530682965;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ88332426 = -794628488;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ19646186 = -651804306;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ59338114 = 78611371;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ30832871 = -608093627;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ64006864 = -51963521;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ73687919 = -53256653;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ61895253 = -568337442;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ45142037 = -524494041;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ67069504 = -855734669;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ94433760 = 4174210;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ3497404 = -885604419;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ30378643 = -467849124;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ45684726 = -490192746;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ5736811 = -260865583;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ63551581 = -15533354;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ71816796 = -954221057;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82467965 = -482821630;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82844290 = 29369227;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ30468020 = -912245921;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ55865559 = -726512133;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ28896920 = -339652844;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ84368975 = -379262338;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ7662569 = -780311256;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ55545769 = -320134149;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82263770 = -719943031;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ59983017 = -782315644;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ99685724 = -58601425;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ69510367 = 28503712;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ15827560 = -313610400;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ77449857 = -394629668;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ72486834 = 33398887;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ48063049 = 16162163;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ48160073 = -543534231;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ31882743 = -837408502;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ73947138 = -310245822;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ75037737 = -88400022;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ77909827 = -210366176;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ72727688 = -892850992;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ46683900 = -454946464;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ21035580 = 51318690;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ46608389 = -363734239;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82133021 = -426075221;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ90805121 = -860598725;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ44056303 = -972041135;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ98099539 = -344575033;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ888708 = -838555565;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ45456138 = -694514948;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ29845252 = -373389953;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ24141696 = -415206067;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ80092104 = -528411704;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ95807853 = -920719842;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ75402441 = -348365235;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ52660255 = 25286142;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ22372200 = 69715279;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ38052463 = -91030122;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ3963452 = -315366150;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ11983618 = -871493051;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ3792345 = -601254480;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ48569101 = -888150597;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ4023848 = -269647878;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ74002194 = -994655229;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ92384886 = -496841154;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ29314477 = -110883642;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ89619647 = -361105002;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ21946927 = 70775323;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ55434354 = -801766583;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82218570 = -924314894;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ13801984 = -652784245;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ31789673 = -950619762;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ88513843 = -927133333;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ93906969 = -643854881;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ9740277 = -589970638;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ36160390 = -515684309;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ9432440 = -863564611;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ9257170 = -262777894;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ46763898 = -913577623;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ93563853 = -518663614;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ63606265 = -808270121;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ57446230 = -975559117;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ81375063 = -881387466;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ14526880 = 12199304;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ69840472 = -685211472;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ45368671 = -556290222;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ35735456 = -785198696;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ81642003 = -473909826;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ97084392 = -618235879;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ95402794 = 90876021;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ25787874 = -513249511;    float iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ93830279 = -230179451;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ1596943 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ31267351;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ31267351 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ91140864;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ91140864 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ35582063;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ35582063 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ87693276;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ87693276 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ51908900;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ51908900 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ78275818;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ78275818 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ58246731;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ58246731 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ83128274;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ83128274 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ78237758;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ78237758 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ66949383;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ66949383 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ88332426;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ88332426 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ19646186;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ19646186 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ59338114;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ59338114 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ30832871;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ30832871 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ64006864;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ64006864 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ73687919;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ73687919 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ61895253;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ61895253 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ45142037;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ45142037 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ67069504;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ67069504 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ94433760;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ94433760 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ3497404;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ3497404 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ30378643;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ30378643 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ45684726;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ45684726 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ5736811;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ5736811 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ63551581;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ63551581 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ71816796;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ71816796 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82467965;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82467965 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82844290;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82844290 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ30468020;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ30468020 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ55865559;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ55865559 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ28896920;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ28896920 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ84368975;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ84368975 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ7662569;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ7662569 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ55545769;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ55545769 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82263770;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82263770 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ59983017;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ59983017 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ99685724;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ99685724 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ69510367;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ69510367 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ15827560;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ15827560 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ77449857;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ77449857 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ72486834;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ72486834 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ48063049;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ48063049 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ48160073;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ48160073 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ31882743;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ31882743 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ73947138;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ73947138 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ75037737;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ75037737 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ77909827;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ77909827 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ72727688;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ72727688 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ46683900;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ46683900 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ21035580;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ21035580 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ46608389;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ46608389 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82133021;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82133021 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ90805121;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ90805121 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ44056303;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ44056303 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ98099539;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ98099539 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ888708;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ888708 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ45456138;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ45456138 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ29845252;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ29845252 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ24141696;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ24141696 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ80092104;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ80092104 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ95807853;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ95807853 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ75402441;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ75402441 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ52660255;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ52660255 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ22372200;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ22372200 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ38052463;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ38052463 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ3963452;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ3963452 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ11983618;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ11983618 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ3792345;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ3792345 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ48569101;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ48569101 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ4023848;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ4023848 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ74002194;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ74002194 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ92384886;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ92384886 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ29314477;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ29314477 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ89619647;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ89619647 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ21946927;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ21946927 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ55434354;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ55434354 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82218570;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ82218570 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ13801984;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ13801984 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ31789673;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ31789673 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ88513843;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ88513843 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ93906969;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ93906969 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ9740277;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ9740277 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ36160390;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ36160390 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ9432440;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ9432440 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ9257170;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ9257170 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ46763898;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ46763898 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ93563853;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ93563853 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ63606265;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ63606265 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ57446230;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ57446230 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ81375063;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ81375063 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ14526880;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ14526880 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ69840472;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ69840472 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ45368671;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ45368671 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ35735456;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ35735456 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ81642003;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ81642003 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ97084392;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ97084392 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ95402794;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ95402794 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ25787874;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ25787874 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ93830279;     iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ93830279 = iOpplcBwVgfmNMerBGdYJGYYBFmcpnXajMKXgtOYVJ1596943;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void SNYcLaiiHfIVgxKVrnlzXGBOTijMPANjc98792720() {     float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW91723250 = -288935652;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW14392416 = -681330859;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW86633563 = -321502155;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW9080638 = -920427358;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW750013 = -472062862;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW32695305 = -375265869;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW72939256 = -41086944;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW11125295 = -55443745;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW6939963 = -994852416;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW82493428 = -326671378;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW43101202 = 60896877;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW23081934 = -274216623;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW57992318 = -964040167;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW97756967 = 80450487;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW28907243 = 6785430;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW88186606 = -852343391;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW17650100 = -314601895;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW83250966 = 88813266;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW6056428 = -990904477;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW34393752 = -403612978;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW82356162 = -800250882;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW1578986 = -118701055;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW63617061 = -874309045;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW53605824 = -938217122;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW52621999 = -904376527;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW82342545 = -991407089;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93784131 = -713750051;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW5638341 = -542711688;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW44053288 = -732829821;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW78257100 = -786648312;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW59328961 = 46821324;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW28263834 = -840477263;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93338016 = -679487498;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW31501213 = -771762414;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW91142304 = 29530190;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW35494777 = 77027559;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW60216586 = -298131548;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW24043008 = 75339331;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW80043384 = -778958333;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW60339701 = -218318173;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW91149530 = -100490943;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW27131297 = -881094326;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW7879891 = -459263432;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW78822014 = -407617420;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW23847160 = -949918458;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW94386131 = -793869727;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW55461027 = -736882521;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW68296286 = -237022429;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW646343 = -228790339;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW75964306 = -911942801;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW50401104 = -323063355;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW90381496 = -328161072;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW31585477 = -137928216;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW43712184 = -984154007;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW16436559 = -641407;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW90144265 = -70234598;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW50775354 = -807021814;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW33027739 = -383285034;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW56458639 = 83949169;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW18407467 = -480655774;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW38911174 = -661515819;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW67300916 = -498375256;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW67072006 = -322613925;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW28682862 = -108204105;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW23164467 = -273492702;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW14837368 = -98625860;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW29743918 = -594729126;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW26491106 = -92277754;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW6614664 = -949079704;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93412465 = 29757870;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW27970021 = -454211844;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93607091 = -289941227;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW3207583 = -132228401;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW45716726 = -672586305;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW43244222 = -203122036;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW55224865 = -919156557;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93699095 = -659437623;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW84795047 = -366691626;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW29758664 = -988298665;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW58235867 = -10506801;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW26881519 = -154524568;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW25487846 = -376727622;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW4991998 = -213921350;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW68088982 = -820887020;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW27855997 = -363584957;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW68947465 = -625017605;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW96678357 = -602549048;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW49625832 = -695333492;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW15064655 = -671121007;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW998039 = -900235212;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW84719422 = -115950627;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW27188847 = -914846515;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW67584369 = 91390162;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW61635917 = -198302560;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW21428528 = -556802355;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW23848614 = -602115687;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW60059290 = -458480401;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW79197028 = -251059328;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW55657547 = -34124718;    float lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW9009792 = -288935652;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW91723250 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW14392416;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW14392416 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW86633563;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW86633563 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW9080638;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW9080638 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW750013;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW750013 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW32695305;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW32695305 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW72939256;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW72939256 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW11125295;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW11125295 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW6939963;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW6939963 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW82493428;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW82493428 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW43101202;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW43101202 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW23081934;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW23081934 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW57992318;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW57992318 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW97756967;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW97756967 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW28907243;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW28907243 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW88186606;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW88186606 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW17650100;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW17650100 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW83250966;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW83250966 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW6056428;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW6056428 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW34393752;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW34393752 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW82356162;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW82356162 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW1578986;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW1578986 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW63617061;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW63617061 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW53605824;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW53605824 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW52621999;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW52621999 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW82342545;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW82342545 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93784131;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93784131 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW5638341;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW5638341 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW44053288;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW44053288 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW78257100;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW78257100 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW59328961;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW59328961 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW28263834;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW28263834 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93338016;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93338016 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW31501213;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW31501213 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW91142304;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW91142304 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW35494777;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW35494777 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW60216586;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW60216586 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW24043008;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW24043008 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW80043384;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW80043384 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW60339701;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW60339701 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW91149530;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW91149530 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW27131297;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW27131297 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW7879891;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW7879891 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW78822014;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW78822014 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW23847160;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW23847160 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW94386131;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW94386131 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW55461027;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW55461027 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW68296286;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW68296286 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW646343;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW646343 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW75964306;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW75964306 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW50401104;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW50401104 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW90381496;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW90381496 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW31585477;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW31585477 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW43712184;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW43712184 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW16436559;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW16436559 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW90144265;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW90144265 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW50775354;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW50775354 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW33027739;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW33027739 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW56458639;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW56458639 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW18407467;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW18407467 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW38911174;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW38911174 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW67300916;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW67300916 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW67072006;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW67072006 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW28682862;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW28682862 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW23164467;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW23164467 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW14837368;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW14837368 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW29743918;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW29743918 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW26491106;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW26491106 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW6614664;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW6614664 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93412465;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93412465 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW27970021;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW27970021 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93607091;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93607091 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW3207583;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW3207583 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW45716726;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW45716726 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW43244222;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW43244222 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW55224865;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW55224865 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93699095;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW93699095 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW84795047;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW84795047 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW29758664;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW29758664 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW58235867;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW58235867 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW26881519;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW26881519 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW25487846;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW25487846 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW4991998;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW4991998 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW68088982;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW68088982 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW27855997;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW27855997 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW68947465;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW68947465 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW96678357;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW96678357 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW49625832;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW49625832 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW15064655;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW15064655 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW998039;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW998039 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW84719422;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW84719422 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW27188847;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW27188847 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW67584369;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW67584369 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW61635917;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW61635917 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW21428528;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW21428528 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW23848614;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW23848614 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW60059290;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW60059290 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW79197028;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW79197028 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW55657547;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW55657547 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW9009792;     lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW9009792 = lcfRuItdJePFwMSpHjQgTOLLJJcqWSGRZtuUeExfrW91723250;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ZhieuxfXIHywBkbyYyzjKcCMHObsNMhKC11337910() {     float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT11191422 = -702066864;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT67416279 = -127208855;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT3470555 = 26869230;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT27727787 = -737001621;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT1196529 = 1664722;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT58287379 = -265750637;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT17771135 = -484393174;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT76375528 = -149251711;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT67626759 = -623043795;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT60422151 = -332257424;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT97324465 = -372093423;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT26576548 = -273519328;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT48363978 = -288397443;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT6173008 = -461835239;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT89433704 = -291298361;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT54402255 = -215535325;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT23612213 = -486376576;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT7313718 = -761941452;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT5691307 = -268109238;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT15005054 = -21149435;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT94812234 = -306463207;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT16561068 = -630504268;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT31790067 = -71883664;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT71327492 = -574761113;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT63825488 = -98676637;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT87110007 = -677202307;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT77712262 = -378900982;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT56430015 = -706444967;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT85798245 = -746740966;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT62963954 = -878087006;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT89133046 = -918504769;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT67843144 = -304826281;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT4814120 = -134695264;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT90257720 = 23634380;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT31072640 = -33172616;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT71560714 = -226541049;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT28600037 = -825007623;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT65525482 = -1869484;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT47356709 = -143373159;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT81621437 = -214849269;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT32631587 = -610277239;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT38990430 = -19990552;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT79013131 = -407065230;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT62207552 = -856690080;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT3875572 = -127041421;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT48847259 = -231201148;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT37450907 = -650575844;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT68452116 = -420309744;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT41781934 = -242729577;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT16862649 = -672955147;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT24836673 = -729428286;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT6830357 = -705513931;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT1410623 = -914037177;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT16642213 = -978747643;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT16525675 = -875200042;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT94630353 = 28437403;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT35626212 = 44674809;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT32143063 = -398369657;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT63902298 = -538324985;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT14086522 = -321132971;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT80575116 = -886849655;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT61341120 = -777948207;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT90577283 = -402510745;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT4662806 = -744956789;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT71289105 = -413752655;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT29481321 = 32732858;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT21762428 = -38824064;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT58106257 = -212031824;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT75100367 = -328662624;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT17872990 = 35242687;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT25802219 = -390527703;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT58086731 = -384507092;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT59957009 = -518568294;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT24069870 = 46740031;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT82373466 = -410872196;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT55821804 = -186472656;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT37547937 = -123439038;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT69582514 = -215193584;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT67451921 = -347719693;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT14978230 = -867475489;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT49659100 = 73373537;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT9260147 = -958591239;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT14648082 = -363715390;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT68935597 = 26214180;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT38127281 = -48658721;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT82302690 = -112990839;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT66432521 = -390789105;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT88171907 = -155947622;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT73732045 = -101165579;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT36442287 = 38389980;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT35934502 = -171215858;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT96456973 = -326637967;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT1623184 = -463544500;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT33270188 = -822240188;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT1046321 = -327999615;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT71290467 = -832329032;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT48413147 = -617479807;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT74350326 = -662108441;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT90918447 = -342937426;    float PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT74394250 = -702066864;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT11191422 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT67416279;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT67416279 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT3470555;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT3470555 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT27727787;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT27727787 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT1196529;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT1196529 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT58287379;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT58287379 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT17771135;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT17771135 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT76375528;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT76375528 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT67626759;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT67626759 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT60422151;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT60422151 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT97324465;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT97324465 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT26576548;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT26576548 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT48363978;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT48363978 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT6173008;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT6173008 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT89433704;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT89433704 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT54402255;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT54402255 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT23612213;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT23612213 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT7313718;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT7313718 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT5691307;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT5691307 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT15005054;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT15005054 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT94812234;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT94812234 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT16561068;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT16561068 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT31790067;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT31790067 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT71327492;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT71327492 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT63825488;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT63825488 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT87110007;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT87110007 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT77712262;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT77712262 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT56430015;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT56430015 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT85798245;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT85798245 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT62963954;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT62963954 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT89133046;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT89133046 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT67843144;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT67843144 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT4814120;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT4814120 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT90257720;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT90257720 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT31072640;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT31072640 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT71560714;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT71560714 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT28600037;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT28600037 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT65525482;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT65525482 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT47356709;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT47356709 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT81621437;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT81621437 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT32631587;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT32631587 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT38990430;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT38990430 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT79013131;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT79013131 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT62207552;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT62207552 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT3875572;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT3875572 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT48847259;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT48847259 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT37450907;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT37450907 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT68452116;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT68452116 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT41781934;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT41781934 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT16862649;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT16862649 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT24836673;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT24836673 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT6830357;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT6830357 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT1410623;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT1410623 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT16642213;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT16642213 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT16525675;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT16525675 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT94630353;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT94630353 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT35626212;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT35626212 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT32143063;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT32143063 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT63902298;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT63902298 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT14086522;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT14086522 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT80575116;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT80575116 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT61341120;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT61341120 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT90577283;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT90577283 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT4662806;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT4662806 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT71289105;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT71289105 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT29481321;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT29481321 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT21762428;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT21762428 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT58106257;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT58106257 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT75100367;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT75100367 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT17872990;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT17872990 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT25802219;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT25802219 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT58086731;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT58086731 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT59957009;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT59957009 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT24069870;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT24069870 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT82373466;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT82373466 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT55821804;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT55821804 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT37547937;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT37547937 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT69582514;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT69582514 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT67451921;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT67451921 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT14978230;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT14978230 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT49659100;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT49659100 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT9260147;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT9260147 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT14648082;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT14648082 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT68935597;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT68935597 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT38127281;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT38127281 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT82302690;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT82302690 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT66432521;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT66432521 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT88171907;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT88171907 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT73732045;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT73732045 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT36442287;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT36442287 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT35934502;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT35934502 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT96456973;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT96456973 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT1623184;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT1623184 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT33270188;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT33270188 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT1046321;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT1046321 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT71290467;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT71290467 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT48413147;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT48413147 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT74350326;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT74350326 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT90918447;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT90918447 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT74394250;     PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT74394250 = PXzDYpGPlaqGzHNQfpVykIxeVWgVnJvZoumMbvzItT11191422;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void jWjPyVXSiBVNpzUcOxVvaTsKYJhYqagOD7521070() {     float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc70787518 = -930823241;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc68922128 = 62635760;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc40471943 = -47271692;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc23603545 = -509612498;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc12489755 = -998842305;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc55964499 = -124010310;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc15129618 = -914110759;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc27200812 = -503463087;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc81440203 = -55716294;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc43446667 = -273516278;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc22619397 = -773635862;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc61247749 = -368540577;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc19118541 = -194575962;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc64546846 = -365993586;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc86741510 = 16175117;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc51156510 = -20908216;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc59573316 = -414592856;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc71982048 = -31277557;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc86133510 = -407228868;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc94922163 = -683558088;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc75273353 = -139484032;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc85050666 = -522906145;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc23981892 = -936178743;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc36057731 = -139099350;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc39803493 = -654814227;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc81524914 = -811819778;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc91052332 = -828380979;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc21541184 = -227826557;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc35582588 = -536333582;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc1437421 = -925070249;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc14047365 = -463724097;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc10608405 = -722044279;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc53896158 = -114642137;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc72782162 = -578249551;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc36010001 = -781382601;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc50150611 = -538197631;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc19231714 = -17786257;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc63885819 = 53678126;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc66374652 = -962079675;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc54447092 = -488730217;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc90849400 = 21061165;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc9069612 = -24931970;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc19892374 = -140510059;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc36447058 = -180604819;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc4863887 = -673359489;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc13640388 = -474145307;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc42939629 = -542431511;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc15148510 = -753062972;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc81171581 = -526667197;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc32030041 = -994207607;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc75322923 = -515536510;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc13415510 = -676757186;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc76826137 = -53985631;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc89916735 = -138916598;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc32247717 = -839134129;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc85736851 = -307917096;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc44940237 = -1185498;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc4414212 = -908172343;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc83800052 = -854798272;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc30964841 = -87022528;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc64912167 = -295629331;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc93588433 = -586284203;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc91618224 = -967129506;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc80002782 = -130646046;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc29399302 = -809792181;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc12010992 = 48408416;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc7351592 = -153898441;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc46336378 = -616326411;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc28536846 = -584610985;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc36590899 = -445627252;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc31924796 = 96878040;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc95687496 = -368270983;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc5607397 = -69197882;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc31686418 = -918498651;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc4072763 = -604619253;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc66203742 = -14552062;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc65158293 = -282396087;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc87534834 = -655573924;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc31193845 = -465739862;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc26163106 = -80668920;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc38585285 = -169388267;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc75903823 = 24681992;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc40369603 = -701159361;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc3552548 = -542125975;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc26114498 = -309533739;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc631856 = -786966911;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc33782268 = -568058648;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc63979422 = -975725539;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc40534446 = -739115423;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc50273150 = -373465505;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc5210375 = -437012134;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc14817503 = -109613915;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc80085767 = -91523602;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc35409811 = -775057148;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc89534925 = -93100887;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc97260966 = -392654633;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc17451387 = -57802465;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc39889591 = 90135986;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc7047756 = -370812639;    float MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc92852894 = -930823241;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc70787518 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc68922128;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc68922128 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc40471943;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc40471943 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc23603545;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc23603545 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc12489755;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc12489755 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc55964499;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc55964499 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc15129618;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc15129618 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc27200812;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc27200812 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc81440203;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc81440203 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc43446667;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc43446667 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc22619397;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc22619397 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc61247749;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc61247749 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc19118541;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc19118541 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc64546846;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc64546846 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc86741510;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc86741510 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc51156510;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc51156510 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc59573316;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc59573316 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc71982048;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc71982048 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc86133510;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc86133510 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc94922163;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc94922163 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc75273353;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc75273353 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc85050666;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc85050666 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc23981892;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc23981892 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc36057731;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc36057731 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc39803493;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc39803493 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc81524914;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc81524914 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc91052332;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc91052332 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc21541184;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc21541184 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc35582588;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc35582588 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc1437421;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc1437421 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc14047365;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc14047365 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc10608405;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc10608405 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc53896158;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc53896158 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc72782162;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc72782162 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc36010001;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc36010001 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc50150611;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc50150611 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc19231714;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc19231714 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc63885819;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc63885819 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc66374652;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc66374652 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc54447092;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc54447092 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc90849400;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc90849400 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc9069612;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc9069612 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc19892374;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc19892374 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc36447058;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc36447058 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc4863887;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc4863887 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc13640388;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc13640388 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc42939629;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc42939629 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc15148510;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc15148510 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc81171581;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc81171581 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc32030041;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc32030041 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc75322923;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc75322923 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc13415510;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc13415510 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc76826137;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc76826137 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc89916735;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc89916735 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc32247717;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc32247717 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc85736851;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc85736851 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc44940237;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc44940237 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc4414212;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc4414212 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc83800052;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc83800052 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc30964841;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc30964841 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc64912167;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc64912167 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc93588433;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc93588433 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc91618224;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc91618224 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc80002782;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc80002782 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc29399302;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc29399302 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc12010992;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc12010992 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc7351592;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc7351592 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc46336378;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc46336378 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc28536846;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc28536846 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc36590899;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc36590899 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc31924796;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc31924796 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc95687496;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc95687496 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc5607397;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc5607397 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc31686418;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc31686418 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc4072763;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc4072763 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc66203742;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc66203742 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc65158293;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc65158293 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc87534834;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc87534834 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc31193845;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc31193845 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc26163106;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc26163106 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc38585285;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc38585285 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc75903823;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc75903823 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc40369603;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc40369603 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc3552548;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc3552548 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc26114498;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc26114498 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc631856;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc631856 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc33782268;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc33782268 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc63979422;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc63979422 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc40534446;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc40534446 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc50273150;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc50273150 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc5210375;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc5210375 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc14817503;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc14817503 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc80085767;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc80085767 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc35409811;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc35409811 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc89534925;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc89534925 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc97260966;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc97260966 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc17451387;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc17451387 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc39889591;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc39889591 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc7047756;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc7047756 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc92852894;     MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc92852894 = MupyoQfTjlKSigABRAuqQVQdYqonybIVHKcEfeZgpc70787518;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void DZojgIkNrtWnJBbOWwBPNmwsYaUmhrkVq20066259() {     float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN90255688 = -243954453;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN21945993 = -483242236;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN57308935 = -798900307;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN42250694 = -326186761;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN12936271 = -525114721;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN81556573 = -14495078;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN59961496 = -257416989;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN92451045 = -597271053;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN42127000 = -783907674;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN21375390 = -279102323;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN76842660 = -106626162;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN64742363 = -367843282;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN9490201 = -618933238;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN72962887 = -908279312;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN47267971 = -281908674;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN17372159 = -484100150;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN65535429 = -586367538;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN96044800 = -882032275;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN85768389 = -784433628;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN75533465 = -301094544;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN87729425 = -745696358;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN32750 = 65290642;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN92154898 = -133753361;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN53779400 = -875643342;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN51006982 = -949114336;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN86292375 = -497614996;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN74980463 = -493531911;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN72332858 = -391559836;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN77327544 = -550244728;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN86144274 = 83491057;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN43851450 = -329050190;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN50187716 = -186393297;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN65372261 = -669849904;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN31538670 = -882852758;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN75940337 = -844085407;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN86216548 = -841766239;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN87615164 = -544662332;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN5368294 = -23530689;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN33687977 = -326494500;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN75728828 = -485261314;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN32331458 = -488725131;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN20928744 = -263828196;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN91025614 = -88311857;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN19832597 = -629677480;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN84892297 = -950482452;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN68101514 = 88523272;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN24929509 = -456124834;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN15304340 = -936350286;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN22307172 = -540606435;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN72928383 = -755219952;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN49758492 = -921901441;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN29864370 = 45889954;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN46651284 = -830094592;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN62846764 = -133510235;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN32336834 = -613692764;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN90222938 = -209245095;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN29791095 = -249488875;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN3529535 = -923256966;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN91243711 = -377072426;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN26643896 = 72500275;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN6576111 = -520963168;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN87628637 = -865857154;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN15123501 = 52973674;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN55982725 = -767398731;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN77523939 = -950052134;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN26654945 = -920232866;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN99370101 = -697993379;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN77951530 = -736080481;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN97022549 = 35806095;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN61051423 = -440142435;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN29756994 = -939437818;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN60167136 = -462836849;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN62356823 = -455537775;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN10039561 = -199172315;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN43202007 = -812369413;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN66800681 = -381868162;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN9007135 = -846397502;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN72322302 = -504075882;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN68887102 = -925160890;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN82905467 = -937637609;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN61362866 = 58509837;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN59676124 = -557181625;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN50025686 = -850953401;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN4399162 = -795024776;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN36385783 = 5392498;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN13987080 = -274940145;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN3536432 = -356298706;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN2525498 = -436339670;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN99201836 = -169159994;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN85717398 = -534840313;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN56425454 = -492277365;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN84085630 = -621405367;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN14124582 = -646458264;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN7044081 = -298994776;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN69152718 = -964298147;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN44702820 = -622867978;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN5805244 = -216801871;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN35042889 = -320913127;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN42308657 = -679625346;    float lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN58237353 = -243954453;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN90255688 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN21945993;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN21945993 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN57308935;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN57308935 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN42250694;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN42250694 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN12936271;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN12936271 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN81556573;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN81556573 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN59961496;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN59961496 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN92451045;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN92451045 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN42127000;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN42127000 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN21375390;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN21375390 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN76842660;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN76842660 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN64742363;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN64742363 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN9490201;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN9490201 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN72962887;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN72962887 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN47267971;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN47267971 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN17372159;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN17372159 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN65535429;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN65535429 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN96044800;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN96044800 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN85768389;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN85768389 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN75533465;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN75533465 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN87729425;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN87729425 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN32750;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN32750 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN92154898;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN92154898 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN53779400;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN53779400 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN51006982;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN51006982 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN86292375;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN86292375 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN74980463;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN74980463 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN72332858;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN72332858 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN77327544;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN77327544 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN86144274;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN86144274 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN43851450;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN43851450 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN50187716;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN50187716 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN65372261;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN65372261 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN31538670;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN31538670 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN75940337;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN75940337 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN86216548;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN86216548 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN87615164;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN87615164 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN5368294;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN5368294 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN33687977;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN33687977 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN75728828;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN75728828 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN32331458;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN32331458 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN20928744;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN20928744 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN91025614;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN91025614 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN19832597;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN19832597 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN84892297;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN84892297 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN68101514;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN68101514 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN24929509;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN24929509 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN15304340;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN15304340 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN22307172;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN22307172 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN72928383;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN72928383 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN49758492;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN49758492 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN29864370;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN29864370 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN46651284;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN46651284 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN62846764;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN62846764 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN32336834;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN32336834 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN90222938;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN90222938 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN29791095;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN29791095 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN3529535;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN3529535 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN91243711;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN91243711 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN26643896;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN26643896 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN6576111;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN6576111 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN87628637;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN87628637 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN15123501;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN15123501 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN55982725;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN55982725 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN77523939;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN77523939 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN26654945;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN26654945 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN99370101;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN99370101 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN77951530;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN77951530 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN97022549;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN97022549 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN61051423;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN61051423 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN29756994;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN29756994 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN60167136;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN60167136 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN62356823;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN62356823 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN10039561;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN10039561 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN43202007;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN43202007 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN66800681;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN66800681 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN9007135;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN9007135 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN72322302;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN72322302 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN68887102;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN68887102 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN82905467;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN82905467 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN61362866;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN61362866 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN59676124;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN59676124 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN50025686;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN50025686 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN4399162;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN4399162 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN36385783;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN36385783 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN13987080;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN13987080 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN3536432;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN3536432 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN2525498;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN2525498 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN99201836;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN99201836 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN85717398;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN85717398 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN56425454;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN56425454 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN84085630;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN84085630 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN14124582;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN14124582 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN7044081;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN7044081 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN69152718;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN69152718 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN44702820;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN44702820 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN5805244;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN5805244 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN35042889;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN35042889 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN42308657;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN42308657 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN58237353;     lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN58237353 = lWhtINyCWeueDwYuELAnpMRcwLFoyfzJAwXftVOjDN90255688;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void oFvFGByXekZJlVqUGkmFyoynMJDwpnPIY80368916() {     float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd80381996 = -302710654;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5071058 = -858168406;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd52801634 = -935694768;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd15749269 = -512358583;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd25993007 = -466438163;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd62342978 = 92871814;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd54624934 = -994962462;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd45329609 = -233718791;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd65938688 = -791800311;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd25631060 = -948976849;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd52994480 = -615046320;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd99491870 = -947431417;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd47836333 = -931169099;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd11381741 = -906440196;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd45342343 = -767029617;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd41551901 = -184480020;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd9497610 = -847712779;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd17400513 = -224881567;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd46682780 = -150844064;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd42857713 = -948972853;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd75651827 = -450121450;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd98114331 = -267805994;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd25393317 = -540213282;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd61700497 = -223667718;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd97892169 = -492625280;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5083341 = -373488731;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd96947798 = -253060905;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd95503233 = -451449894;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd38536543 = -212443776;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd33933355 = -890911334;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd47314853 = -655716734;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd49554630 = -687217716;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd74341302 = -970075063;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd55377314 = -874303916;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd11536872 = -494421068;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd39447555 = -44795650;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd87848733 = -60478237;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd29725577 = -989589933;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd44220994 = -33956546;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd20240970 = -389969087;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd46031131 = -194586407;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd75573207 = -78321409;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd50842456 = -563737452;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd50494537 = -493760669;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd76856715 = 37007592;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd88540508 = -395100634;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5352800 = -4607334;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5690799 = -963006540;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd50225826 = -976545782;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd2208789 = -112216290;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd79124016 = -196283486;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd73637477 = 81463121;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd96103738 = -541947586;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd15753827 = -257065516;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd4717089 = -742293036;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd82267665 = 65095339;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd79677741 = -217955124;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd91101136 = -612027051;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd17857099 = 80266696;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd20909667 = 7050568;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd65395180 = -654067282;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd59121700 = -443512568;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd6793066 = 78724984;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd32005333 = -900888977;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd78316207 = -193260116;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd3439851 = -927828604;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd25150568 = -977356354;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd92459018 = 43134816;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd99844868 = -312019129;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5894789 = -622233968;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd53703167 = -24001784;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd79772032 = -858122847;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd73179519 = -90925021;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd26441811 = -760874977;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd96826582 = -654386447;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd78621 = -271800041;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd47271876 = -704068542;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd74898779 = 53547386;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd84843782 = -160675310;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd9351662 = 2475353;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd99730540 = -268881397;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd91256999 = -290054366;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd45277408 = -474904113;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd36327754 = -227486;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd54809339 = -594627849;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd73677375 = -637179856;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd53450891 = -45270130;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd58587476 = -613009547;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd50660226 = -32010880;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd29269207 = -459516408;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd59769814 = -826840526;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd96747597 = -448451186;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd11868479 = -969856630;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd23311328 = 58992886;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd54845790 = -735901806;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd86909430 = -751073839;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd68780141 = -57046393;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd18837123 = -662848475;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd72178330 = -200500554;    float zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd73416865 = -302710654;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd80381996 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5071058;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5071058 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd52801634;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd52801634 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd15749269;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd15749269 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd25993007;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd25993007 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd62342978;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd62342978 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd54624934;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd54624934 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd45329609;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd45329609 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd65938688;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd65938688 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd25631060;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd25631060 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd52994480;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd52994480 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd99491870;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd99491870 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd47836333;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd47836333 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd11381741;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd11381741 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd45342343;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd45342343 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd41551901;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd41551901 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd9497610;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd9497610 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd17400513;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd17400513 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd46682780;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd46682780 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd42857713;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd42857713 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd75651827;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd75651827 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd98114331;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd98114331 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd25393317;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd25393317 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd61700497;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd61700497 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd97892169;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd97892169 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5083341;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5083341 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd96947798;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd96947798 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd95503233;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd95503233 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd38536543;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd38536543 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd33933355;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd33933355 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd47314853;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd47314853 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd49554630;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd49554630 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd74341302;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd74341302 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd55377314;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd55377314 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd11536872;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd11536872 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd39447555;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd39447555 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd87848733;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd87848733 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd29725577;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd29725577 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd44220994;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd44220994 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd20240970;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd20240970 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd46031131;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd46031131 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd75573207;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd75573207 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd50842456;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd50842456 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd50494537;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd50494537 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd76856715;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd76856715 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd88540508;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd88540508 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5352800;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5352800 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5690799;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5690799 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd50225826;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd50225826 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd2208789;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd2208789 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd79124016;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd79124016 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd73637477;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd73637477 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd96103738;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd96103738 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd15753827;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd15753827 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd4717089;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd4717089 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd82267665;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd82267665 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd79677741;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd79677741 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd91101136;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd91101136 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd17857099;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd17857099 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd20909667;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd20909667 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd65395180;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd65395180 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd59121700;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd59121700 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd6793066;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd6793066 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd32005333;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd32005333 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd78316207;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd78316207 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd3439851;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd3439851 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd25150568;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd25150568 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd92459018;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd92459018 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd99844868;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd99844868 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5894789;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd5894789 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd53703167;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd53703167 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd79772032;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd79772032 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd73179519;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd73179519 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd26441811;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd26441811 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd96826582;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd96826582 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd78621;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd78621 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd47271876;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd47271876 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd74898779;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd74898779 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd84843782;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd84843782 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd9351662;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd9351662 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd99730540;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd99730540 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd91256999;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd91256999 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd45277408;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd45277408 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd36327754;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd36327754 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd54809339;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd54809339 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd73677375;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd73677375 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd53450891;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd53450891 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd58587476;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd58587476 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd50660226;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd50660226 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd29269207;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd29269207 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd59769814;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd59769814 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd96747597;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd96747597 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd11868479;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd11868479 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd23311328;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd23311328 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd54845790;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd54845790 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd86909430;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd86909430 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd68780141;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd68780141 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd18837123;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd18837123 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd72178330;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd72178330 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd73416865;     zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd73416865 = zgmtKiScyqjaQshEMduxIAAGItxxChrVRlmoEbvCTd80381996;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void BubrbnVXDRfjvIALNYDHAjhoyqKLdEBYo76552076() {     float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA39978094 = -531467031;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA6576907 = -668323791;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA89803021 = 90164309;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA11625027 = -284969461;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37286233 = -366945190;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA60020099 = -865387860;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA51983417 = -324680048;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA96154892 = -587930167;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA79752131 = -224472811;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA8655575 = -890235702;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA78289411 = 83411241;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA34163072 = 57547333;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA18590896 = -837347617;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA69755579 = -810598544;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA42650149 = -459556138;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA38306155 = 10147088;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA45458714 = -775929059;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA82068843 = -594217672;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA27124983 = -289963694;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA22774823 = -511381506;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA56112946 = -283142274;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA66603930 = -160207872;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA17585142 = -304508361;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA26430736 = -888005954;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA73870175 = 51237130;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA99498247 = -508106202;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA10287869 = -702540902;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA60614403 = 27168516;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA88320885 = -2036391;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA72406821 = -937894577;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA72229171 = -200936062;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA92319889 = -4435714;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA23423342 = -950021936;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37901757 = -376187847;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA16474233 = -142631054;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA18037452 = -356452231;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA78480411 = -353256871;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA28085915 = -934042323;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA63238936 = -852663063;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA93066624 = -663850035;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA4248945 = -663248003;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA45652388 = -83262828;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA91721698 = -297182282;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA24734043 = -917675407;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA77845030 = -509310477;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA53333637 = -638044793;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA10841522 = -996463001;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA52387193 = -195759768;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA89615473 = -160483401;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA17376181 = -433468751;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA29610266 = 17608290;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA80222630 = -989780134;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA71519253 = -781896040;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA89028349 = -517234471;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA20439131 = -706227123;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA73374163 = -271259160;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA88991765 = -263815430;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA63372285 = -21829737;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37754852 = -236206591;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37787986 = -858838989;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA49732230 = -62846958;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA91369014 = -251848564;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA7834007 = -485893777;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA7345311 = -286578234;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA36426404 = -589299641;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA85969521 = -912153046;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA10739731 = 7569269;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA80689139 = -361159771;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA53281346 = -567967490;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA24612698 = -3103907;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA59825744 = -636596041;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA17372799 = -841886737;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA18829907 = -741554610;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA34058359 = -626113659;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA18525878 = -848133504;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA10460558 = -99879447;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA74882232 = -863025590;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA92851098 = -386832954;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA48585705 = -278695478;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA20536538 = -310718078;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA88656725 = -511643201;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA57900676 = -406781135;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA70998929 = -812348084;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA70944704 = -568567641;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA42796555 = -855502867;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA92006540 = -211155928;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA20800637 = -222539674;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA34394992 = -332787465;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA17462627 = -669960724;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA43100070 = -871371894;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA29045686 = 7363198;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA15108126 = -231427135;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA90331062 = -597835732;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA25450951 = -993824075;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA43334395 = -501003078;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA12879930 = -311399440;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37818382 = -597369052;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA84376388 = 89395952;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA88307638 = -228375767;    float ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA91875509 = -531467031;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA39978094 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA6576907;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA6576907 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA89803021;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA89803021 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA11625027;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA11625027 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37286233;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37286233 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA60020099;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA60020099 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA51983417;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA51983417 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA96154892;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA96154892 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA79752131;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA79752131 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA8655575;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA8655575 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA78289411;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA78289411 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA34163072;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA34163072 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA18590896;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA18590896 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA69755579;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA69755579 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA42650149;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA42650149 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA38306155;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA38306155 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA45458714;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA45458714 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA82068843;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA82068843 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA27124983;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA27124983 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA22774823;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA22774823 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA56112946;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA56112946 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA66603930;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA66603930 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA17585142;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA17585142 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA26430736;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA26430736 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA73870175;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA73870175 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA99498247;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA99498247 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA10287869;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA10287869 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA60614403;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA60614403 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA88320885;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA88320885 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA72406821;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA72406821 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA72229171;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA72229171 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA92319889;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA92319889 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA23423342;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA23423342 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37901757;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37901757 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA16474233;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA16474233 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA18037452;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA18037452 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA78480411;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA78480411 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA28085915;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA28085915 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA63238936;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA63238936 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA93066624;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA93066624 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA4248945;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA4248945 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA45652388;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA45652388 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA91721698;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA91721698 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA24734043;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA24734043 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA77845030;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA77845030 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA53333637;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA53333637 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA10841522;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA10841522 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA52387193;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA52387193 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA89615473;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA89615473 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA17376181;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA17376181 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA29610266;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA29610266 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA80222630;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA80222630 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA71519253;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA71519253 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA89028349;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA89028349 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA20439131;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA20439131 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA73374163;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA73374163 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA88991765;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA88991765 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA63372285;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA63372285 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37754852;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37754852 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37787986;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37787986 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA49732230;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA49732230 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA91369014;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA91369014 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA7834007;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA7834007 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA7345311;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA7345311 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA36426404;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA36426404 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA85969521;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA85969521 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA10739731;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA10739731 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA80689139;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA80689139 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA53281346;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA53281346 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA24612698;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA24612698 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA59825744;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA59825744 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA17372799;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA17372799 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA18829907;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA18829907 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA34058359;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA34058359 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA18525878;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA18525878 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA10460558;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA10460558 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA74882232;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA74882232 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA92851098;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA92851098 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA48585705;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA48585705 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA20536538;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA20536538 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA88656725;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA88656725 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA57900676;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA57900676 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA70998929;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA70998929 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA70944704;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA70944704 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA42796555;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA42796555 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA92006540;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA92006540 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA20800637;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA20800637 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA34394992;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA34394992 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA17462627;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA17462627 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA43100070;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA43100070 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA29045686;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA29045686 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA15108126;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA15108126 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA90331062;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA90331062 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA25450951;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA25450951 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA43334395;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA43334395 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA12879930;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA12879930 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37818382;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA37818382 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA84376388;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA84376388 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA88307638;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA88307638 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA91875509;     ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA91875509 = ZVNhMlSGJqFzrRvNGfDNeORNmtkdKuzPGuWmmeBnkA39978094;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void kqHmgknwJaFCLAvrAeooDOnAoDrJxhkxs89097265() {     float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI59446264 = -944598243;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI59600771 = -114201787;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI6640014 = -661464306;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI30272176 = -101543724;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI37732749 = -993217606;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI85612173 = -755872628;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI96815295 = -767986278;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI61405126 = -681738133;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI40438929 = -952664190;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI86584298 = -895821748;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI32512675 = -349579059;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI37657685 = 58244629;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI8962556 = -161704894;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI78171619 = -252884269;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI3176611 = -757639929;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI4521805 = -453044845;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI51420827 = -947703741;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI6131595 = -344972390;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI26759863 = -667168455;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI3386125 = -128917963;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI68569018 = -889354600;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI81586013 = -672011085;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI85758147 = -602082980;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI44152405 = -524549946;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI85073664 = -243062980;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI4265709 = -193901420;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI94216000 = -367691834;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI11406078 = -136564763;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI30065843 = -15947537;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57113675 = 70666729;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI2033256 = -66262154;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI31899201 = -568784732;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI34899445 = -405229702;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI96658263 = -680791053;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI56404569 = -205333860;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI54103388 = -660020840;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI46863862 = -880132946;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI69568389 = 88748862;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI30552262 = -217077888;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI14348361 = -660381132;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI45731002 = -73034299;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57511521 = -322159054;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI62854939 = -244984079;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI8119582 = -266748068;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57873442 = -786433440;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI7794765 = -75376214;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI92831401 = -910156324;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI52543023 = -379047082;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI30751065 = -174422640;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI58274523 = -194481096;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI4045836 = -388756641;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI96671490 = -267132993;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI41344399 = -458005001;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI61958378 = -511828108;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI20528247 = -480785758;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI77860250 = -172587159;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI73842623 = -512118808;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI62487609 = -36914360;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI45198512 = -858480744;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI33467041 = -699316186;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI91396173 = -288180795;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI85409218 = -531421515;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI31339284 = -565790597;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI83325253 = -923330919;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI84551042 = -729559594;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI613475 = -780794328;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI2758241 = -536525670;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI12304292 = -480913841;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI21767051 = 52449590;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI49073222 = 2380910;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57657942 = -572911900;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI81852438 = -936452603;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI75579333 = -27894503;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI12411503 = 93212677;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57655123 = 44116336;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI11057497 = -467195547;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI18731074 = -327027006;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI77638566 = -235334912;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI86278962 = -738116507;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI77278900 = -67686766;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI11434307 = -283745097;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI41672977 = -988644752;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI80655012 = -962142124;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI71791319 = -821466441;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI53067840 = -540576630;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI5361766 = -799129162;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI90554801 = -10779731;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI72941066 = -893401595;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI76130017 = -100005296;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI78544318 = 67253299;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI80260765 = -47902032;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI84376253 = -743218587;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI24369877 = -52770394;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI97085221 = -517761702;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI22952188 = -272200338;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI60321783 = -541612784;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI26172238 = -756368457;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI79529686 = -321653161;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI23568539 = -537188474;    float TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57259968 = -944598243;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI59446264 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI59600771;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI59600771 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI6640014;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI6640014 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI30272176;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI30272176 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI37732749;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI37732749 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI85612173;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI85612173 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI96815295;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI96815295 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI61405126;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI61405126 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI40438929;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI40438929 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI86584298;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI86584298 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI32512675;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI32512675 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI37657685;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI37657685 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI8962556;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI8962556 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI78171619;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI78171619 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI3176611;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI3176611 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI4521805;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI4521805 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI51420827;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI51420827 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI6131595;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI6131595 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI26759863;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI26759863 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI3386125;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI3386125 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI68569018;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI68569018 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI81586013;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI81586013 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI85758147;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI85758147 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI44152405;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI44152405 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI85073664;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI85073664 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI4265709;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI4265709 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI94216000;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI94216000 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI11406078;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI11406078 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI30065843;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI30065843 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57113675;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57113675 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI2033256;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI2033256 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI31899201;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI31899201 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI34899445;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI34899445 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI96658263;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI96658263 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI56404569;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI56404569 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI54103388;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI54103388 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI46863862;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI46863862 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI69568389;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI69568389 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI30552262;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI30552262 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI14348361;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI14348361 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI45731002;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI45731002 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57511521;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57511521 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI62854939;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI62854939 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI8119582;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI8119582 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57873442;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57873442 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI7794765;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI7794765 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI92831401;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI92831401 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI52543023;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI52543023 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI30751065;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI30751065 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI58274523;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI58274523 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI4045836;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI4045836 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI96671490;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI96671490 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI41344399;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI41344399 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI61958378;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI61958378 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI20528247;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI20528247 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI77860250;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI77860250 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI73842623;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI73842623 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI62487609;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI62487609 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI45198512;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI45198512 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI33467041;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI33467041 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI91396173;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI91396173 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI85409218;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI85409218 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI31339284;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI31339284 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI83325253;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI83325253 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI84551042;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI84551042 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI613475;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI613475 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI2758241;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI2758241 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI12304292;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI12304292 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI21767051;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI21767051 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI49073222;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI49073222 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57657942;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57657942 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI81852438;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI81852438 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI75579333;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI75579333 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI12411503;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI12411503 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57655123;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57655123 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI11057497;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI11057497 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI18731074;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI18731074 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI77638566;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI77638566 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI86278962;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI86278962 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI77278900;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI77278900 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI11434307;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI11434307 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI41672977;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI41672977 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI80655012;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI80655012 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI71791319;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI71791319 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI53067840;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI53067840 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI5361766;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI5361766 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI90554801;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI90554801 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI72941066;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI72941066 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI76130017;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI76130017 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI78544318;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI78544318 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI80260765;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI80260765 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI84376253;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI84376253 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI24369877;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI24369877 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI97085221;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI97085221 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI22952188;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI22952188 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI60321783;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI60321783 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI26172238;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI26172238 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI79529686;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI79529686 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI23568539;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI23568539 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57259968;     TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI57259968 = TqQTZeZfYSnLgzdHehfLyrWCHycteycqHJsJeXbzOI59446264;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void hWdSTodMcmCqxDaOvMPDcKivXalegqrKp85280425() {     float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc19042361 = -73354621;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc61106620 = 75642828;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc43641401 = -735605229;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc26147934 = -974154601;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc49025975 = -893724633;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83289293 = -614132301;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc94173778 = -97703864;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc12230410 = 64050492;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc54252372 = -385336689;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc69608813 = -837080602;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc57807606 = -751121499;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc72328887 = -36776621;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc79717118 = -67883412;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc36545458 = -157042617;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc484416 = -450166451;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc1276059 = -258417737;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc87381930 = -875920021;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc70799926 = -714308495;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc7202066 = -806288084;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83303233 = -791326616;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc49030137 = -722375424;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc50075612 = -564412963;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc77949972 = -366378059;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc8882644 = -88888183;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc61051669 = -799200570;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc98680615 = -328518891;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc7556071 = -817171831;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc76517246 = -757946354;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc79850185 = -905540152;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc95587142 = 23683487;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc26947574 = -711481482;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc74664461 = -986002729;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83981483 = -385176575;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc79182706 = -182674984;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc61341930 = -953543845;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc32693285 = -971677422;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc37495540 = -72911581;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc67928726 = -955703528;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc49570204 = 64215596;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc87174014 = -934262080;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc3948816 = -541695895;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc27590703 = -327100472;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc3734182 = 21571091;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc82359086 = -690662807;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc58861757 = -232751508;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc72587893 = -318320373;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc98320123 = -802011991;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc99239416 = -711800311;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc70140712 = -458360260;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc73441916 = -515733557;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc54532086 = -174864865;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc3256644 = -238376248;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc16759914 = -697953455;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc35232901 = -771997063;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc36250289 = -444719845;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc68966748 = -508941659;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83156648 = -557979114;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc34758758 = -546717046;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc65096265 = -74954032;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc50345360 = -465205743;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc75733223 = -796960471;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc17656532 = -339757511;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc32380225 = -30409357;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc58665230 = -309020176;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc42661239 = -25599120;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83143145 = -765118770;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc88347403 = -651600046;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc534413 = -885208428;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc75203528 = -203498772;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc67791131 = -478489029;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc63780519 = -85506156;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc19453204 = -920216494;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc21229722 = -678524091;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc20028051 = -872026005;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc79354418 = -149630721;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc21439434 = -295274953;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc46341430 = -485984054;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc95590886 = -675715252;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc50020886 = -856136675;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc88463776 = -380880198;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc360492 = -526506901;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc8316654 = -5371521;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc6376534 = -199586094;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc6408270 = -289806596;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc41055056 = -801451648;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc23690931 = -373105234;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc57904547 = -188049275;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc48748582 = -613179512;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc42932418 = -737955140;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc92375181 = -344602187;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc49536637 = -313698308;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc2736782 = -526194535;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc2832462 = -780749496;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc99224844 = -470578662;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc11440792 = -37301610;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc86292283 = -101938385;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc95210478 = -196691116;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc45068951 = -669408733;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc39697848 = -565063688;    float YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc75718612 = -73354621;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc19042361 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc61106620;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc61106620 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc43641401;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc43641401 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc26147934;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc26147934 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc49025975;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc49025975 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83289293;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83289293 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc94173778;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc94173778 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc12230410;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc12230410 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc54252372;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc54252372 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc69608813;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc69608813 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc57807606;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc57807606 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc72328887;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc72328887 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc79717118;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc79717118 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc36545458;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc36545458 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc484416;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc484416 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc1276059;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc1276059 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc87381930;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc87381930 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc70799926;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc70799926 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc7202066;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc7202066 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83303233;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83303233 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc49030137;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc49030137 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc50075612;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc50075612 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc77949972;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc77949972 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc8882644;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc8882644 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc61051669;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc61051669 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc98680615;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc98680615 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc7556071;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc7556071 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc76517246;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc76517246 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc79850185;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc79850185 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc95587142;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc95587142 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc26947574;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc26947574 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc74664461;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc74664461 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83981483;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83981483 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc79182706;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc79182706 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc61341930;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc61341930 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc32693285;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc32693285 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc37495540;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc37495540 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc67928726;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc67928726 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc49570204;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc49570204 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc87174014;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc87174014 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc3948816;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc3948816 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc27590703;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc27590703 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc3734182;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc3734182 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc82359086;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc82359086 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc58861757;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc58861757 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc72587893;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc72587893 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc98320123;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc98320123 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc99239416;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc99239416 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc70140712;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc70140712 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc73441916;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc73441916 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc54532086;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc54532086 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc3256644;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc3256644 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc16759914;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc16759914 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc35232901;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc35232901 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc36250289;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc36250289 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc68966748;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc68966748 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83156648;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83156648 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc34758758;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc34758758 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc65096265;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc65096265 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc50345360;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc50345360 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc75733223;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc75733223 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc17656532;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc17656532 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc32380225;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc32380225 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc58665230;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc58665230 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc42661239;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc42661239 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83143145;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc83143145 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc88347403;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc88347403 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc534413;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc534413 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc75203528;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc75203528 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc67791131;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc67791131 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc63780519;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc63780519 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc19453204;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc19453204 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc21229722;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc21229722 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc20028051;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc20028051 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc79354418;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc79354418 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc21439434;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc21439434 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc46341430;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc46341430 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc95590886;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc95590886 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc50020886;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc50020886 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc88463776;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc88463776 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc360492;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc360492 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc8316654;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc8316654 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc6376534;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc6376534 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc6408270;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc6408270 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc41055056;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc41055056 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc23690931;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc23690931 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc57904547;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc57904547 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc48748582;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc48748582 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc42932418;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc42932418 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc92375181;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc92375181 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc49536637;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc49536637 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc2736782;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc2736782 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc2832462;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc2832462 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc99224844;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc99224844 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc11440792;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc11440792 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc86292283;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc86292283 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc95210478;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc95210478 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc45068951;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc45068951 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc39697848;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc39697848 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc75718612;     YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc75718612 = YthQquVbACjJmXrvjZnmrKXniusDyfmvsBYKtxFRuc19042361;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void quLqyCZjRlyWhjiwXfYKiCcjQbYbwxuoF45583083() {     float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm9168669 = -132110822;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm44231685 = -299283342;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm39134100 = -872399690;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm99646508 = -60326423;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm62082711 = -835048075;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm64075698 = -506765409;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm88837216 = -835249336;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm65108973 = -672397247;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm78064060 = -393229327;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm73864483 = -406955127;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm33959425 = -159541656;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm7078395 = -616364756;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm18063251 = -380119273;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm74964312 = -155203501;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm98558787 = -935287393;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm25455801 = 41202393;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm31344111 = -37265263;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm92155638 = -57157787;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm68116456 = -172698520;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm50627481 = -339204925;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm36952539 = -426800517;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm48157194 = -897509598;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm11188391 = -772837980;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm16803741 = -536912558;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm7936857 = -342711514;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm17471581 = -204392626;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm29523406 = -576700825;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm99687621 = -817836412;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm41059183 = -567739200;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm43376222 = -950718905;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm30410977 = 61851974;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm74031375 = -386827149;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm92950524 = -685401734;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm3021351 = -174126142;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm96938464 = -603879506;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm85924291 = -174706832;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm37729108 = -688727485;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm92286009 = -821762772;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm60103221 = -743246450;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm31686157 = -838969853;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm17648489 = -247557171;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm82235165 = -141593685;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm63551023 = -453854504;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm13021028 = -554745996;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm50826175 = -345261464;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm93026886 = -801944278;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm78743414 = -350494491;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm89625875 = -738456564;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm98059366 = -894299606;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm2722322 = -972729894;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm83897609 = -549246910;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm47029750 = -202803081;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm66212368 = -409806450;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm88139963 = -895552345;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm8630544 = -573320116;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm61011475 = -234601224;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm33043295 = -526445363;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm22330360 = -235487132;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm91709652 = -717614910;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm44611130 = -530655450;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm34552293 = -930064585;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm89149595 = 82587075;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm24049790 = -4658048;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm34687838 = -442510423;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm43453506 = -368807101;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm59928050 = -772714508;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm14127871 = -930963022;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm15041900 = -105993131;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm78025847 = -551323995;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm12634496 = -660580562;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm87726692 = -270070122;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm39058101 = -215502491;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm32052417 = -313911337;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm36430300 = -333728668;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm32978993 = 8352245;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm54717373 = -185206832;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm84606171 = -343655094;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm98167363 = -118091984;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm65977566 = -91651095;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm14909971 = -540767236;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm38728166 = -853898136;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm39897530 = -838244262;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm1628256 = -923536806;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm38336862 = -595009306;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm59478613 = -301471995;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm83381226 = -735344945;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm7819007 = -977020700;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm4810561 = -789849390;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm94390807 = -600806026;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm35926989 = -269278283;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm52880997 = -648261469;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm15398749 = -353240354;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm576358 = -4147862;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm15492091 = -112591001;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm97133863 = -908905269;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm28498894 = -230144246;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm58185376 = -36935638;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm28863185 = 88655918;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm69567521 = -85938895;    float MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm90898124 = -132110822;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm9168669 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm44231685;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm44231685 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm39134100;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm39134100 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm99646508;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm99646508 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm62082711;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm62082711 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm64075698;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm64075698 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm88837216;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm88837216 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm65108973;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm65108973 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm78064060;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm78064060 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm73864483;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm73864483 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm33959425;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm33959425 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm7078395;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm7078395 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm18063251;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm18063251 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm74964312;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm74964312 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm98558787;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm98558787 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm25455801;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm25455801 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm31344111;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm31344111 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm92155638;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm92155638 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm68116456;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm68116456 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm50627481;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm50627481 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm36952539;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm36952539 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm48157194;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm48157194 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm11188391;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm11188391 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm16803741;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm16803741 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm7936857;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm7936857 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm17471581;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm17471581 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm29523406;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm29523406 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm99687621;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm99687621 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm41059183;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm41059183 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm43376222;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm43376222 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm30410977;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm30410977 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm74031375;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm74031375 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm92950524;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm92950524 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm3021351;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm3021351 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm96938464;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm96938464 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm85924291;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm85924291 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm37729108;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm37729108 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm92286009;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm92286009 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm60103221;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm60103221 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm31686157;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm31686157 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm17648489;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm17648489 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm82235165;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm82235165 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm63551023;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm63551023 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm13021028;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm13021028 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm50826175;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm50826175 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm93026886;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm93026886 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm78743414;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm78743414 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm89625875;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm89625875 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm98059366;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm98059366 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm2722322;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm2722322 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm83897609;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm83897609 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm47029750;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm47029750 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm66212368;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm66212368 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm88139963;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm88139963 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm8630544;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm8630544 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm61011475;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm61011475 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm33043295;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm33043295 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm22330360;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm22330360 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm91709652;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm91709652 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm44611130;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm44611130 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm34552293;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm34552293 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm89149595;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm89149595 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm24049790;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm24049790 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm34687838;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm34687838 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm43453506;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm43453506 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm59928050;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm59928050 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm14127871;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm14127871 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm15041900;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm15041900 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm78025847;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm78025847 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm12634496;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm12634496 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm87726692;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm87726692 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm39058101;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm39058101 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm32052417;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm32052417 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm36430300;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm36430300 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm32978993;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm32978993 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm54717373;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm54717373 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm84606171;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm84606171 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm98167363;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm98167363 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm65977566;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm65977566 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm14909971;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm14909971 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm38728166;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm38728166 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm39897530;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm39897530 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm1628256;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm1628256 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm38336862;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm38336862 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm59478613;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm59478613 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm83381226;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm83381226 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm7819007;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm7819007 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm4810561;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm4810561 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm94390807;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm94390807 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm35926989;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm35926989 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm52880997;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm52880997 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm15398749;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm15398749 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm576358;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm576358 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm15492091;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm15492091 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm97133863;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm97133863 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm28498894;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm28498894 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm58185376;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm58185376 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm28863185;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm28863185 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm69567521;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm69567521 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm90898124;     MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm90898124 = MagOVgyYcYOmDPgNZvYdCeoScaWdymUrJQVIBhByZm9168669;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void rmCgyHTjzgfcTFPBWTcOHSeFGVKtrReyP41766243() {     float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE68764766 = -360867199;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE45737535 = -109438727;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE76135488 = -946540612;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE95522267 = -932937301;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE73375937 = -735555102;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE61752819 = -365025083;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE86195699 = -164966922;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE15934257 = 73391378;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE91877503 = -925901826;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE56888998 = -348213981;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE59254356 = -561084096;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE41749596 = -711386005;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE88817814 = -286297791;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE33338151 = -59361848;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE95866593 = -627813915;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE22210055 = -864170498;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE67305215 = 34518457;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE56823970 = -426493892;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE48558659 = -311818150;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE30544591 = 98386422;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE17413658 = -259821341;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE16646793 = -789911476;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE3380216 = -537133059;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE81533979 = -101250795;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE83914861 = -898849104;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE11886488 = -339010097;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE42863476 = 73819178;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE64798790 = -339218002;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE90843526 = -357331815;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE81849688 = -997702147;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE55325295 = -583367354;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE16796636 = -804045146;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE42032563 = -665348607;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE85545793 = -776010073;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE1875826 = -252089492;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE64514188 = -486363414;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE28360786 = -981506120;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE90646347 = -766215161;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE79121164 = -461952967;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE4511811 = -12850801;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE75866302 = -716218767;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE52314347 = -146535104;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE4430265 = -187299334;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE87260532 = -978660734;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE51814490 = -891579533;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE57820015 = 55111563;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE84232136 = -242350158;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE36322270 = 28790208;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE37449014 = -78237226;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE17889714 = -193982355;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE34383860 = -335355134;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE53614903 = -174046337;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE41627883 = -649754903;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE61414486 = -55721300;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE24352586 = -537254203;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE52117973 = -570955724;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE42357319 = -572305669;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE94601508 = -745289818;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE11607406 = 65911803;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE61489449 = -296545006;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE18889343 = -338844261;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE21396909 = -825748921;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE25090731 = -569276808;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE10027816 = -928199680;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE1563704 = -764846627;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE42457721 = -757038950;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE99717033 = 53962601;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE3272021 = -510287718;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE31462325 = -807272357;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE31352405 = -41450501;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE93849268 = -882664379;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE76658867 = -199266382;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE77702805 = -964540925;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE44046849 = -198967349;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE54678289 = -185394811;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE65099311 = -13286238;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE12216528 = -502612142;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE16119684 = -558472325;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE29719490 = -209671263;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE26094847 = -853960667;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE27654351 = 3340060;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE6541207 = -954971030;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE27349777 = -160980777;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE72953812 = -63349461;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE47465829 = -562347013;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE1710392 = -309321018;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE75168752 = -54290243;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE80618076 = -509627307;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE61193208 = -138755870;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE49757852 = -681133769;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE22156869 = -914057745;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE33759278 = -136216303;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE79038942 = -732126965;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE17631715 = -65407961;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE85622468 = -674006541;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE54469393 = -890469847;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE27223616 = -577258296;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE94402449 = -259099655;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE85696829 = -113814108;    float ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE9356769 = -360867199;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE68764766 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE45737535;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE45737535 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE76135488;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE76135488 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE95522267;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE95522267 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE73375937;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE73375937 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE61752819;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE61752819 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE86195699;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE86195699 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE15934257;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE15934257 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE91877503;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE91877503 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE56888998;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE56888998 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE59254356;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE59254356 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE41749596;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE41749596 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE88817814;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE88817814 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE33338151;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE33338151 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE95866593;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE95866593 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE22210055;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE22210055 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE67305215;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE67305215 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE56823970;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE56823970 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE48558659;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE48558659 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE30544591;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE30544591 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE17413658;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE17413658 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE16646793;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE16646793 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE3380216;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE3380216 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE81533979;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE81533979 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE83914861;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE83914861 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE11886488;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE11886488 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE42863476;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE42863476 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE64798790;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE64798790 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE90843526;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE90843526 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE81849688;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE81849688 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE55325295;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE55325295 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE16796636;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE16796636 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE42032563;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE42032563 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE85545793;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE85545793 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE1875826;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE1875826 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE64514188;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE64514188 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE28360786;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE28360786 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE90646347;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE90646347 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE79121164;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE79121164 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE4511811;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE4511811 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE75866302;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE75866302 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE52314347;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE52314347 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE4430265;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE4430265 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE87260532;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE87260532 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE51814490;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE51814490 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE57820015;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE57820015 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE84232136;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE84232136 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE36322270;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE36322270 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE37449014;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE37449014 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE17889714;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE17889714 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE34383860;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE34383860 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE53614903;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE53614903 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE41627883;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE41627883 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE61414486;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE61414486 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE24352586;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE24352586 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE52117973;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE52117973 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE42357319;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE42357319 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE94601508;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE94601508 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE11607406;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE11607406 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE61489449;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE61489449 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE18889343;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE18889343 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE21396909;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE21396909 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE25090731;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE25090731 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE10027816;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE10027816 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE1563704;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE1563704 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE42457721;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE42457721 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE99717033;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE99717033 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE3272021;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE3272021 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE31462325;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE31462325 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE31352405;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE31352405 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE93849268;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE93849268 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE76658867;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE76658867 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE77702805;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE77702805 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE44046849;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE44046849 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE54678289;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE54678289 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE65099311;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE65099311 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE12216528;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE12216528 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE16119684;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE16119684 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE29719490;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE29719490 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE26094847;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE26094847 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE27654351;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE27654351 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE6541207;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE6541207 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE27349777;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE27349777 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE72953812;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE72953812 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE47465829;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE47465829 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE1710392;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE1710392 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE75168752;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE75168752 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE80618076;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE80618076 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE61193208;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE61193208 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE49757852;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE49757852 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE22156869;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE22156869 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE33759278;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE33759278 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE79038942;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE79038942 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE17631715;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE17631715 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE85622468;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE85622468 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE54469393;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE54469393 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE27223616;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE27223616 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE94402449;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE94402449 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE85696829;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE85696829 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE9356769;     ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE9356769 = ZhQoRnLKsIODzzPpkEIfocZIxacwarhBhMtXyNEfQE68764766;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void oyERjiKOBrHwkmmrBOIdaqMOojzvcqDAn54311432() {     float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD88232936 = -773998411;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD98761398 = -655316724;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD92972479 = -598169227;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD14169416 = -749511564;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD73822453 = -261827518;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD87344893 = -255509851;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD31027578 = -608273152;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD81184490 = -20416588;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD52564301 = -554093205;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD34817722 = -353800026;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD13477620 = -994074396;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD45244210 = -710688710;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD79189473 = -710655067;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD41754191 = -601647574;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD56393055 = -925897706;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD88425703 = -227362432;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD73267328 = -137256224;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD80886721 = -177248610;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD48193539 = -689022911;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD11155893 = -619150034;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD29869730 = -866033667;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD31628876 = -201714689;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD71553222 = -834707677;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD99255648 = -837794787;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD95118350 = -93149213;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD16653949 = -24805315;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD26791607 = -691331754;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD15590466 = -502951281;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD32588483 = -371242961;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD66556542 = 10859159;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD85129380 = -448693447;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD56375946 = -268394164;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD53508666 = -120556374;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD44302300 = 19386720;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD41806162 = -314792298;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD580126 = -789932022;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD96744236 = -408382195;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD32128822 = -843423977;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD46434489 = -926367792;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD25793547 = -9381898;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD17348359 = -126005063;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD64173480 = -385431330;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD75563506 = -135101131;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD70646071 = -327733395;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD31842901 = -68702496;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD12281143 = -482219858;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD66222016 = -156043481;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD36478100 = -154497107;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD78584605 = -92176464;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD58788056 = 45005300;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD8819429 = -741720065;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD70063763 = -551399196;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD11453030 = -325863864;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD34344515 = -50314936;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD24441702 = -311812838;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD56604061 = -472283723;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD27208177 = -820609047;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD93716831 = -760374441;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD19051066 = -556362351;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD57168504 = -137022203;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD60553286 = -564178098;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD15437113 = -5321872;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD48596007 = -649173628;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD86007758 = -464952364;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD49688341 = -905106580;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD57101674 = -625680232;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD91735543 = -490132337;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD34887173 = -630041788;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD99948029 = -186855277;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD55812929 = -35965684;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD91681467 = -818980238;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD41138506 = -293832248;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD34452232 = -250880818;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD22399992 = -579641013;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD93807533 = -393144972;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD65696250 = -380602338;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD56065369 = 33386442;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD907151 = -406974282;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD67412747 = -669092292;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD82837208 = -610929356;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD50431932 = -868761835;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD90313507 = -436834648;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD37005860 = -310774817;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD73800426 = -316248262;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD57737114 = -247420777;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD15065617 = -897294251;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD44922917 = -942530300;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD19164152 = 29758562;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD19860598 = -668800442;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD85202100 = -842508576;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD73371948 = -969322976;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD3027405 = -648007755;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD13077757 = -187061627;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD89265984 = -689345589;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD65240261 = -445203801;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD1911247 = -20683192;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD15577473 = -736257702;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD89555747 = -670148768;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD20957730 = -422626816;    float eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD74741227 = -773998411;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD88232936 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD98761398;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD98761398 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD92972479;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD92972479 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD14169416;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD14169416 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD73822453;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD73822453 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD87344893;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD87344893 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD31027578;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD31027578 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD81184490;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD81184490 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD52564301;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD52564301 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD34817722;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD34817722 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD13477620;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD13477620 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD45244210;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD45244210 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD79189473;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD79189473 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD41754191;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD41754191 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD56393055;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD56393055 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD88425703;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD88425703 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD73267328;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD73267328 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD80886721;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD80886721 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD48193539;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD48193539 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD11155893;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD11155893 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD29869730;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD29869730 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD31628876;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD31628876 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD71553222;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD71553222 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD99255648;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD99255648 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD95118350;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD95118350 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD16653949;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD16653949 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD26791607;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD26791607 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD15590466;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD15590466 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD32588483;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD32588483 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD66556542;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD66556542 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD85129380;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD85129380 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD56375946;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD56375946 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD53508666;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD53508666 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD44302300;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD44302300 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD41806162;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD41806162 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD580126;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD580126 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD96744236;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD96744236 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD32128822;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD32128822 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD46434489;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD46434489 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD25793547;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD25793547 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD17348359;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD17348359 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD64173480;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD64173480 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD75563506;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD75563506 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD70646071;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD70646071 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD31842901;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD31842901 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD12281143;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD12281143 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD66222016;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD66222016 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD36478100;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD36478100 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD78584605;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD78584605 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD58788056;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD58788056 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD8819429;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD8819429 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD70063763;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD70063763 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD11453030;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD11453030 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD34344515;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD34344515 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD24441702;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD24441702 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD56604061;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD56604061 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD27208177;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD27208177 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD93716831;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD93716831 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD19051066;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD19051066 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD57168504;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD57168504 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD60553286;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD60553286 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD15437113;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD15437113 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD48596007;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD48596007 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD86007758;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD86007758 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD49688341;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD49688341 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD57101674;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD57101674 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD91735543;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD91735543 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD34887173;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD34887173 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD99948029;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD99948029 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD55812929;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD55812929 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD91681467;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD91681467 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD41138506;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD41138506 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD34452232;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD34452232 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD22399992;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD22399992 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD93807533;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD93807533 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD65696250;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD65696250 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD56065369;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD56065369 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD907151;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD907151 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD67412747;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD67412747 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD82837208;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD82837208 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD50431932;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD50431932 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD90313507;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD90313507 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD37005860;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD37005860 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD73800426;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD73800426 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD57737114;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD57737114 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD15065617;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD15065617 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD44922917;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD44922917 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD19164152;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD19164152 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD19860598;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD19860598 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD85202100;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD85202100 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD73371948;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD73371948 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD3027405;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD3027405 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD13077757;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD13077757 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD89265984;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD89265984 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD65240261;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD65240261 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD1911247;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD1911247 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD15577473;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD15577473 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD89555747;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD89555747 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD20957730;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD20957730 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD74741227;     eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD74741227 = eBtPSyraGePAGKBKTlhZaFxmqcziPmKoHIFlsbiQQD88232936;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ukBBVlahQBIGxoWetTjHTGVycQAjdsDQV14614089() {     float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor78359244 = -832754612;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor81886463 = 69757106;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor88465178 = -734963688;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor87667991 = -935683386;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor86879188 = -203150960;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor68131297 = -148142959;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor25691016 = -245818625;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor34063054 = -756864327;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor76375988 = -561985843;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor39073392 = 76325448;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor89629439 = -402494553;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor79993717 = -190276845;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor17535606 = 77109072;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor80173044 = -599808458;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor54467426 = -311018649;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor12605446 = 72257698;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor17229509 = -398601466;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor2242434 = -620097902;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor9107930 = -55433347;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor78480140 = -167028344;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor17792132 = -570458759;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor29710458 = -534811324;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor4791640 = -141167598;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor7176746 = -185819163;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor42003539 = -736660157;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor35444914 = 99320950;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor48758942 = -450860748;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor38760841 = -562841339;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor93797480 = -33442009;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor14345623 = -963543232;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor88592783 = -775359991;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor55742860 = -769218584;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor62477707 = -420781533;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor68140945 = 27935562;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor77402696 = 34872041;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor53811132 = 7038568;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor96977805 = 75801901;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor56486105 = -709483221;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor56967506 = -633829838;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor70305688 = 85910329;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor31048032 = -931866339;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor18817943 = -199924543;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor35380347 = -610526727;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor1308013 = -191816584;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor23807319 = -181212452;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor32720136 = -965843764;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor46645307 = -804525981;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor26864559 = -181153360;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor6503260 = -528115811;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor88068462 = -411991037;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor38184953 = -16102110;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor13836871 = -515826029;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor60905484 = -37716859;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor87251577 = -173870218;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor96821957 = -440413110;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor48648787 = -197943288;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor77094823 = -789075296;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor81288433 = -449144526;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor45664452 = -99023229;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor51434275 = -202471910;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor19372356 = -697282212;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor86930175 = -682977286;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor40265573 = -623422318;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor62030366 = -598442611;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor50480609 = -148314562;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor33886580 = -633275970;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor17516010 = -769495313;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor49394661 = -950826491;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor2770349 = -534680500;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor656295 = -218057217;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor15627641 = 96455797;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor60743403 = -689118246;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor45274928 = -986268065;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor38802241 = -41343676;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor47432109 = -235162006;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor98974189 = -270534217;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor94330110 = -924284598;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor3483628 = -949351015;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor83369426 = 95393289;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor9283403 = -770816394;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor88799606 = -96153070;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor21894383 = -169707388;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor32257582 = 65274471;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor5729019 = -621450972;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor76160670 = -847441123;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor74755912 = -159533962;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor94837375 = -631501725;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor75226130 = -146911316;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor71318988 = -531651328;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor28753909 = -767184671;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor76716308 = -203886137;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor15689372 = -475053573;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor10821653 = -510459992;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor5533231 = -331357928;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor50933333 = -216807460;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor44117857 = -148889053;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor78552370 = -576502225;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor73349981 = 87915883;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor50827404 = 56497977;    float fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor89920739 = -832754612;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor78359244 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor81886463;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor81886463 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor88465178;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor88465178 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor87667991;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor87667991 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor86879188;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor86879188 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor68131297;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor68131297 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor25691016;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor25691016 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor34063054;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor34063054 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor76375988;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor76375988 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor39073392;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor39073392 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor89629439;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor89629439 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor79993717;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor79993717 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor17535606;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor17535606 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor80173044;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor80173044 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor54467426;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor54467426 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor12605446;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor12605446 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor17229509;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor17229509 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor2242434;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor2242434 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor9107930;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor9107930 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor78480140;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor78480140 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor17792132;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor17792132 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor29710458;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor29710458 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor4791640;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor4791640 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor7176746;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor7176746 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor42003539;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor42003539 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor35444914;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor35444914 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor48758942;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor48758942 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor38760841;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor38760841 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor93797480;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor93797480 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor14345623;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor14345623 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor88592783;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor88592783 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor55742860;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor55742860 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor62477707;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor62477707 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor68140945;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor68140945 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor77402696;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor77402696 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor53811132;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor53811132 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor96977805;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor96977805 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor56486105;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor56486105 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor56967506;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor56967506 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor70305688;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor70305688 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor31048032;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor31048032 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor18817943;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor18817943 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor35380347;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor35380347 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor1308013;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor1308013 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor23807319;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor23807319 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor32720136;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor32720136 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor46645307;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor46645307 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor26864559;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor26864559 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor6503260;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor6503260 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor88068462;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor88068462 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor38184953;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor38184953 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor13836871;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor13836871 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor60905484;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor60905484 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor87251577;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor87251577 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor96821957;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor96821957 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor48648787;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor48648787 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor77094823;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor77094823 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor81288433;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor81288433 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor45664452;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor45664452 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor51434275;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor51434275 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor19372356;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor19372356 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor86930175;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor86930175 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor40265573;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor40265573 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor62030366;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor62030366 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor50480609;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor50480609 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor33886580;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor33886580 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor17516010;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor17516010 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor49394661;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor49394661 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor2770349;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor2770349 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor656295;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor656295 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor15627641;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor15627641 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor60743403;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor60743403 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor45274928;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor45274928 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor38802241;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor38802241 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor47432109;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor47432109 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor98974189;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor98974189 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor94330110;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor94330110 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor3483628;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor3483628 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor83369426;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor83369426 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor9283403;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor9283403 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor88799606;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor88799606 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor21894383;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor21894383 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor32257582;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor32257582 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor5729019;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor5729019 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor76160670;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor76160670 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor74755912;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor74755912 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor94837375;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor94837375 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor75226130;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor75226130 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor71318988;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor71318988 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor28753909;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor28753909 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor76716308;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor76716308 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor15689372;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor15689372 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor10821653;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor10821653 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor5533231;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor5533231 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor50933333;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor50933333 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor44117857;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor44117857 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor78552370;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor78552370 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor73349981;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor73349981 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor50827404;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor50827404 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor89920739;     fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor89920739 = fmSLWyvQPuCMHNhwmrIjZZoODYEkqEYxskSBESWUor78359244;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ntDuVCUHMmKDUFPYXhpWfuNZytmgoAptG63039780() {     long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt67297203 = -315886000;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt53291112 = 88649895;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt46810860 = -323938765;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt28692324 = -338696704;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt85562195 = -788606962;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt10614088 = -4254292;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt73217939 = -381296968;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt97260007 = -468435930;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt27064542 = -714957083;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt95770959 = -300644926;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt92995815 = -728607136;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt83410025 = -805012664;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt40315696 = 58809138;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt8544070 = 51908353;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt14227322 = -916508019;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt51395607 = -495927257;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt15190545 = -237247186;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt69617803 = -297339433;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt28270621 = -105347301;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt71684304 = -899095144;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt22786920 = -205266817;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt15100557 = -605919780;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt31918053 = -896577374;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt81707555 = -38677016;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt82299844 = -943586913;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt15836317 = -945218005;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt24059808 = -805962683;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt31493309 = -188066150;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt24117783 = -174746722;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt89736863 = -127562778;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt39847784 = -959238868;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt38720517 = -149961180;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt14066809 = -655711013;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt85583249 = -887100417;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt86673858 = -25705089;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt15235960 = -305157212;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt55759365 = -128036904;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt71971633 = -865085182;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt32765757 = -9489134;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt19900938 = -279793943;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt17048230 = -4452955;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt46111794 = -629268974;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt87575989 = -916347759;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt28271115 = -100720795;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt12859628 = -892143528;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt31535398 = -162495438;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt53700618 = 38407529;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt83330323 = -670537649;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt59109844 = -390053322;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt14853792 = -37259506;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt33741248 = -934193220;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt93097776 = -899995311;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt56693690 = -241921279;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt80549066 = -305077528;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt40252861 = -50305560;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt52196646 = -709966221;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt21373060 = -14772731;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt65103304 = -185261750;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt46392479 = -395109792;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt69725879 = -843388957;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt86554279 = -198291610;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt41724630 = -93230818;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt73142225 = -193689208;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt37327679 = -487394306;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt55923176 = -341406059;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt54275298 = -478645956;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt69343216 = -49301652;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt54732446 = -54090446;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt21870211 = -922386558;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt98991362 = -511350807;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt95636242 = -267890353;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt43218911 = -372162005;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt36852047 = -187850300;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt8369684 = -825553359;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt54636074 = -794642189;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt76675126 = -575997844;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt27524568 = -689572022;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt3646938 = -695856580;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt68847928 = -146533489;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt50764446 = -681091475;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt62135698 = -883625535;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt40729485 = -35425034;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt72383465 = -798012828;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt9263992 = -37487217;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt55995615 = -193369558;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt46750007 = 40756442;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt82026827 = -908039901;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt33517742 = -250633485;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt45330389 = -736794857;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt34477213 = -315738869;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt93862899 = -190384482;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt90656060 = -942775155;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt25579155 = -369975391;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt63039878 = -166100177;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt33346658 = 18497667;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt75323599 = -911222137;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt72969569 = -335579766;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt50248311 = -328953453;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt72347939 = -759314736;    long ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt58584329 = -315886000;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt67297203 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt53291112;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt53291112 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt46810860;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt46810860 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt28692324;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt28692324 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt85562195;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt85562195 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt10614088;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt10614088 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt73217939;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt73217939 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt97260007;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt97260007 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt27064542;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt27064542 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt95770959;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt95770959 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt92995815;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt92995815 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt83410025;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt83410025 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt40315696;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt40315696 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt8544070;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt8544070 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt14227322;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt14227322 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt51395607;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt51395607 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt15190545;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt15190545 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt69617803;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt69617803 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt28270621;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt28270621 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt71684304;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt71684304 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt22786920;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt22786920 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt15100557;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt15100557 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt31918053;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt31918053 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt81707555;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt81707555 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt82299844;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt82299844 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt15836317;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt15836317 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt24059808;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt24059808 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt31493309;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt31493309 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt24117783;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt24117783 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt89736863;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt89736863 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt39847784;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt39847784 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt38720517;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt38720517 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt14066809;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt14066809 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt85583249;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt85583249 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt86673858;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt86673858 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt15235960;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt15235960 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt55759365;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt55759365 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt71971633;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt71971633 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt32765757;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt32765757 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt19900938;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt19900938 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt17048230;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt17048230 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt46111794;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt46111794 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt87575989;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt87575989 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt28271115;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt28271115 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt12859628;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt12859628 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt31535398;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt31535398 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt53700618;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt53700618 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt83330323;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt83330323 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt59109844;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt59109844 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt14853792;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt14853792 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt33741248;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt33741248 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt93097776;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt93097776 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt56693690;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt56693690 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt80549066;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt80549066 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt40252861;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt40252861 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt52196646;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt52196646 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt21373060;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt21373060 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt65103304;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt65103304 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt46392479;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt46392479 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt69725879;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt69725879 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt86554279;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt86554279 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt41724630;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt41724630 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt73142225;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt73142225 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt37327679;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt37327679 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt55923176;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt55923176 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt54275298;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt54275298 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt69343216;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt69343216 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt54732446;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt54732446 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt21870211;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt21870211 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt98991362;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt98991362 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt95636242;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt95636242 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt43218911;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt43218911 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt36852047;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt36852047 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt8369684;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt8369684 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt54636074;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt54636074 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt76675126;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt76675126 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt27524568;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt27524568 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt3646938;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt3646938 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt68847928;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt68847928 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt50764446;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt50764446 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt62135698;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt62135698 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt40729485;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt40729485 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt72383465;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt72383465 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt9263992;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt9263992 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt55995615;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt55995615 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt46750007;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt46750007 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt82026827;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt82026827 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt33517742;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt33517742 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt45330389;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt45330389 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt34477213;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt34477213 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt93862899;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt93862899 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt90656060;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt90656060 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt25579155;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt25579155 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt63039878;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt63039878 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt33346658;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt33346658 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt75323599;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt75323599 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt72969569;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt72969569 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt50248311;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt50248311 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt72347939;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt72347939 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt58584329;     ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt58584329 = ImNmIJVdykAfLOZeZraYPatgdwbPnTMwRwMSCmPXUt67297203;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void qGIymfbHoxVNBiWIwGOGkO23342438() {     long WbcQWesntagPzhHUQUlyStwcAqUnXvQ57423512 = -374642201;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ36416177 = -286276275;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ42303559 = -460733226;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ2190899 = -524868526;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ98618931 = -729930403;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ91400492 = -996887400;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ67881377 = -18842441;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ50138571 = -104883668;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ50876229 = -722849721;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ26630 = -970519451;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ69147634 = -137027293;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ18159533 = -284600799;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ78661828 = -253426723;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ46962923 = 53747469;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ12301694 = -301628961;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ75575349 = -196307127;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ59152725 = -498592427;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ90973516 = -740188725;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ89185012 = -571757737;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ39008552 = -446973453;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ10709323 = 90308091;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ13182139 = -939016415;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ65156471 = -203037295;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ89628653 = -486701391;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ29185033 = -487097857;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ34627282 = -821091739;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ46027143 = -565491677;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ54663684 = -247956208;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ85326780 = -936945770;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ37525943 = -1965169;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ43311187 = -185905411;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ38087431 = -650785599;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ23035850 = -955936172;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ9421895 = -878551575;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ22270393 = -776040750;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ68466966 = -608186623;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ55992934 = -743852809;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ96328916 = -731144426;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ43298774 = -816951179;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ64413079 = -184501716;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ30747903 = -810314231;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ756257 = -443762187;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ47392831 = -291773354;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ58933056 = 35196017;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ4824046 = 95346516;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ51974392 = -646119344;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ34123909 = -610074970;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ73716782 = -697193903;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ87028497 = -825992669;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ44134197 = -494255843;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ63106772 = -208575265;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ36870884 = -864422144;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ6146145 = 46225726;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ33456129 = -428632810;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ12633116 = -178905832;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ44241373 = -435625786;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ71259706 = 16761020;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ52674906 = -974031835;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ73005865 = 62229330;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ63991649 = -908838664;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ45373349 = -331395724;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ13217693 = -770886233;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ64811790 = -167937899;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ13350287 = -620884552;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ56715443 = -684614040;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ31060204 = -486241694;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ95123682 = -328664628;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ69239934 = -374875148;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ24692531 = -170211782;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ43834727 = -693442339;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ19582416 = -452454319;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ62823808 = -767448002;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ47674742 = -923237546;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ24771933 = -287256022;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ8260649 = -636659223;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ9953066 = -465929723;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ65789308 = -547243062;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ6223416 = -138233312;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ84804607 = -482047908;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ77210641 = -840978514;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ503374 = -111016769;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ72310360 = -868297775;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ67635186 = -421963540;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ41192584 = -342689928;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ74419171 = -793389905;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ6440303 = -321483268;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ31941286 = -597011326;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ89579720 = -427303363;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ96788778 = -599645744;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ78029020 = -240414964;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ97207259 = -524947643;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ3318028 = -769820974;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ23323052 = -693373757;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ79307124 = -908112515;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ19039730 = -853105992;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ17530210 = 60572002;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ35944467 = -175824289;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ34042545 = -670888802;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ2217613 = -280189944;    long WbcQWesntagPzhHUQUlyStwcAqUnXvQ73763842 = -374642201;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ57423512 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ36416177;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ36416177 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ42303559;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ42303559 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ2190899;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ2190899 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ98618931;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ98618931 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ91400492;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ91400492 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ67881377;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ67881377 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ50138571;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ50138571 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ50876229;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ50876229 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ26630;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ26630 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ69147634;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ69147634 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ18159533;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ18159533 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ78661828;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ78661828 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ46962923;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ46962923 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ12301694;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ12301694 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ75575349;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ75575349 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ59152725;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ59152725 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ90973516;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ90973516 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ89185012;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ89185012 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ39008552;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ39008552 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ10709323;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ10709323 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ13182139;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ13182139 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ65156471;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ65156471 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ89628653;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ89628653 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ29185033;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ29185033 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ34627282;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ34627282 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ46027143;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ46027143 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ54663684;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ54663684 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ85326780;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ85326780 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ37525943;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ37525943 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ43311187;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ43311187 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ38087431;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ38087431 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ23035850;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ23035850 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ9421895;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ9421895 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ22270393;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ22270393 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ68466966;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ68466966 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ55992934;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ55992934 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ96328916;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ96328916 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ43298774;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ43298774 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ64413079;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ64413079 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ30747903;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ30747903 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ756257;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ756257 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ47392831;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ47392831 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ58933056;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ58933056 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ4824046;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ4824046 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ51974392;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ51974392 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ34123909;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ34123909 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ73716782;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ73716782 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ87028497;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ87028497 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ44134197;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ44134197 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ63106772;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ63106772 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ36870884;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ36870884 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ6146145;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ6146145 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ33456129;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ33456129 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ12633116;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ12633116 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ44241373;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ44241373 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ71259706;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ71259706 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ52674906;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ52674906 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ73005865;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ73005865 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ63991649;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ63991649 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ45373349;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ45373349 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ13217693;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ13217693 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ64811790;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ64811790 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ13350287;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ13350287 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ56715443;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ56715443 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ31060204;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ31060204 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ95123682;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ95123682 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ69239934;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ69239934 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ24692531;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ24692531 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ43834727;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ43834727 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ19582416;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ19582416 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ62823808;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ62823808 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ47674742;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ47674742 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ24771933;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ24771933 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ8260649;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ8260649 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ9953066;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ9953066 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ65789308;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ65789308 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ6223416;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ6223416 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ84804607;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ84804607 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ77210641;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ77210641 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ503374;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ503374 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ72310360;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ72310360 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ67635186;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ67635186 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ41192584;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ41192584 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ74419171;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ74419171 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ6440303;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ6440303 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ31941286;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ31941286 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ89579720;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ89579720 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ96788778;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ96788778 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ78029020;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ78029020 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ97207259;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ97207259 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ3318028;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ3318028 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ23323052;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ23323052 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ79307124;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ79307124 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ19039730;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ19039730 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ17530210;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ17530210 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ35944467;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ35944467 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ34042545;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ34042545 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ2217613;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ2217613 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ73763842;     WbcQWesntagPzhHUQUlyStwcAqUnXvQ73763842 = WbcQWesntagPzhHUQUlyStwcAqUnXvQ57423512;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void IlXRmgnsbvqiczHwhqKOEc35887627() {     long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV76891682 = -787773413;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV89440041 = -832154271;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV59140550 = -112361841;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV20838047 = -341442789;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV99065447 = -256202819;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV16992567 = -887372169;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV12713256 = -462148670;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV15388804 = -198691634;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV11563027 = -351041100;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV77955353 = -976105497;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV23370898 = -570017593;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV21654146 = -283903504;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV69033487 = -677783999;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV55378963 = -488538257;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV72828154 = -599712753;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV41790998 = -659499061;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV65114838 = -670367109;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV15036268 = -490943443;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV88819891 = -948962498;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV19619854 = -64509909;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV23165395 = -515904235;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV28164222 = -350819628;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV33329477 = -500611914;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV7350322 = -123245383;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV40388522 = -781397966;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV39394743 = -506886958;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV29955274 = -230642608;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV5455359 = -411689487;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV27071737 = -950856916;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV22232798 = -93403864;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV73115271 = -51231504;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV77666741 = -115134617;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV34511953 = -411143939;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV68178401 = -83154782;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV62200729 = -838743556;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV4532904 = -911755231;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV24376385 = -170728883;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV37811391 = -808353241;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV10612099 = -181366004;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV85694815 = -181032812;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV72229960 = -220100526;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV12615390 = -682658413;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV18526072 = -239575152;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV42318595 = -413876644;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV84852456 = -181776447;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV6435519 = -83450765;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV16113789 = -523768293;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV73872612 = -880481217;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV28164089 = -839931907;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV85032539 = -255268188;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV37542341 = -614940196;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV53319744 = -141775003;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV75971291 = -729883235;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV6386158 = -423226446;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV12722233 = 46535533;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV48727460 = -336953785;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV56110564 = -231542358;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV51790229 = -989116458;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV80449525 = -560044823;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV59670704 = -749315862;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV87037292 = -556729561;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV7257897 = 49540816;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV88317066 = -247834719;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV89330229 = -157637237;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV4840082 = -824873993;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV45704156 = -354882976;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV87142193 = -872759566;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV855087 = -494629218;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV93178234 = -649794701;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV68295251 = -687957522;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV17414614 = -388770178;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV27303447 = -862013868;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV4424169 = -209577439;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV3125077 = -667929686;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV47389894 = -844409384;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV10550005 = -833245822;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV9638151 = -11244477;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV91010882 = 13264730;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV22497866 = -941468937;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV33953003 = -597947202;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV23280955 = -983118665;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV56082661 = -350161392;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV77291270 = -571757580;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV42039198 = -595588728;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV84690456 = -478463668;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV19795528 = -909456502;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV1695451 = -385251383;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV28125796 = -987917494;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV55456169 = -29690315;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV13473270 = -401789772;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV48422339 = -580212874;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV72586155 = -181612426;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV57361866 = -148308419;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV50941395 = -432050143;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV98657522 = -624303252;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV64972063 = -169641343;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV24298323 = -334823695;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV29195843 = 18062085;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV37478513 = -589002651;    long lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV39148300 = -787773413;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV76891682 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV89440041;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV89440041 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV59140550;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV59140550 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV20838047;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV20838047 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV99065447;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV99065447 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV16992567;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV16992567 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV12713256;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV12713256 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV15388804;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV15388804 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV11563027;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV11563027 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV77955353;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV77955353 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV23370898;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV23370898 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV21654146;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV21654146 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV69033487;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV69033487 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV55378963;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV55378963 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV72828154;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV72828154 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV41790998;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV41790998 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV65114838;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV65114838 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV15036268;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV15036268 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV88819891;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV88819891 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV19619854;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV19619854 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV23165395;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV23165395 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV28164222;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV28164222 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV33329477;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV33329477 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV7350322;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV7350322 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV40388522;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV40388522 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV39394743;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV39394743 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV29955274;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV29955274 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV5455359;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV5455359 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV27071737;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV27071737 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV22232798;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV22232798 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV73115271;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV73115271 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV77666741;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV77666741 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV34511953;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV34511953 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV68178401;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV68178401 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV62200729;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV62200729 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV4532904;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV4532904 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV24376385;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV24376385 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV37811391;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV37811391 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV10612099;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV10612099 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV85694815;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV85694815 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV72229960;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV72229960 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV12615390;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV12615390 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV18526072;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV18526072 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV42318595;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV42318595 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV84852456;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV84852456 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV6435519;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV6435519 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV16113789;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV16113789 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV73872612;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV73872612 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV28164089;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV28164089 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV85032539;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV85032539 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV37542341;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV37542341 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV53319744;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV53319744 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV75971291;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV75971291 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV6386158;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV6386158 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV12722233;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV12722233 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV48727460;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV48727460 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV56110564;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV56110564 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV51790229;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV51790229 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV80449525;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV80449525 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV59670704;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV59670704 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV87037292;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV87037292 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV7257897;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV7257897 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV88317066;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV88317066 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV89330229;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV89330229 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV4840082;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV4840082 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV45704156;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV45704156 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV87142193;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV87142193 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV855087;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV855087 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV93178234;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV93178234 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV68295251;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV68295251 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV17414614;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV17414614 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV27303447;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV27303447 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV4424169;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV4424169 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV3125077;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV3125077 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV47389894;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV47389894 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV10550005;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV10550005 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV9638151;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV9638151 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV91010882;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV91010882 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV22497866;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV22497866 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV33953003;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV33953003 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV23280955;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV23280955 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV56082661;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV56082661 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV77291270;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV77291270 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV42039198;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV42039198 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV84690456;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV84690456 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV19795528;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV19795528 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV1695451;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV1695451 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV28125796;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV28125796 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV55456169;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV55456169 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV13473270;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV13473270 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV48422339;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV48422339 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV72586155;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV72586155 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV57361866;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV57361866 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV50941395;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV50941395 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV98657522;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV98657522 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV64972063;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV64972063 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV24298323;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV24298323 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV29195843;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV29195843 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV37478513;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV37478513 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV39148300;     lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV39148300 = lpnOcghLrLIWgIKTSNBdjQBsnlNQkGV76891682;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void awuCkJbxVSbVvXXoBhdFjh96190284() {     long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj67017990 = -846529614;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj72565106 = -107080441;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj54633249 = -249156302;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj94336621 = -527614611;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj12122183 = -197526261;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj97778971 = -780005277;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj7376694 = -99694143;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj68267367 = -935139373;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj35374714 = -358933738;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj82211023 = -545980023;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj99522716 = 21562250;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj56403653 = -863491639;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj7379620 = -990019860;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj93797817 = -486699141;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj70902526 = 15166304;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj65970740 = -359878931;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj9077019 = -931712350;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj36391980 = -933792735;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj49734282 = -315372934;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj86944101 = -712388219;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj11087797 = -220329327;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj26245804 = -683916264;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj66567895 = -907071835;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj15271419 = -571269759;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj87273710 = -324908910;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj58185708 = -382760693;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj51922609 = 9828398;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj28625734 = -471579546;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj88280735 = -613055964;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj70021877 = 32193745;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj76578674 = -377898048;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj77033655 = -615959037;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj43480994 = -711369099;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj92017046 = -74605940;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj97797263 = -489079217;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj57763910 = -114784641;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj24609953 = -786544788;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj62168674 = -674412485;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj21145116 = -988828050;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj30206957 = -85740585;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj85929633 = 74038198;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj67259853 = -497151626;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj78342913 = -715000747;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj72980535 = -277959833;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj76816873 = -294286403;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj26874513 = -567074670;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj96537079 = -72250793;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj64259072 = -907137470;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj56082743 = -175871254;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj14312945 = -712264525;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj66907865 = -989322241;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj97092851 = -106201836;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj25423746 = -441736230;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj59293220 = -546781728;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj85102487 = -82064739;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj40772187 = -62613351;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj5997211 = -200008607;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj39361831 = -677886544;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj7062912 = -102705701;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj53936475 = -814765569;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj45856362 = -689833675;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj78750959 = -628114598;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj79986632 = -222083409;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj65352837 = -291127483;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj5632349 = -68081975;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj22489062 = -362478714;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj12922660 = -52122541;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj15362574 = -815413921;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj96000553 = -997619925;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj13138617 = -870049055;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj41360787 = -573334144;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj46908344 = -157299865;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj15246865 = -944964686;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj19527326 = -129632349;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj1014469 = -686426418;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj43827944 = -723177702;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj47902891 = -968915517;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj93587359 = -529112002;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj38454545 = -176983356;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj60399197 = -757834240;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj61648629 = -210509900;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj87663537 = -83034132;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj72542991 = -195708292;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj73967790 = -900791439;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj3114013 = 21515986;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj79485823 = -171696213;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj51609909 = -74222808;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj84187774 = -64587372;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj6914559 = -992541201;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj57025077 = -326465867;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj51766699 = -914776035;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj85248122 = -8658244;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj55105763 = -471706784;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj67208641 = -74062482;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj84350595 = -395906911;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj7178674 = -297847204;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj87273221 = -175068217;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj12990077 = -323873264;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj67348187 = -109877858;    long BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj54327812 = -846529614;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj67017990 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj72565106;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj72565106 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj54633249;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj54633249 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj94336621;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj94336621 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj12122183;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj12122183 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj97778971;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj97778971 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj7376694;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj7376694 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj68267367;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj68267367 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj35374714;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj35374714 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj82211023;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj82211023 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj99522716;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj99522716 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj56403653;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj56403653 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj7379620;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj7379620 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj93797817;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj93797817 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj70902526;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj70902526 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj65970740;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj65970740 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj9077019;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj9077019 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj36391980;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj36391980 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj49734282;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj49734282 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj86944101;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj86944101 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj11087797;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj11087797 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj26245804;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj26245804 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj66567895;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj66567895 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj15271419;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj15271419 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj87273710;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj87273710 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj58185708;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj58185708 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj51922609;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj51922609 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj28625734;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj28625734 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj88280735;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj88280735 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj70021877;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj70021877 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj76578674;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj76578674 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj77033655;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj77033655 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj43480994;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj43480994 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj92017046;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj92017046 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj97797263;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj97797263 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj57763910;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj57763910 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj24609953;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj24609953 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj62168674;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj62168674 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj21145116;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj21145116 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj30206957;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj30206957 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj85929633;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj85929633 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj67259853;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj67259853 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj78342913;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj78342913 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj72980535;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj72980535 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj76816873;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj76816873 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj26874513;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj26874513 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj96537079;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj96537079 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj64259072;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj64259072 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj56082743;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj56082743 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj14312945;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj14312945 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj66907865;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj66907865 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj97092851;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj97092851 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj25423746;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj25423746 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj59293220;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj59293220 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj85102487;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj85102487 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj40772187;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj40772187 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj5997211;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj5997211 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj39361831;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj39361831 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj7062912;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj7062912 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj53936475;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj53936475 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj45856362;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj45856362 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj78750959;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj78750959 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj79986632;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj79986632 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj65352837;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj65352837 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj5632349;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj5632349 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj22489062;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj22489062 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj12922660;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj12922660 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj15362574;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj15362574 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj96000553;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj96000553 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj13138617;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj13138617 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj41360787;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj41360787 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj46908344;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj46908344 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj15246865;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj15246865 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj19527326;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj19527326 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj1014469;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj1014469 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj43827944;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj43827944 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj47902891;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj47902891 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj93587359;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj93587359 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj38454545;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj38454545 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj60399197;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj60399197 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj61648629;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj61648629 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj87663537;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj87663537 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj72542991;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj72542991 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj73967790;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj73967790 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj3114013;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj3114013 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj79485823;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj79485823 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj51609909;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj51609909 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj84187774;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj84187774 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj6914559;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj6914559 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj57025077;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj57025077 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj51766699;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj51766699 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj85248122;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj85248122 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj55105763;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj55105763 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj67208641;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj67208641 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj84350595;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj84350595 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj7178674;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj7178674 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj87273221;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj87273221 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj12990077;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj12990077 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj67348187;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj67348187 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj54327812;     BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj54327812 = BGUmZCMWkxQUDKTvCMpIzfgIqyjvztj67017990;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void WFaEpdheSpAitQKFEROVAi8735474() {     long ecaAddUBylri86486160 = -159660826;    long ecaAddUBylri25588970 = -652958437;    long ecaAddUBylri71470241 = 99215083;    long ecaAddUBylri12983771 = -344188874;    long ecaAddUBylri12568700 = -823798677;    long ecaAddUBylri23371045 = -670490045;    long ecaAddUBylri52208572 = -543000373;    long ecaAddUBylri33517601 = 71052661;    long ecaAddUBylri96061511 = 12874883;    long ecaAddUBylri60139746 = -551566068;    long ecaAddUBylri53745981 = -411428051;    long ecaAddUBylri59898267 = -862794344;    long ecaAddUBylri97751279 = -314377136;    long ecaAddUBylri2213858 = 71015133;    long ecaAddUBylri31428988 = -282917487;    long ecaAddUBylri32186389 = -823070865;    long ecaAddUBylri15039132 = -3487032;    long ecaAddUBylri60454731 = -684547453;    long ecaAddUBylri49369162 = -692577694;    long ecaAddUBylri67555404 = -329924675;    long ecaAddUBylri23543869 = -826541653;    long ecaAddUBylri41227887 = -95719477;    long ecaAddUBylri34740901 = -104646453;    long ecaAddUBylri32993088 = -207813750;    long ecaAddUBylri98477199 = -619209020;    long ecaAddUBylri62953169 = -68555911;    long ecaAddUBylri35850740 = -755322534;    long ecaAddUBylri79417409 = -635312825;    long ecaAddUBylri30025692 = -626967110;    long ecaAddUBylri54728731 = -59244949;    long ecaAddUBylri6382760 = -243224141;    long ecaAddUBylri16612967 = -80308055;    long ecaAddUBylri54957097 = -166576865;    long ecaAddUBylri50773553 = -379209146;    long ecaAddUBylri37727600 = -551782023;    long ecaAddUBylri93829847 = -418353249;    long ecaAddUBylri92993403 = -213420863;    long ecaAddUBylri3651149 = -751621301;    long ecaAddUBylri88458440 = -353242875;    long ecaAddUBylri51488693 = -82271682;    long ecaAddUBylri27411690 = -435748098;    long ecaAddUBylri79118986 = -736047852;    long ecaAddUBylri49476154 = -662802545;    long ecaAddUBylri56366074 = -727032494;    long ecaAddUBylri56845285 = -571409366;    long ecaAddUBylri81335640 = -4406092;    long ecaAddUBylri78526959 = 14055884;    long ecaAddUBylri64414902 = 9575216;    long ecaAddUBylri97218333 = -189810492;    long ecaAddUBylri55211287 = -473276871;    long ecaAddUBylri41343434 = -295687172;    long ecaAddUBylri13541712 = -483554695;    long ecaAddUBylri95248892 = -117845191;    long ecaAddUBylri32223249 = -541375364;    long ecaAddUBylri85191604 = -956623374;    long ecaAddUBylri45258274 = 36058651;    long ecaAddUBylri90848068 = -448311985;    long ecaAddUBylri38477154 = -692971167;    long ecaAddUBylri14506572 = -724979855;    long ecaAddUBylri49615530 = -655242767;    long ecaAddUBylri87520305 = -915167512;    long ecaAddUBylri72791163 = -907687549;    long ecaAddUBylri3491909 = -301980230;    long ecaAddUBylri41332780 = -927880168;    long ecaAddUBylri53756987 = -208341928;    long ecaAddUBylri37133014 = -231119996;    long ecaAddUBylri4941170 = -596217479;    long ecaAddUBylri46977726 = -935167991;    long ecaAddUBylri64486258 = -377202845;    long ecaAddUBylri37599141 = -864564238;    long ecaAddUBylri39192985 = -509650003;    long ecaAddUBylri11387984 = -251865731;    long ecaAddUBylri71996290 = -231304579;    long ecaAddUBylri97880468 = -510306013;    long ecaAddUBylri40143714 = -894176578;    long ecaAddUBylri44424883 = 9506199;    long ecaAddUBylri91751732 = -432916933;    long ecaAddUBylri78374827 = -377613960;    long ecaAddUBylri76147802 = -636404385;    long ecaAddUBylri17141560 = -514802928;    long ecaAddUBylri84426210 = 17388205;    long ecaAddUBylri71435838 = -664897750;    long ecaAddUBylri82199075 = -345502333;    long ecaAddUBylri74814404 = -53690240;    long ecaAddUBylri13385298 = -763557778;    long ecaAddUBylri92841048 = -759669446;    long ecaAddUBylri21364074 = -962462865;    long ecaAddUBylri22733849 = -625201502;    long ecaAddUBylri65581949 = -422585773;    long ecaAddUBylri92469325 = -487840674;    long ecaAddUBylri2981779 = -970041265;    long ecaAddUBylri54516250 = -520449696;    long ecaAddUBylri89144577 = 73358554;    long ecaAddUBylri38842911 = -698000109;    long ecaAddUBylri63968388 = -167104171;    long ecaAddUBylri54620527 = -528060549;    long ecaAddUBylri75627077 = -334067623;    long ecaAddUBylri8143375 = -734922377;    long ecaAddUBylri2609088 = -418690566;    long ecaAddUBylri19712271 = -159660826;     ecaAddUBylri86486160 = ecaAddUBylri25588970;     ecaAddUBylri25588970 = ecaAddUBylri71470241;     ecaAddUBylri71470241 = ecaAddUBylri12983771;     ecaAddUBylri12983771 = ecaAddUBylri12568700;     ecaAddUBylri12568700 = ecaAddUBylri23371045;     ecaAddUBylri23371045 = ecaAddUBylri52208572;     ecaAddUBylri52208572 = ecaAddUBylri33517601;     ecaAddUBylri33517601 = ecaAddUBylri96061511;     ecaAddUBylri96061511 = ecaAddUBylri60139746;     ecaAddUBylri60139746 = ecaAddUBylri53745981;     ecaAddUBylri53745981 = ecaAddUBylri59898267;     ecaAddUBylri59898267 = ecaAddUBylri97751279;     ecaAddUBylri97751279 = ecaAddUBylri2213858;     ecaAddUBylri2213858 = ecaAddUBylri31428988;     ecaAddUBylri31428988 = ecaAddUBylri32186389;     ecaAddUBylri32186389 = ecaAddUBylri15039132;     ecaAddUBylri15039132 = ecaAddUBylri60454731;     ecaAddUBylri60454731 = ecaAddUBylri49369162;     ecaAddUBylri49369162 = ecaAddUBylri67555404;     ecaAddUBylri67555404 = ecaAddUBylri23543869;     ecaAddUBylri23543869 = ecaAddUBylri41227887;     ecaAddUBylri41227887 = ecaAddUBylri34740901;     ecaAddUBylri34740901 = ecaAddUBylri32993088;     ecaAddUBylri32993088 = ecaAddUBylri98477199;     ecaAddUBylri98477199 = ecaAddUBylri62953169;     ecaAddUBylri62953169 = ecaAddUBylri35850740;     ecaAddUBylri35850740 = ecaAddUBylri79417409;     ecaAddUBylri79417409 = ecaAddUBylri30025692;     ecaAddUBylri30025692 = ecaAddUBylri54728731;     ecaAddUBylri54728731 = ecaAddUBylri6382760;     ecaAddUBylri6382760 = ecaAddUBylri16612967;     ecaAddUBylri16612967 = ecaAddUBylri54957097;     ecaAddUBylri54957097 = ecaAddUBylri50773553;     ecaAddUBylri50773553 = ecaAddUBylri37727600;     ecaAddUBylri37727600 = ecaAddUBylri93829847;     ecaAddUBylri93829847 = ecaAddUBylri92993403;     ecaAddUBylri92993403 = ecaAddUBylri3651149;     ecaAddUBylri3651149 = ecaAddUBylri88458440;     ecaAddUBylri88458440 = ecaAddUBylri51488693;     ecaAddUBylri51488693 = ecaAddUBylri27411690;     ecaAddUBylri27411690 = ecaAddUBylri79118986;     ecaAddUBylri79118986 = ecaAddUBylri49476154;     ecaAddUBylri49476154 = ecaAddUBylri56366074;     ecaAddUBylri56366074 = ecaAddUBylri56845285;     ecaAddUBylri56845285 = ecaAddUBylri81335640;     ecaAddUBylri81335640 = ecaAddUBylri78526959;     ecaAddUBylri78526959 = ecaAddUBylri64414902;     ecaAddUBylri64414902 = ecaAddUBylri97218333;     ecaAddUBylri97218333 = ecaAddUBylri55211287;     ecaAddUBylri55211287 = ecaAddUBylri41343434;     ecaAddUBylri41343434 = ecaAddUBylri13541712;     ecaAddUBylri13541712 = ecaAddUBylri95248892;     ecaAddUBylri95248892 = ecaAddUBylri32223249;     ecaAddUBylri32223249 = ecaAddUBylri85191604;     ecaAddUBylri85191604 = ecaAddUBylri45258274;     ecaAddUBylri45258274 = ecaAddUBylri90848068;     ecaAddUBylri90848068 = ecaAddUBylri38477154;     ecaAddUBylri38477154 = ecaAddUBylri14506572;     ecaAddUBylri14506572 = ecaAddUBylri49615530;     ecaAddUBylri49615530 = ecaAddUBylri87520305;     ecaAddUBylri87520305 = ecaAddUBylri72791163;     ecaAddUBylri72791163 = ecaAddUBylri3491909;     ecaAddUBylri3491909 = ecaAddUBylri41332780;     ecaAddUBylri41332780 = ecaAddUBylri53756987;     ecaAddUBylri53756987 = ecaAddUBylri37133014;     ecaAddUBylri37133014 = ecaAddUBylri4941170;     ecaAddUBylri4941170 = ecaAddUBylri46977726;     ecaAddUBylri46977726 = ecaAddUBylri64486258;     ecaAddUBylri64486258 = ecaAddUBylri37599141;     ecaAddUBylri37599141 = ecaAddUBylri39192985;     ecaAddUBylri39192985 = ecaAddUBylri11387984;     ecaAddUBylri11387984 = ecaAddUBylri71996290;     ecaAddUBylri71996290 = ecaAddUBylri97880468;     ecaAddUBylri97880468 = ecaAddUBylri40143714;     ecaAddUBylri40143714 = ecaAddUBylri44424883;     ecaAddUBylri44424883 = ecaAddUBylri91751732;     ecaAddUBylri91751732 = ecaAddUBylri78374827;     ecaAddUBylri78374827 = ecaAddUBylri76147802;     ecaAddUBylri76147802 = ecaAddUBylri17141560;     ecaAddUBylri17141560 = ecaAddUBylri84426210;     ecaAddUBylri84426210 = ecaAddUBylri71435838;     ecaAddUBylri71435838 = ecaAddUBylri82199075;     ecaAddUBylri82199075 = ecaAddUBylri74814404;     ecaAddUBylri74814404 = ecaAddUBylri13385298;     ecaAddUBylri13385298 = ecaAddUBylri92841048;     ecaAddUBylri92841048 = ecaAddUBylri21364074;     ecaAddUBylri21364074 = ecaAddUBylri22733849;     ecaAddUBylri22733849 = ecaAddUBylri65581949;     ecaAddUBylri65581949 = ecaAddUBylri92469325;     ecaAddUBylri92469325 = ecaAddUBylri2981779;     ecaAddUBylri2981779 = ecaAddUBylri54516250;     ecaAddUBylri54516250 = ecaAddUBylri89144577;     ecaAddUBylri89144577 = ecaAddUBylri38842911;     ecaAddUBylri38842911 = ecaAddUBylri63968388;     ecaAddUBylri63968388 = ecaAddUBylri54620527;     ecaAddUBylri54620527 = ecaAddUBylri75627077;     ecaAddUBylri75627077 = ecaAddUBylri8143375;     ecaAddUBylri8143375 = ecaAddUBylri2609088;     ecaAddUBylri2609088 = ecaAddUBylri19712271;     ecaAddUBylri19712271 = ecaAddUBylri86486160;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void YFaXbcIgEfiwNZ4918634() {     long sFRrLjzaXmqy46082258 = -388417203;    long sFRrLjzaXmqy27094820 = -463113822;    long sFRrLjzaXmqy8471630 = 25074161;    long sFRrLjzaXmqy8859529 = -116799751;    long sFRrLjzaXmqy23861926 = -724305704;    long sFRrLjzaXmqy21048166 = -528749718;    long sFRrLjzaXmqy49567055 = -972717959;    long sFRrLjzaXmqy84342884 = -283158714;    long sFRrLjzaXmqy9874956 = -519797616;    long sFRrLjzaXmqy43164262 = -492824922;    long sFRrLjzaXmqy79040912 = -812970490;    long sFRrLjzaXmqy94569468 = -957815594;    long sFRrLjzaXmqy68505842 = -220555655;    long sFRrLjzaXmqy60587696 = -933143215;    long sFRrLjzaXmqy28736794 = 24555992;    long sFRrLjzaXmqy28940644 = -628443756;    long sFRrLjzaXmqy51000236 = 68296688;    long sFRrLjzaXmqy25123063 = 46116442;    long sFRrLjzaXmqy29811365 = -831697324;    long sFRrLjzaXmqy47472513 = -992333328;    long sFRrLjzaXmqy4004988 = -659562477;    long sFRrLjzaXmqy9717486 = 11878646;    long sFRrLjzaXmqy26932727 = -968941532;    long sFRrLjzaXmqy97723326 = -872151987;    long sFRrLjzaXmqy74455204 = -75346610;    long sFRrLjzaXmqy57368076 = -203173382;    long sFRrLjzaXmqy49190810 = -104802531;    long sFRrLjzaXmqy44528578 = -156694415;    long sFRrLjzaXmqy79810035 = -416559725;    long sFRrLjzaXmqy93202198 = -106228191;    long sFRrLjzaXmqy31297078 = -888443469;    long sFRrLjzaXmqy59378226 = -497526052;    long sFRrLjzaXmqy4039137 = -146523738;    long sFRrLjzaXmqy33297996 = -981093077;    long sFRrLjzaXmqy42664961 = -199992009;    long sFRrLjzaXmqy72419743 = -730009831;    long sFRrLjzaXmqy83625081 = -506199497;    long sFRrLjzaXmqy2011487 = -696073690;    long sFRrLjzaXmqy7476384 = -71949392;    long sFRrLjzaXmqy24314348 = -356152630;    long sFRrLjzaXmqy85629503 = -904409694;    long sFRrLjzaXmqy49198167 = -740989270;    long sFRrLjzaXmqy90355396 = -396247374;    long sFRrLjzaXmqy30605580 = -50947232;    long sFRrLjzaXmqy57833600 = -17727434;    long sFRrLjzaXmqy46128769 = -247350250;    long sFRrLjzaXmqy84015681 = -977799783;    long sFRrLjzaXmqy11111296 = -323178013;    long sFRrLjzaXmqy36607982 = -473748112;    long sFRrLjzaXmqy70378680 = -794529331;    long sFRrLjzaXmqy91829684 = -81795396;    long sFRrLjzaXmqy20126865 = -454797950;    long sFRrLjzaXmqy70664407 = -357793644;    long sFRrLjzaXmqy5497772 = -801544319;    long sFRrLjzaXmqy913646 = -920557461;    long sFRrLjzaXmqy36364772 = -300295849;    long sFRrLjzaXmqy162094 = -494172291;    long sFRrLjzaXmqy10748303 = -102773853;    long sFRrLjzaXmqy34404325 = 58546858;    long sFRrLjzaXmqy66493849 = -421132323;    long sFRrLjzaXmqy71857355 = -323947188;    long sFRrLjzaXmqy5038478 = -716023545;    long sFRrLjzaXmqy4532850 = -866598990;    long sFRrLjzaXmqy16672758 = -313569425;    long sFRrLjzaXmqy11867184 = -604381454;    long sFRrLjzaXmqy19662686 = -215444438;    long sFRrLjzaXmqy90530332 = -711291856;    long sFRrLjzaXmqy35207847 = -239462578;    long sFRrLjzaXmqy17922736 = -633151206;    long sFRrLjzaXmqy56317050 = -245434177;    long sFRrLjzaXmqy45315562 = -22244259;    long sFRrLjzaXmqy48988749 = -235629622;    long sFRrLjzaXmqy17646679 = -881934167;    long sFRrLjzaXmqy5497018 = -375544694;    long sFRrLjzaXmqy61843009 = 12076365;    long sFRrLjzaXmqy54806820 = -918573207;    long sFRrLjzaXmqy19362089 = -591873981;    long sFRrLjzaXmqy96327146 = -817994300;    long sFRrLjzaXmqy39889726 = -754424553;    long sFRrLjzaXmqy28326436 = -827996360;    long sFRrLjzaXmqy73352395 = -225373599;    long sFRrLjzaXmqy38079515 = -781624519;    long sFRrLjzaXmqy7920597 = -682946303;    long sFRrLjzaXmqy9431355 = -622030394;    long sFRrLjzaXmqy1372514 = 75567204;    long sFRrLjzaXmqy11170214 = -333645519;    long sFRrLjzaXmqy88713819 = -39732409;    long sFRrLjzaXmqy98541364 = -344979419;    long sFRrLjzaXmqy32384350 = 39464383;    long sFRrLjzaXmqy6300189 = -899696160;    long sFRrLjzaXmqy72257650 = -135837541;    long sFRrLjzaXmqy72876778 = -303425645;    long sFRrLjzaXmqy67607161 = -654620549;    long sFRrLjzaXmqy40982535 = -650817069;    long sFRrLjzaXmqy52456992 = 67794557;    long sFRrLjzaXmqy80591026 = -88386150;    long sFRrLjzaXmqy44665318 = -874390281;    long sFRrLjzaXmqy73682639 = 17322050;    long sFRrLjzaXmqy18738396 = -446565779;    long sFRrLjzaXmqy38170915 = -388417203;     sFRrLjzaXmqy46082258 = sFRrLjzaXmqy27094820;     sFRrLjzaXmqy27094820 = sFRrLjzaXmqy8471630;     sFRrLjzaXmqy8471630 = sFRrLjzaXmqy8859529;     sFRrLjzaXmqy8859529 = sFRrLjzaXmqy23861926;     sFRrLjzaXmqy23861926 = sFRrLjzaXmqy21048166;     sFRrLjzaXmqy21048166 = sFRrLjzaXmqy49567055;     sFRrLjzaXmqy49567055 = sFRrLjzaXmqy84342884;     sFRrLjzaXmqy84342884 = sFRrLjzaXmqy9874956;     sFRrLjzaXmqy9874956 = sFRrLjzaXmqy43164262;     sFRrLjzaXmqy43164262 = sFRrLjzaXmqy79040912;     sFRrLjzaXmqy79040912 = sFRrLjzaXmqy94569468;     sFRrLjzaXmqy94569468 = sFRrLjzaXmqy68505842;     sFRrLjzaXmqy68505842 = sFRrLjzaXmqy60587696;     sFRrLjzaXmqy60587696 = sFRrLjzaXmqy28736794;     sFRrLjzaXmqy28736794 = sFRrLjzaXmqy28940644;     sFRrLjzaXmqy28940644 = sFRrLjzaXmqy51000236;     sFRrLjzaXmqy51000236 = sFRrLjzaXmqy25123063;     sFRrLjzaXmqy25123063 = sFRrLjzaXmqy29811365;     sFRrLjzaXmqy29811365 = sFRrLjzaXmqy47472513;     sFRrLjzaXmqy47472513 = sFRrLjzaXmqy4004988;     sFRrLjzaXmqy4004988 = sFRrLjzaXmqy9717486;     sFRrLjzaXmqy9717486 = sFRrLjzaXmqy26932727;     sFRrLjzaXmqy26932727 = sFRrLjzaXmqy97723326;     sFRrLjzaXmqy97723326 = sFRrLjzaXmqy74455204;     sFRrLjzaXmqy74455204 = sFRrLjzaXmqy57368076;     sFRrLjzaXmqy57368076 = sFRrLjzaXmqy49190810;     sFRrLjzaXmqy49190810 = sFRrLjzaXmqy44528578;     sFRrLjzaXmqy44528578 = sFRrLjzaXmqy79810035;     sFRrLjzaXmqy79810035 = sFRrLjzaXmqy93202198;     sFRrLjzaXmqy93202198 = sFRrLjzaXmqy31297078;     sFRrLjzaXmqy31297078 = sFRrLjzaXmqy59378226;     sFRrLjzaXmqy59378226 = sFRrLjzaXmqy4039137;     sFRrLjzaXmqy4039137 = sFRrLjzaXmqy33297996;     sFRrLjzaXmqy33297996 = sFRrLjzaXmqy42664961;     sFRrLjzaXmqy42664961 = sFRrLjzaXmqy72419743;     sFRrLjzaXmqy72419743 = sFRrLjzaXmqy83625081;     sFRrLjzaXmqy83625081 = sFRrLjzaXmqy2011487;     sFRrLjzaXmqy2011487 = sFRrLjzaXmqy7476384;     sFRrLjzaXmqy7476384 = sFRrLjzaXmqy24314348;     sFRrLjzaXmqy24314348 = sFRrLjzaXmqy85629503;     sFRrLjzaXmqy85629503 = sFRrLjzaXmqy49198167;     sFRrLjzaXmqy49198167 = sFRrLjzaXmqy90355396;     sFRrLjzaXmqy90355396 = sFRrLjzaXmqy30605580;     sFRrLjzaXmqy30605580 = sFRrLjzaXmqy57833600;     sFRrLjzaXmqy57833600 = sFRrLjzaXmqy46128769;     sFRrLjzaXmqy46128769 = sFRrLjzaXmqy84015681;     sFRrLjzaXmqy84015681 = sFRrLjzaXmqy11111296;     sFRrLjzaXmqy11111296 = sFRrLjzaXmqy36607982;     sFRrLjzaXmqy36607982 = sFRrLjzaXmqy70378680;     sFRrLjzaXmqy70378680 = sFRrLjzaXmqy91829684;     sFRrLjzaXmqy91829684 = sFRrLjzaXmqy20126865;     sFRrLjzaXmqy20126865 = sFRrLjzaXmqy70664407;     sFRrLjzaXmqy70664407 = sFRrLjzaXmqy5497772;     sFRrLjzaXmqy5497772 = sFRrLjzaXmqy913646;     sFRrLjzaXmqy913646 = sFRrLjzaXmqy36364772;     sFRrLjzaXmqy36364772 = sFRrLjzaXmqy162094;     sFRrLjzaXmqy162094 = sFRrLjzaXmqy10748303;     sFRrLjzaXmqy10748303 = sFRrLjzaXmqy34404325;     sFRrLjzaXmqy34404325 = sFRrLjzaXmqy66493849;     sFRrLjzaXmqy66493849 = sFRrLjzaXmqy71857355;     sFRrLjzaXmqy71857355 = sFRrLjzaXmqy5038478;     sFRrLjzaXmqy5038478 = sFRrLjzaXmqy4532850;     sFRrLjzaXmqy4532850 = sFRrLjzaXmqy16672758;     sFRrLjzaXmqy16672758 = sFRrLjzaXmqy11867184;     sFRrLjzaXmqy11867184 = sFRrLjzaXmqy19662686;     sFRrLjzaXmqy19662686 = sFRrLjzaXmqy90530332;     sFRrLjzaXmqy90530332 = sFRrLjzaXmqy35207847;     sFRrLjzaXmqy35207847 = sFRrLjzaXmqy17922736;     sFRrLjzaXmqy17922736 = sFRrLjzaXmqy56317050;     sFRrLjzaXmqy56317050 = sFRrLjzaXmqy45315562;     sFRrLjzaXmqy45315562 = sFRrLjzaXmqy48988749;     sFRrLjzaXmqy48988749 = sFRrLjzaXmqy17646679;     sFRrLjzaXmqy17646679 = sFRrLjzaXmqy5497018;     sFRrLjzaXmqy5497018 = sFRrLjzaXmqy61843009;     sFRrLjzaXmqy61843009 = sFRrLjzaXmqy54806820;     sFRrLjzaXmqy54806820 = sFRrLjzaXmqy19362089;     sFRrLjzaXmqy19362089 = sFRrLjzaXmqy96327146;     sFRrLjzaXmqy96327146 = sFRrLjzaXmqy39889726;     sFRrLjzaXmqy39889726 = sFRrLjzaXmqy28326436;     sFRrLjzaXmqy28326436 = sFRrLjzaXmqy73352395;     sFRrLjzaXmqy73352395 = sFRrLjzaXmqy38079515;     sFRrLjzaXmqy38079515 = sFRrLjzaXmqy7920597;     sFRrLjzaXmqy7920597 = sFRrLjzaXmqy9431355;     sFRrLjzaXmqy9431355 = sFRrLjzaXmqy1372514;     sFRrLjzaXmqy1372514 = sFRrLjzaXmqy11170214;     sFRrLjzaXmqy11170214 = sFRrLjzaXmqy88713819;     sFRrLjzaXmqy88713819 = sFRrLjzaXmqy98541364;     sFRrLjzaXmqy98541364 = sFRrLjzaXmqy32384350;     sFRrLjzaXmqy32384350 = sFRrLjzaXmqy6300189;     sFRrLjzaXmqy6300189 = sFRrLjzaXmqy72257650;     sFRrLjzaXmqy72257650 = sFRrLjzaXmqy72876778;     sFRrLjzaXmqy72876778 = sFRrLjzaXmqy67607161;     sFRrLjzaXmqy67607161 = sFRrLjzaXmqy40982535;     sFRrLjzaXmqy40982535 = sFRrLjzaXmqy52456992;     sFRrLjzaXmqy52456992 = sFRrLjzaXmqy80591026;     sFRrLjzaXmqy80591026 = sFRrLjzaXmqy44665318;     sFRrLjzaXmqy44665318 = sFRrLjzaXmqy73682639;     sFRrLjzaXmqy73682639 = sFRrLjzaXmqy18738396;     sFRrLjzaXmqy18738396 = sFRrLjzaXmqy38170915;     sFRrLjzaXmqy38170915 = sFRrLjzaXmqy46082258;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void hsTBLcwSeMTfKI65221291() {     long yQomBfebRqjw36208566 = -447173404;    long yQomBfebRqjw10219885 = -838039992;    long yQomBfebRqjw3964329 = -111720301;    long yQomBfebRqjw82358104 = -302971573;    long yQomBfebRqjw36918661 = -665629146;    long yQomBfebRqjw1834571 = -421382826;    long yQomBfebRqjw44230493 = -610263432;    long yQomBfebRqjw37221448 = 80393547;    long yQomBfebRqjw33686643 = -527690254;    long yQomBfebRqjw47419932 = -62699447;    long yQomBfebRqjw55192731 = -221390647;    long yQomBfebRqjw29318976 = -437403729;    long yQomBfebRqjw6851975 = -532791515;    long yQomBfebRqjw99006549 = -931304099;    long yQomBfebRqjw26811165 = -460564951;    long yQomBfebRqjw53120385 = -328823626;    long yQomBfebRqjw94962416 = -193048553;    long yQomBfebRqjw46478775 = -396732850;    long yQomBfebRqjw90725755 = -198107760;    long yQomBfebRqjw14796761 = -540211638;    long yQomBfebRqjw91927390 = -363987570;    long yQomBfebRqjw7799068 = -321217990;    long yQomBfebRqjw60171144 = -275401453;    long yQomBfebRqjw5644424 = -220176363;    long yQomBfebRqjw21340392 = -718857554;    long yQomBfebRqjw76159041 = -79047117;    long yQomBfebRqjw71158145 = -964331525;    long yQomBfebRqjw67698953 = -216584473;    long yQomBfebRqjw41019033 = -78758773;    long yQomBfebRqjw40991278 = 19369417;    long yQomBfebRqjw34760481 = -115110013;    long yQomBfebRqjw58745140 = -998350472;    long yQomBfebRqjw13008178 = -446748897;    long yQomBfebRqjw57136640 = -972544235;    long yQomBfebRqjw78261495 = -950327669;    long yQomBfebRqjw25650751 = 66960758;    long yQomBfebRqjw83858650 = -22015402;    long yQomBfebRqjw26368770 = -562132934;    long yQomBfebRqjw18009401 = -879411438;    long yQomBfebRqjw68826489 = -260860403;    long yQomBfebRqjw99329177 = -610270970;    long yQomBfebRqjw3842631 = -555482483;    long yQomBfebRqjw50172238 = -871672970;    long yQomBfebRqjw61267520 = 84969579;    long yQomBfebRqjw49798018 = -130237390;    long yQomBfebRqjw66567762 = -730974156;    long yQomBfebRqjw64438971 = -526282283;    long yQomBfebRqjw1497755 = -349834266;    long yQomBfebRqjw64526635 = -909687459;    long yQomBfebRqjw99659085 = -151525669;    long yQomBfebRqjw21195208 = -456177441;    long yQomBfebRqjw63899971 = -419224783;    long yQomBfebRqjw20116862 = -69646639;    long yQomBfebRqjw58404834 = -925099601;    long yQomBfebRqjw73293901 = 50842268;    long yQomBfebRqjw28409499 = -25955414;    long yQomBfebRqjw50048740 = -462638540;    long yQomBfebRqjw98319904 = -891543938;    long yQomBfebRqjw61017712 = -584114020;    long yQomBfebRqjw60759620 = -486582030;    long yQomBfebRqjw30676425 = -457051302;    long yQomBfebRqjw76531540 = -293678959;    long yQomBfebRqjw96202415 = -840847680;    long yQomBfebRqjw92695364 = -447059671;    long yQomBfebRqjw12659451 = -947589435;    long yQomBfebRqjw96447590 = -223040176;    long yQomBfebRqjw16310799 = -990654832;    long yQomBfebRqjw49715335 = -560247281;    long yQomBfebRqjw20745055 = -980976430;    long yQomBfebRqjw1160415 = -427525710;    long yQomBfebRqjw69261735 = -206808225;    long yQomBfebRqjw68593646 = -630915620;    long yQomBfebRqjw28469375 = -517321413;    long yQomBfebRqjw21899267 = -937247357;    long yQomBfebRqjw15467584 = -929940669;    long yQomBfebRqjw88084759 = -808505087;    long yQomBfebRqjw57626830 = -449545021;    long yQomBfebRqjw98903624 = -260371032;    long yQomBfebRqjw55846406 = 10061027;    long yQomBfebRqjw54772630 = -987883398;    long yQomBfebRqjw11720070 = -552764834;    long yQomBfebRqjw69660391 = -514497259;    long yQomBfebRqjw3172318 = -306897015;    long yQomBfebRqjw41359947 = -927233105;    long yQomBfebRqjw19796070 = -524453142;    long yQomBfebRqjw70860509 = -695885230;    long yQomBfebRqjw38628279 = -828703833;    long yQomBfebRqjw54603343 = -521649297;    long yQomBfebRqjw83842739 = -923386503;    long yQomBfebRqjw49851997 = -824372255;    long yQomBfebRqjw75602010 = -470400702;    long yQomBfebRqjw85538745 = -130471464;    long yQomBfebRqjw65351058 = -978018914;    long yQomBfebRqjw57249781 = -292829408;    long yQomBfebRqjw38150064 = -803809102;    long yQomBfebRqjw22797637 = -216592011;    long yQomBfebRqjw7640216 = -714634804;    long yQomBfebRqjw57476873 = -324613299;    long yQomBfebRqjw48608069 = 32559014;    long yQomBfebRqjw53350427 = -447173404;     yQomBfebRqjw36208566 = yQomBfebRqjw10219885;     yQomBfebRqjw10219885 = yQomBfebRqjw3964329;     yQomBfebRqjw3964329 = yQomBfebRqjw82358104;     yQomBfebRqjw82358104 = yQomBfebRqjw36918661;     yQomBfebRqjw36918661 = yQomBfebRqjw1834571;     yQomBfebRqjw1834571 = yQomBfebRqjw44230493;     yQomBfebRqjw44230493 = yQomBfebRqjw37221448;     yQomBfebRqjw37221448 = yQomBfebRqjw33686643;     yQomBfebRqjw33686643 = yQomBfebRqjw47419932;     yQomBfebRqjw47419932 = yQomBfebRqjw55192731;     yQomBfebRqjw55192731 = yQomBfebRqjw29318976;     yQomBfebRqjw29318976 = yQomBfebRqjw6851975;     yQomBfebRqjw6851975 = yQomBfebRqjw99006549;     yQomBfebRqjw99006549 = yQomBfebRqjw26811165;     yQomBfebRqjw26811165 = yQomBfebRqjw53120385;     yQomBfebRqjw53120385 = yQomBfebRqjw94962416;     yQomBfebRqjw94962416 = yQomBfebRqjw46478775;     yQomBfebRqjw46478775 = yQomBfebRqjw90725755;     yQomBfebRqjw90725755 = yQomBfebRqjw14796761;     yQomBfebRqjw14796761 = yQomBfebRqjw91927390;     yQomBfebRqjw91927390 = yQomBfebRqjw7799068;     yQomBfebRqjw7799068 = yQomBfebRqjw60171144;     yQomBfebRqjw60171144 = yQomBfebRqjw5644424;     yQomBfebRqjw5644424 = yQomBfebRqjw21340392;     yQomBfebRqjw21340392 = yQomBfebRqjw76159041;     yQomBfebRqjw76159041 = yQomBfebRqjw71158145;     yQomBfebRqjw71158145 = yQomBfebRqjw67698953;     yQomBfebRqjw67698953 = yQomBfebRqjw41019033;     yQomBfebRqjw41019033 = yQomBfebRqjw40991278;     yQomBfebRqjw40991278 = yQomBfebRqjw34760481;     yQomBfebRqjw34760481 = yQomBfebRqjw58745140;     yQomBfebRqjw58745140 = yQomBfebRqjw13008178;     yQomBfebRqjw13008178 = yQomBfebRqjw57136640;     yQomBfebRqjw57136640 = yQomBfebRqjw78261495;     yQomBfebRqjw78261495 = yQomBfebRqjw25650751;     yQomBfebRqjw25650751 = yQomBfebRqjw83858650;     yQomBfebRqjw83858650 = yQomBfebRqjw26368770;     yQomBfebRqjw26368770 = yQomBfebRqjw18009401;     yQomBfebRqjw18009401 = yQomBfebRqjw68826489;     yQomBfebRqjw68826489 = yQomBfebRqjw99329177;     yQomBfebRqjw99329177 = yQomBfebRqjw3842631;     yQomBfebRqjw3842631 = yQomBfebRqjw50172238;     yQomBfebRqjw50172238 = yQomBfebRqjw61267520;     yQomBfebRqjw61267520 = yQomBfebRqjw49798018;     yQomBfebRqjw49798018 = yQomBfebRqjw66567762;     yQomBfebRqjw66567762 = yQomBfebRqjw64438971;     yQomBfebRqjw64438971 = yQomBfebRqjw1497755;     yQomBfebRqjw1497755 = yQomBfebRqjw64526635;     yQomBfebRqjw64526635 = yQomBfebRqjw99659085;     yQomBfebRqjw99659085 = yQomBfebRqjw21195208;     yQomBfebRqjw21195208 = yQomBfebRqjw63899971;     yQomBfebRqjw63899971 = yQomBfebRqjw20116862;     yQomBfebRqjw20116862 = yQomBfebRqjw58404834;     yQomBfebRqjw58404834 = yQomBfebRqjw73293901;     yQomBfebRqjw73293901 = yQomBfebRqjw28409499;     yQomBfebRqjw28409499 = yQomBfebRqjw50048740;     yQomBfebRqjw50048740 = yQomBfebRqjw98319904;     yQomBfebRqjw98319904 = yQomBfebRqjw61017712;     yQomBfebRqjw61017712 = yQomBfebRqjw60759620;     yQomBfebRqjw60759620 = yQomBfebRqjw30676425;     yQomBfebRqjw30676425 = yQomBfebRqjw76531540;     yQomBfebRqjw76531540 = yQomBfebRqjw96202415;     yQomBfebRqjw96202415 = yQomBfebRqjw92695364;     yQomBfebRqjw92695364 = yQomBfebRqjw12659451;     yQomBfebRqjw12659451 = yQomBfebRqjw96447590;     yQomBfebRqjw96447590 = yQomBfebRqjw16310799;     yQomBfebRqjw16310799 = yQomBfebRqjw49715335;     yQomBfebRqjw49715335 = yQomBfebRqjw20745055;     yQomBfebRqjw20745055 = yQomBfebRqjw1160415;     yQomBfebRqjw1160415 = yQomBfebRqjw69261735;     yQomBfebRqjw69261735 = yQomBfebRqjw68593646;     yQomBfebRqjw68593646 = yQomBfebRqjw28469375;     yQomBfebRqjw28469375 = yQomBfebRqjw21899267;     yQomBfebRqjw21899267 = yQomBfebRqjw15467584;     yQomBfebRqjw15467584 = yQomBfebRqjw88084759;     yQomBfebRqjw88084759 = yQomBfebRqjw57626830;     yQomBfebRqjw57626830 = yQomBfebRqjw98903624;     yQomBfebRqjw98903624 = yQomBfebRqjw55846406;     yQomBfebRqjw55846406 = yQomBfebRqjw54772630;     yQomBfebRqjw54772630 = yQomBfebRqjw11720070;     yQomBfebRqjw11720070 = yQomBfebRqjw69660391;     yQomBfebRqjw69660391 = yQomBfebRqjw3172318;     yQomBfebRqjw3172318 = yQomBfebRqjw41359947;     yQomBfebRqjw41359947 = yQomBfebRqjw19796070;     yQomBfebRqjw19796070 = yQomBfebRqjw70860509;     yQomBfebRqjw70860509 = yQomBfebRqjw38628279;     yQomBfebRqjw38628279 = yQomBfebRqjw54603343;     yQomBfebRqjw54603343 = yQomBfebRqjw83842739;     yQomBfebRqjw83842739 = yQomBfebRqjw49851997;     yQomBfebRqjw49851997 = yQomBfebRqjw75602010;     yQomBfebRqjw75602010 = yQomBfebRqjw85538745;     yQomBfebRqjw85538745 = yQomBfebRqjw65351058;     yQomBfebRqjw65351058 = yQomBfebRqjw57249781;     yQomBfebRqjw57249781 = yQomBfebRqjw38150064;     yQomBfebRqjw38150064 = yQomBfebRqjw22797637;     yQomBfebRqjw22797637 = yQomBfebRqjw7640216;     yQomBfebRqjw7640216 = yQomBfebRqjw57476873;     yQomBfebRqjw57476873 = yQomBfebRqjw48608069;     yQomBfebRqjw48608069 = yQomBfebRqjw53350427;     yQomBfebRqjw53350427 = yQomBfebRqjw36208566;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void PCsqqwvNWcnNwg77766479() {     long hfSFjAHZHTgX55676736 = -860304616;    long hfSFjAHZHTgX63243748 = -283917988;    long hfSFjAHZHTgX20801320 = -863348915;    long hfSFjAHZHTgX1005253 = -119545836;    long hfSFjAHZHTgX37365177 = -191901562;    long hfSFjAHZHTgX27426645 = -311867594;    long hfSFjAHZHTgX89062371 = 46430338;    long hfSFjAHZHTgX2471682 = -13414419;    long hfSFjAHZHTgX94373440 = -155881633;    long hfSFjAHZHTgX25348655 = -68285493;    long hfSFjAHZHTgX9415995 = -654380948;    long hfSFjAHZHTgX32813590 = -436706434;    long hfSFjAHZHTgX97223633 = -957148792;    long hfSFjAHZHTgX7422590 = -373589825;    long hfSFjAHZHTgX87337626 = -758648742;    long hfSFjAHZHTgX19336035 = -792015560;    long hfSFjAHZHTgX924530 = -364823235;    long hfSFjAHZHTgX70541526 = -147487568;    long hfSFjAHZHTgX90360635 = -575312521;    long hfSFjAHZHTgX95408063 = -157748094;    long hfSFjAHZHTgX4383463 = -970199895;    long hfSFjAHZHTgX22781151 = -833021203;    long hfSFjAHZHTgX28344151 = -572976072;    long hfSFjAHZHTgX23366093 = -956720355;    long hfSFjAHZHTgX32543881 = 86842337;    long hfSFjAHZHTgX80926502 = -864842335;    long hfSFjAHZHTgX55086276 = -629482456;    long hfSFjAHZHTgX18490628 = -380317752;    long hfSFjAHZHTgX82763989 = -92669919;    long hfSFjAHZHTgX25698132 = -72069277;    long hfSFjAHZHTgX64564566 = 19563895;    long hfSFjAHZHTgX98324451 = -462699490;    long hfSFjAHZHTgX24484281 = 98043336;    long hfSFjAHZHTgX15893147 = -177147441;    long hfSFjAHZHTgX18191832 = 86969525;    long hfSFjAHZHTgX61716687 = -236607850;    long hfSFjAHZHTgX52242101 = -548891477;    long hfSFjAHZHTgX67851244 = -639341750;    long hfSFjAHZHTgX85322725 = -243826263;    long hfSFjAHZHTgX90108225 = -257391500;    long hfSFjAHZHTgX40811234 = -20057265;    long hfSFjAHZHTgX15701764 = -794378709;    long hfSFjAHZHTgX21305479 = -819474767;    long hfSFjAHZHTgX44653059 = -364103082;    long hfSFjAHZHTgX29826429 = -407360353;    long hfSFjAHZHTgX21028890 = -168305577;    long hfSFjAHZHTgX46428852 = -439975606;    long hfSFjAHZHTgX1653585 = -533121580;    long hfSFjAHZHTgX5662227 = -923626697;    long hfSFjAHZHTgX40557428 = 87461986;    long hfSFjAHZHTgX95630776 = -862542372;    long hfSFjAHZHTgX80348831 = -796577643;    long hfSFjAHZHTgX89942008 = -845755600;    long hfSFjAHZHTgX31334863 = -919693237;    long hfSFjAHZHTgX73383017 = -823716367;    long hfSFjAHZHTgX32895586 = 72716587;    long hfSFjAHZHTgX34899598 = -710941917;    long hfSFjAHZHTgX97435227 = -906628561;    long hfSFjAHZHTgX68461371 = -106388174;    long hfSFjAHZHTgX56438675 = -327059228;    long hfSFjAHZHTgX72340368 = -682385139;    long hfSFjAHZHTgX70571743 = -573251910;    long hfSFjAHZHTgX19707692 = -920744500;    long hfSFjAHZHTgX68675308 = 16187644;    long hfSFjAHZHTgX60784089 = 12150612;    long hfSFjAHZHTgX11091544 = -91681458;    long hfSFjAHZHTgX8329309 = -434749770;    long hfSFjAHZHTgX81330486 = -680001351;    long hfSFjAHZHTgX89230758 = -360559350;    long hfSFjAHZHTgX25620939 = -422040893;    long hfSFjAHZHTgX67093933 = -143124084;    long hfSFjAHZHTgX33073286 = -725481485;    long hfSFjAHZHTgX85218801 = -903661306;    long hfSFjAHZHTgX252410 = -217921021;    long hfSFjAHZHTgX54596829 = -37690829;    long hfSFjAHZHTgX88681698 = -75821186;    long hfSFjAHZHTgX1475672 = 86453564;    long hfSFjAHZHTgX83691091 = -108872990;    long hfSFjAHZHTgX93539663 = -449360002;    long hfSFjAHZHTgX11514992 = -744852086;    long hfSFjAHZHTgX34497651 = -324866730;    long hfSFjAHZHTgX53432692 = 3639123;    long hfSFjAHZHTgX12828402 = -456691055;    long hfSFjAHZHTgX42206562 = -80131906;    long hfSFjAHZHTgX30067355 = -209526906;    long hfSFjAHZHTgX84215734 = -183858463;    long hfSFjAHZHTgX8382443 = -616943890;    long hfSFjAHZHTgX93149418 = 17736573;    long hfSFjAHZHTgX42510130 = -353431075;    long hfSFjAHZHTgX85296245 = -985747063;    long hfSFjAHZHTgX26817090 = -525665933;    long hfSFjAHZHTgX54806873 = -642262916;    long hfSFjAHZHTgX99389872 = -432953576;    long hfSFjAHZHTgX28884051 = -916767036;    long hfSFjAHZHTgX17767857 = -575006362;    long hfSFjAHZHTgX70239490 = -446805356;    long hfSFjAHZHTgX95994071 = -873634209;    long hfSFjAHZHTgX52630171 = -735662412;    long hfSFjAHZHTgX83868970 = -276253694;    long hfSFjAHZHTgX18734886 = -860304616;     hfSFjAHZHTgX55676736 = hfSFjAHZHTgX63243748;     hfSFjAHZHTgX63243748 = hfSFjAHZHTgX20801320;     hfSFjAHZHTgX20801320 = hfSFjAHZHTgX1005253;     hfSFjAHZHTgX1005253 = hfSFjAHZHTgX37365177;     hfSFjAHZHTgX37365177 = hfSFjAHZHTgX27426645;     hfSFjAHZHTgX27426645 = hfSFjAHZHTgX89062371;     hfSFjAHZHTgX89062371 = hfSFjAHZHTgX2471682;     hfSFjAHZHTgX2471682 = hfSFjAHZHTgX94373440;     hfSFjAHZHTgX94373440 = hfSFjAHZHTgX25348655;     hfSFjAHZHTgX25348655 = hfSFjAHZHTgX9415995;     hfSFjAHZHTgX9415995 = hfSFjAHZHTgX32813590;     hfSFjAHZHTgX32813590 = hfSFjAHZHTgX97223633;     hfSFjAHZHTgX97223633 = hfSFjAHZHTgX7422590;     hfSFjAHZHTgX7422590 = hfSFjAHZHTgX87337626;     hfSFjAHZHTgX87337626 = hfSFjAHZHTgX19336035;     hfSFjAHZHTgX19336035 = hfSFjAHZHTgX924530;     hfSFjAHZHTgX924530 = hfSFjAHZHTgX70541526;     hfSFjAHZHTgX70541526 = hfSFjAHZHTgX90360635;     hfSFjAHZHTgX90360635 = hfSFjAHZHTgX95408063;     hfSFjAHZHTgX95408063 = hfSFjAHZHTgX4383463;     hfSFjAHZHTgX4383463 = hfSFjAHZHTgX22781151;     hfSFjAHZHTgX22781151 = hfSFjAHZHTgX28344151;     hfSFjAHZHTgX28344151 = hfSFjAHZHTgX23366093;     hfSFjAHZHTgX23366093 = hfSFjAHZHTgX32543881;     hfSFjAHZHTgX32543881 = hfSFjAHZHTgX80926502;     hfSFjAHZHTgX80926502 = hfSFjAHZHTgX55086276;     hfSFjAHZHTgX55086276 = hfSFjAHZHTgX18490628;     hfSFjAHZHTgX18490628 = hfSFjAHZHTgX82763989;     hfSFjAHZHTgX82763989 = hfSFjAHZHTgX25698132;     hfSFjAHZHTgX25698132 = hfSFjAHZHTgX64564566;     hfSFjAHZHTgX64564566 = hfSFjAHZHTgX98324451;     hfSFjAHZHTgX98324451 = hfSFjAHZHTgX24484281;     hfSFjAHZHTgX24484281 = hfSFjAHZHTgX15893147;     hfSFjAHZHTgX15893147 = hfSFjAHZHTgX18191832;     hfSFjAHZHTgX18191832 = hfSFjAHZHTgX61716687;     hfSFjAHZHTgX61716687 = hfSFjAHZHTgX52242101;     hfSFjAHZHTgX52242101 = hfSFjAHZHTgX67851244;     hfSFjAHZHTgX67851244 = hfSFjAHZHTgX85322725;     hfSFjAHZHTgX85322725 = hfSFjAHZHTgX90108225;     hfSFjAHZHTgX90108225 = hfSFjAHZHTgX40811234;     hfSFjAHZHTgX40811234 = hfSFjAHZHTgX15701764;     hfSFjAHZHTgX15701764 = hfSFjAHZHTgX21305479;     hfSFjAHZHTgX21305479 = hfSFjAHZHTgX44653059;     hfSFjAHZHTgX44653059 = hfSFjAHZHTgX29826429;     hfSFjAHZHTgX29826429 = hfSFjAHZHTgX21028890;     hfSFjAHZHTgX21028890 = hfSFjAHZHTgX46428852;     hfSFjAHZHTgX46428852 = hfSFjAHZHTgX1653585;     hfSFjAHZHTgX1653585 = hfSFjAHZHTgX5662227;     hfSFjAHZHTgX5662227 = hfSFjAHZHTgX40557428;     hfSFjAHZHTgX40557428 = hfSFjAHZHTgX95630776;     hfSFjAHZHTgX95630776 = hfSFjAHZHTgX80348831;     hfSFjAHZHTgX80348831 = hfSFjAHZHTgX89942008;     hfSFjAHZHTgX89942008 = hfSFjAHZHTgX31334863;     hfSFjAHZHTgX31334863 = hfSFjAHZHTgX73383017;     hfSFjAHZHTgX73383017 = hfSFjAHZHTgX32895586;     hfSFjAHZHTgX32895586 = hfSFjAHZHTgX34899598;     hfSFjAHZHTgX34899598 = hfSFjAHZHTgX97435227;     hfSFjAHZHTgX97435227 = hfSFjAHZHTgX68461371;     hfSFjAHZHTgX68461371 = hfSFjAHZHTgX56438675;     hfSFjAHZHTgX56438675 = hfSFjAHZHTgX72340368;     hfSFjAHZHTgX72340368 = hfSFjAHZHTgX70571743;     hfSFjAHZHTgX70571743 = hfSFjAHZHTgX19707692;     hfSFjAHZHTgX19707692 = hfSFjAHZHTgX68675308;     hfSFjAHZHTgX68675308 = hfSFjAHZHTgX60784089;     hfSFjAHZHTgX60784089 = hfSFjAHZHTgX11091544;     hfSFjAHZHTgX11091544 = hfSFjAHZHTgX8329309;     hfSFjAHZHTgX8329309 = hfSFjAHZHTgX81330486;     hfSFjAHZHTgX81330486 = hfSFjAHZHTgX89230758;     hfSFjAHZHTgX89230758 = hfSFjAHZHTgX25620939;     hfSFjAHZHTgX25620939 = hfSFjAHZHTgX67093933;     hfSFjAHZHTgX67093933 = hfSFjAHZHTgX33073286;     hfSFjAHZHTgX33073286 = hfSFjAHZHTgX85218801;     hfSFjAHZHTgX85218801 = hfSFjAHZHTgX252410;     hfSFjAHZHTgX252410 = hfSFjAHZHTgX54596829;     hfSFjAHZHTgX54596829 = hfSFjAHZHTgX88681698;     hfSFjAHZHTgX88681698 = hfSFjAHZHTgX1475672;     hfSFjAHZHTgX1475672 = hfSFjAHZHTgX83691091;     hfSFjAHZHTgX83691091 = hfSFjAHZHTgX93539663;     hfSFjAHZHTgX93539663 = hfSFjAHZHTgX11514992;     hfSFjAHZHTgX11514992 = hfSFjAHZHTgX34497651;     hfSFjAHZHTgX34497651 = hfSFjAHZHTgX53432692;     hfSFjAHZHTgX53432692 = hfSFjAHZHTgX12828402;     hfSFjAHZHTgX12828402 = hfSFjAHZHTgX42206562;     hfSFjAHZHTgX42206562 = hfSFjAHZHTgX30067355;     hfSFjAHZHTgX30067355 = hfSFjAHZHTgX84215734;     hfSFjAHZHTgX84215734 = hfSFjAHZHTgX8382443;     hfSFjAHZHTgX8382443 = hfSFjAHZHTgX93149418;     hfSFjAHZHTgX93149418 = hfSFjAHZHTgX42510130;     hfSFjAHZHTgX42510130 = hfSFjAHZHTgX85296245;     hfSFjAHZHTgX85296245 = hfSFjAHZHTgX26817090;     hfSFjAHZHTgX26817090 = hfSFjAHZHTgX54806873;     hfSFjAHZHTgX54806873 = hfSFjAHZHTgX99389872;     hfSFjAHZHTgX99389872 = hfSFjAHZHTgX28884051;     hfSFjAHZHTgX28884051 = hfSFjAHZHTgX17767857;     hfSFjAHZHTgX17767857 = hfSFjAHZHTgX70239490;     hfSFjAHZHTgX70239490 = hfSFjAHZHTgX95994071;     hfSFjAHZHTgX95994071 = hfSFjAHZHTgX52630171;     hfSFjAHZHTgX52630171 = hfSFjAHZHTgX83868970;     hfSFjAHZHTgX83868970 = hfSFjAHZHTgX18734886;     hfSFjAHZHTgX18734886 = hfSFjAHZHTgX55676736;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void mMGubjkOgBraVC38069137() {     long OMFaxVWdCEvt45803045 = -919060817;    long OMFaxVWdCEvt46368813 = -658844159;    long OMFaxVWdCEvt16294019 = 99856623;    long OMFaxVWdCEvt74503827 = -305717658;    long OMFaxVWdCEvt50421913 = -133225004;    long OMFaxVWdCEvt8213049 = -204500702;    long OMFaxVWdCEvt83725809 = -691115134;    long OMFaxVWdCEvt55350244 = -749862158;    long OMFaxVWdCEvt18185128 = -163774270;    long OMFaxVWdCEvt29604325 = -738160019;    long OMFaxVWdCEvt85567813 = -62801105;    long OMFaxVWdCEvt67563097 = 83705431;    long OMFaxVWdCEvt35569766 = -169384652;    long OMFaxVWdCEvt45841444 = -371750709;    long OMFaxVWdCEvt85411998 = -143769685;    long OMFaxVWdCEvt43515777 = -492395430;    long OMFaxVWdCEvt44886710 = -626168476;    long OMFaxVWdCEvt91897239 = -590336861;    long OMFaxVWdCEvt51275026 = 58277043;    long OMFaxVWdCEvt62732311 = -805626404;    long OMFaxVWdCEvt92305864 = -674624987;    long OMFaxVWdCEvt20862733 = -66117838;    long OMFaxVWdCEvt61582569 = -979435993;    long OMFaxVWdCEvt31287190 = -304744730;    long OMFaxVWdCEvt79429069 = -556668607;    long OMFaxVWdCEvt99717467 = -740716070;    long OMFaxVWdCEvt77053611 = -389011450;    long OMFaxVWdCEvt41661003 = -440207810;    long OMFaxVWdCEvt43972987 = -854868967;    long OMFaxVWdCEvt73487212 = 53528332;    long OMFaxVWdCEvt68027968 = -307102649;    long OMFaxVWdCEvt97691365 = -963523910;    long OMFaxVWdCEvt33453322 = -202181824;    long OMFaxVWdCEvt39731792 = -168598599;    long OMFaxVWdCEvt53788366 = -663366136;    long OMFaxVWdCEvt14947695 = -539637260;    long OMFaxVWdCEvt52475670 = -64707381;    long OMFaxVWdCEvt92208527 = -505400994;    long OMFaxVWdCEvt95855742 = 48711692;    long OMFaxVWdCEvt34620367 = -162099273;    long OMFaxVWdCEvt54510907 = -825918541;    long OMFaxVWdCEvt70346226 = -608871922;    long OMFaxVWdCEvt81122320 = -194900363;    long OMFaxVWdCEvt75315000 = -228186271;    long OMFaxVWdCEvt21790847 = -519870309;    long OMFaxVWdCEvt41467883 = -651929482;    long OMFaxVWdCEvt26852142 = 11541894;    long OMFaxVWdCEvt92040043 = -559777834;    long OMFaxVWdCEvt33580881 = -259566044;    long OMFaxVWdCEvt69837833 = -369534351;    long OMFaxVWdCEvt24996301 = -136924417;    long OMFaxVWdCEvt24121939 = -761004476;    long OMFaxVWdCEvt39394463 = -557608595;    long OMFaxVWdCEvt84241924 = 56751481;    long OMFaxVWdCEvt45763273 = -952316639;    long OMFaxVWdCEvt24940313 = -752942979;    long OMFaxVWdCEvt84786244 = -679408167;    long OMFaxVWdCEvt85006829 = -595398647;    long OMFaxVWdCEvt95074758 = -749049052;    long OMFaxVWdCEvt50704445 = -392508935;    long OMFaxVWdCEvt31159438 = -815489253;    long OMFaxVWdCEvt42064807 = -150907325;    long OMFaxVWdCEvt11377258 = -894993191;    long OMFaxVWdCEvt44697915 = -117302603;    long OMFaxVWdCEvt61576356 = -331057370;    long OMFaxVWdCEvt87876448 = -99277196;    long OMFaxVWdCEvt34109776 = -714112745;    long OMFaxVWdCEvt95837974 = 99213947;    long OMFaxVWdCEvt92053078 = -708384573;    long OMFaxVWdCEvt70464304 = -604132426;    long OMFaxVWdCEvt91040106 = -327688050;    long OMFaxVWdCEvt52678183 = -20767483;    long OMFaxVWdCEvt96041496 = -539048553;    long OMFaxVWdCEvt16654660 = -779623684;    long OMFaxVWdCEvt8221404 = -979707863;    long OMFaxVWdCEvt21959638 = 34246935;    long OMFaxVWdCEvt39740413 = -871217476;    long OMFaxVWdCEvt86267568 = -651249722;    long OMFaxVWdCEvt9496344 = -784874421;    long OMFaxVWdCEvt37961186 = -904739125;    long OMFaxVWdCEvt72865325 = -652257965;    long OMFaxVWdCEvt85013567 = -829233617;    long OMFaxVWdCEvt8080123 = -80641767;    long OMFaxVWdCEvt74135153 = -385334616;    long OMFaxVWdCEvt48490911 = -809547252;    long OMFaxVWdCEvt43906030 = -546098174;    long OMFaxVWdCEvt58296902 = -305915315;    long OMFaxVWdCEvt49211397 = -158933305;    long OMFaxVWdCEvt93968519 = -216281961;    long OMFaxVWdCEvt28848054 = -910423158;    long OMFaxVWdCEvt30161450 = -860229094;    long OMFaxVWdCEvt67468840 = -469308734;    long OMFaxVWdCEvt97133768 = -756351942;    long OMFaxVWdCEvt45151298 = -558779374;    long OMFaxVWdCEvt3460930 = -346610021;    long OMFaxVWdCEvt12446101 = -575011217;    long OMFaxVWdCEvt58968969 = -713878732;    long OMFaxVWdCEvt36424405 = 22402239;    long OMFaxVWdCEvt13738644 = -897128901;    long OMFaxVWdCEvt33914398 = -919060817;     OMFaxVWdCEvt45803045 = OMFaxVWdCEvt46368813;     OMFaxVWdCEvt46368813 = OMFaxVWdCEvt16294019;     OMFaxVWdCEvt16294019 = OMFaxVWdCEvt74503827;     OMFaxVWdCEvt74503827 = OMFaxVWdCEvt50421913;     OMFaxVWdCEvt50421913 = OMFaxVWdCEvt8213049;     OMFaxVWdCEvt8213049 = OMFaxVWdCEvt83725809;     OMFaxVWdCEvt83725809 = OMFaxVWdCEvt55350244;     OMFaxVWdCEvt55350244 = OMFaxVWdCEvt18185128;     OMFaxVWdCEvt18185128 = OMFaxVWdCEvt29604325;     OMFaxVWdCEvt29604325 = OMFaxVWdCEvt85567813;     OMFaxVWdCEvt85567813 = OMFaxVWdCEvt67563097;     OMFaxVWdCEvt67563097 = OMFaxVWdCEvt35569766;     OMFaxVWdCEvt35569766 = OMFaxVWdCEvt45841444;     OMFaxVWdCEvt45841444 = OMFaxVWdCEvt85411998;     OMFaxVWdCEvt85411998 = OMFaxVWdCEvt43515777;     OMFaxVWdCEvt43515777 = OMFaxVWdCEvt44886710;     OMFaxVWdCEvt44886710 = OMFaxVWdCEvt91897239;     OMFaxVWdCEvt91897239 = OMFaxVWdCEvt51275026;     OMFaxVWdCEvt51275026 = OMFaxVWdCEvt62732311;     OMFaxVWdCEvt62732311 = OMFaxVWdCEvt92305864;     OMFaxVWdCEvt92305864 = OMFaxVWdCEvt20862733;     OMFaxVWdCEvt20862733 = OMFaxVWdCEvt61582569;     OMFaxVWdCEvt61582569 = OMFaxVWdCEvt31287190;     OMFaxVWdCEvt31287190 = OMFaxVWdCEvt79429069;     OMFaxVWdCEvt79429069 = OMFaxVWdCEvt99717467;     OMFaxVWdCEvt99717467 = OMFaxVWdCEvt77053611;     OMFaxVWdCEvt77053611 = OMFaxVWdCEvt41661003;     OMFaxVWdCEvt41661003 = OMFaxVWdCEvt43972987;     OMFaxVWdCEvt43972987 = OMFaxVWdCEvt73487212;     OMFaxVWdCEvt73487212 = OMFaxVWdCEvt68027968;     OMFaxVWdCEvt68027968 = OMFaxVWdCEvt97691365;     OMFaxVWdCEvt97691365 = OMFaxVWdCEvt33453322;     OMFaxVWdCEvt33453322 = OMFaxVWdCEvt39731792;     OMFaxVWdCEvt39731792 = OMFaxVWdCEvt53788366;     OMFaxVWdCEvt53788366 = OMFaxVWdCEvt14947695;     OMFaxVWdCEvt14947695 = OMFaxVWdCEvt52475670;     OMFaxVWdCEvt52475670 = OMFaxVWdCEvt92208527;     OMFaxVWdCEvt92208527 = OMFaxVWdCEvt95855742;     OMFaxVWdCEvt95855742 = OMFaxVWdCEvt34620367;     OMFaxVWdCEvt34620367 = OMFaxVWdCEvt54510907;     OMFaxVWdCEvt54510907 = OMFaxVWdCEvt70346226;     OMFaxVWdCEvt70346226 = OMFaxVWdCEvt81122320;     OMFaxVWdCEvt81122320 = OMFaxVWdCEvt75315000;     OMFaxVWdCEvt75315000 = OMFaxVWdCEvt21790847;     OMFaxVWdCEvt21790847 = OMFaxVWdCEvt41467883;     OMFaxVWdCEvt41467883 = OMFaxVWdCEvt26852142;     OMFaxVWdCEvt26852142 = OMFaxVWdCEvt92040043;     OMFaxVWdCEvt92040043 = OMFaxVWdCEvt33580881;     OMFaxVWdCEvt33580881 = OMFaxVWdCEvt69837833;     OMFaxVWdCEvt69837833 = OMFaxVWdCEvt24996301;     OMFaxVWdCEvt24996301 = OMFaxVWdCEvt24121939;     OMFaxVWdCEvt24121939 = OMFaxVWdCEvt39394463;     OMFaxVWdCEvt39394463 = OMFaxVWdCEvt84241924;     OMFaxVWdCEvt84241924 = OMFaxVWdCEvt45763273;     OMFaxVWdCEvt45763273 = OMFaxVWdCEvt24940313;     OMFaxVWdCEvt24940313 = OMFaxVWdCEvt84786244;     OMFaxVWdCEvt84786244 = OMFaxVWdCEvt85006829;     OMFaxVWdCEvt85006829 = OMFaxVWdCEvt95074758;     OMFaxVWdCEvt95074758 = OMFaxVWdCEvt50704445;     OMFaxVWdCEvt50704445 = OMFaxVWdCEvt31159438;     OMFaxVWdCEvt31159438 = OMFaxVWdCEvt42064807;     OMFaxVWdCEvt42064807 = OMFaxVWdCEvt11377258;     OMFaxVWdCEvt11377258 = OMFaxVWdCEvt44697915;     OMFaxVWdCEvt44697915 = OMFaxVWdCEvt61576356;     OMFaxVWdCEvt61576356 = OMFaxVWdCEvt87876448;     OMFaxVWdCEvt87876448 = OMFaxVWdCEvt34109776;     OMFaxVWdCEvt34109776 = OMFaxVWdCEvt95837974;     OMFaxVWdCEvt95837974 = OMFaxVWdCEvt92053078;     OMFaxVWdCEvt92053078 = OMFaxVWdCEvt70464304;     OMFaxVWdCEvt70464304 = OMFaxVWdCEvt91040106;     OMFaxVWdCEvt91040106 = OMFaxVWdCEvt52678183;     OMFaxVWdCEvt52678183 = OMFaxVWdCEvt96041496;     OMFaxVWdCEvt96041496 = OMFaxVWdCEvt16654660;     OMFaxVWdCEvt16654660 = OMFaxVWdCEvt8221404;     OMFaxVWdCEvt8221404 = OMFaxVWdCEvt21959638;     OMFaxVWdCEvt21959638 = OMFaxVWdCEvt39740413;     OMFaxVWdCEvt39740413 = OMFaxVWdCEvt86267568;     OMFaxVWdCEvt86267568 = OMFaxVWdCEvt9496344;     OMFaxVWdCEvt9496344 = OMFaxVWdCEvt37961186;     OMFaxVWdCEvt37961186 = OMFaxVWdCEvt72865325;     OMFaxVWdCEvt72865325 = OMFaxVWdCEvt85013567;     OMFaxVWdCEvt85013567 = OMFaxVWdCEvt8080123;     OMFaxVWdCEvt8080123 = OMFaxVWdCEvt74135153;     OMFaxVWdCEvt74135153 = OMFaxVWdCEvt48490911;     OMFaxVWdCEvt48490911 = OMFaxVWdCEvt43906030;     OMFaxVWdCEvt43906030 = OMFaxVWdCEvt58296902;     OMFaxVWdCEvt58296902 = OMFaxVWdCEvt49211397;     OMFaxVWdCEvt49211397 = OMFaxVWdCEvt93968519;     OMFaxVWdCEvt93968519 = OMFaxVWdCEvt28848054;     OMFaxVWdCEvt28848054 = OMFaxVWdCEvt30161450;     OMFaxVWdCEvt30161450 = OMFaxVWdCEvt67468840;     OMFaxVWdCEvt67468840 = OMFaxVWdCEvt97133768;     OMFaxVWdCEvt97133768 = OMFaxVWdCEvt45151298;     OMFaxVWdCEvt45151298 = OMFaxVWdCEvt3460930;     OMFaxVWdCEvt3460930 = OMFaxVWdCEvt12446101;     OMFaxVWdCEvt12446101 = OMFaxVWdCEvt58968969;     OMFaxVWdCEvt58968969 = OMFaxVWdCEvt36424405;     OMFaxVWdCEvt36424405 = OMFaxVWdCEvt13738644;     OMFaxVWdCEvt13738644 = OMFaxVWdCEvt33914398;     OMFaxVWdCEvt33914398 = OMFaxVWdCEvt45803045;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void PsAUHvVZDLRqBS34252297() {     long DmJZzktrnVrK5399142 = -47817194;    long DmJZzktrnVrK47874663 = -468999544;    long DmJZzktrnVrK53295407 = 25715701;    long DmJZzktrnVrK70379586 = -78328536;    long DmJZzktrnVrK61715139 = -33732031;    long DmJZzktrnVrK5890170 = -62760376;    long DmJZzktrnVrK81084292 = -20832720;    long DmJZzktrnVrK6175529 = -4073533;    long DmJZzktrnVrK31998571 = -696446770;    long DmJZzktrnVrK12628841 = -679418872;    long DmJZzktrnVrK10862746 = -464343544;    long DmJZzktrnVrK2234299 = -11315818;    long DmJZzktrnVrK6324330 = -75563171;    long DmJZzktrnVrK4215283 = -275909056;    long DmJZzktrnVrK82719804 = -936296206;    long DmJZzktrnVrK40270031 = -297768321;    long DmJZzktrnVrK80847813 = -554384757;    long DmJZzktrnVrK56565570 = -959672966;    long DmJZzktrnVrK31717229 = -80842586;    long DmJZzktrnVrK42649420 = -368035057;    long DmJZzktrnVrK72766983 = -507645812;    long DmJZzktrnVrK89352331 = 41480284;    long DmJZzktrnVrK53774394 = -743731072;    long DmJZzktrnVrK96017428 = -969082967;    long DmJZzktrnVrK55407074 = -12806197;    long DmJZzktrnVrK94132374 = -875333541;    long DmJZzktrnVrK90393681 = -838491448;    long DmJZzktrnVrK6772172 = 38410600;    long DmJZzktrnVrK93757330 = -644461582;    long DmJZzktrnVrK11960679 = 6545089;    long DmJZzktrnVrK92942286 = -952321977;    long DmJZzktrnVrK40456626 = -280741907;    long DmJZzktrnVrK82535360 = -182128696;    long DmJZzktrnVrK22256234 = -770482531;    long DmJZzktrnVrK58725727 = -311576122;    long DmJZzktrnVrK93537590 = -851293842;    long DmJZzktrnVrK43107347 = -357486015;    long DmJZzktrnVrK90568864 = -449853383;    long DmJZzktrnVrK14873686 = -769994825;    long DmJZzktrnVrK7446022 = -435980221;    long DmJZzktrnVrK12728721 = -194580137;    long DmJZzktrnVrK40425408 = -613813341;    long DmJZzktrnVrK22001562 = 71654808;    long DmJZzktrnVrK49554505 = -652101009;    long DmJZzktrnVrK22779162 = 33811622;    long DmJZzktrnVrK6261012 = -894873641;    long DmJZzktrnVrK32340864 = -980313773;    long DmJZzktrnVrK38736438 = -892531062;    long DmJZzktrnVrK72970528 = -543503663;    long DmJZzktrnVrK85005226 = -690786812;    long DmJZzktrnVrK75482551 = 76967359;    long DmJZzktrnVrK30707092 = -732247731;    long DmJZzktrnVrK14809978 = -797557049;    long DmJZzktrnVrK57516448 = -203417474;    long DmJZzktrnVrK61485314 = -916250726;    long DmJZzktrnVrK16046811 = 10702522;    long DmJZzktrnVrK94100268 = -725268473;    long DmJZzktrnVrK57277978 = -5201333;    long DmJZzktrnVrK14972512 = 34477661;    long DmJZzktrnVrK67582764 = -158398491;    long DmJZzktrnVrK15496488 = -224268929;    long DmJZzktrnVrK74312120 = 40756680;    long DmJZzktrnVrK12418199 = -359611951;    long DmJZzktrnVrK20037893 = -602991860;    long DmJZzktrnVrK19686554 = -727096896;    long DmJZzktrnVrK70406119 = -83601638;    long DmJZzktrnVrK19698939 = -829187122;    long DmJZzktrnVrK84068095 = -305080641;    long DmJZzktrnVrK45489556 = -964332935;    long DmJZzktrnVrK89182213 = 14997635;    long DmJZzktrnVrK97162683 = -940282306;    long DmJZzktrnVrK90278948 = -4531374;    long DmJZzktrnVrK41691885 = -89678141;    long DmJZzktrnVrK24271208 = -644862366;    long DmJZzktrnVrK29920700 = -73454920;    long DmJZzktrnVrK32341575 = -893832472;    long DmJZzktrnVrK67350769 = 69825475;    long DmJZzktrnVrK4219889 = 8369937;    long DmJZzktrnVrK73238266 = -902894589;    long DmJZzktrnVrK49146062 = -117932556;    long DmJZzktrnVrK61791510 = -895019769;    long DmJZzktrnVrK51657244 = -945960386;    long DmJZzktrnVrK33801644 = -418085738;    long DmJZzktrnVrK8752104 = -953674771;    long DmJZzktrnVrK36478128 = 29577730;    long DmJZzktrnVrK62235195 = -120074247;    long DmJZzktrnVrK25646648 = -483184859;    long DmJZzktrnVrK25018913 = -978711223;    long DmJZzktrnVrK60770920 = -854231805;    long DmJZzktrnVrK42678916 = -222278644;    long DmJZzktrnVrK99437321 = -26025370;    long DmJZzktrnVrK85829369 = -252284683;    long DmJZzktrnVrK75596353 = -384331045;    long DmJZzktrnVrK47290921 = -511596335;    long DmJZzktrnVrK91949533 = -111711293;    long DmJZzktrnVrK38416600 = -135336818;    long DmJZzktrnVrK28007210 = -154201390;    long DmJZzktrnVrK1963670 = -325353333;    long DmJZzktrnVrK29867952 = -925004114;    long DmJZzktrnVrK52373042 = -47817194;     DmJZzktrnVrK5399142 = DmJZzktrnVrK47874663;     DmJZzktrnVrK47874663 = DmJZzktrnVrK53295407;     DmJZzktrnVrK53295407 = DmJZzktrnVrK70379586;     DmJZzktrnVrK70379586 = DmJZzktrnVrK61715139;     DmJZzktrnVrK61715139 = DmJZzktrnVrK5890170;     DmJZzktrnVrK5890170 = DmJZzktrnVrK81084292;     DmJZzktrnVrK81084292 = DmJZzktrnVrK6175529;     DmJZzktrnVrK6175529 = DmJZzktrnVrK31998571;     DmJZzktrnVrK31998571 = DmJZzktrnVrK12628841;     DmJZzktrnVrK12628841 = DmJZzktrnVrK10862746;     DmJZzktrnVrK10862746 = DmJZzktrnVrK2234299;     DmJZzktrnVrK2234299 = DmJZzktrnVrK6324330;     DmJZzktrnVrK6324330 = DmJZzktrnVrK4215283;     DmJZzktrnVrK4215283 = DmJZzktrnVrK82719804;     DmJZzktrnVrK82719804 = DmJZzktrnVrK40270031;     DmJZzktrnVrK40270031 = DmJZzktrnVrK80847813;     DmJZzktrnVrK80847813 = DmJZzktrnVrK56565570;     DmJZzktrnVrK56565570 = DmJZzktrnVrK31717229;     DmJZzktrnVrK31717229 = DmJZzktrnVrK42649420;     DmJZzktrnVrK42649420 = DmJZzktrnVrK72766983;     DmJZzktrnVrK72766983 = DmJZzktrnVrK89352331;     DmJZzktrnVrK89352331 = DmJZzktrnVrK53774394;     DmJZzktrnVrK53774394 = DmJZzktrnVrK96017428;     DmJZzktrnVrK96017428 = DmJZzktrnVrK55407074;     DmJZzktrnVrK55407074 = DmJZzktrnVrK94132374;     DmJZzktrnVrK94132374 = DmJZzktrnVrK90393681;     DmJZzktrnVrK90393681 = DmJZzktrnVrK6772172;     DmJZzktrnVrK6772172 = DmJZzktrnVrK93757330;     DmJZzktrnVrK93757330 = DmJZzktrnVrK11960679;     DmJZzktrnVrK11960679 = DmJZzktrnVrK92942286;     DmJZzktrnVrK92942286 = DmJZzktrnVrK40456626;     DmJZzktrnVrK40456626 = DmJZzktrnVrK82535360;     DmJZzktrnVrK82535360 = DmJZzktrnVrK22256234;     DmJZzktrnVrK22256234 = DmJZzktrnVrK58725727;     DmJZzktrnVrK58725727 = DmJZzktrnVrK93537590;     DmJZzktrnVrK93537590 = DmJZzktrnVrK43107347;     DmJZzktrnVrK43107347 = DmJZzktrnVrK90568864;     DmJZzktrnVrK90568864 = DmJZzktrnVrK14873686;     DmJZzktrnVrK14873686 = DmJZzktrnVrK7446022;     DmJZzktrnVrK7446022 = DmJZzktrnVrK12728721;     DmJZzktrnVrK12728721 = DmJZzktrnVrK40425408;     DmJZzktrnVrK40425408 = DmJZzktrnVrK22001562;     DmJZzktrnVrK22001562 = DmJZzktrnVrK49554505;     DmJZzktrnVrK49554505 = DmJZzktrnVrK22779162;     DmJZzktrnVrK22779162 = DmJZzktrnVrK6261012;     DmJZzktrnVrK6261012 = DmJZzktrnVrK32340864;     DmJZzktrnVrK32340864 = DmJZzktrnVrK38736438;     DmJZzktrnVrK38736438 = DmJZzktrnVrK72970528;     DmJZzktrnVrK72970528 = DmJZzktrnVrK85005226;     DmJZzktrnVrK85005226 = DmJZzktrnVrK75482551;     DmJZzktrnVrK75482551 = DmJZzktrnVrK30707092;     DmJZzktrnVrK30707092 = DmJZzktrnVrK14809978;     DmJZzktrnVrK14809978 = DmJZzktrnVrK57516448;     DmJZzktrnVrK57516448 = DmJZzktrnVrK61485314;     DmJZzktrnVrK61485314 = DmJZzktrnVrK16046811;     DmJZzktrnVrK16046811 = DmJZzktrnVrK94100268;     DmJZzktrnVrK94100268 = DmJZzktrnVrK57277978;     DmJZzktrnVrK57277978 = DmJZzktrnVrK14972512;     DmJZzktrnVrK14972512 = DmJZzktrnVrK67582764;     DmJZzktrnVrK67582764 = DmJZzktrnVrK15496488;     DmJZzktrnVrK15496488 = DmJZzktrnVrK74312120;     DmJZzktrnVrK74312120 = DmJZzktrnVrK12418199;     DmJZzktrnVrK12418199 = DmJZzktrnVrK20037893;     DmJZzktrnVrK20037893 = DmJZzktrnVrK19686554;     DmJZzktrnVrK19686554 = DmJZzktrnVrK70406119;     DmJZzktrnVrK70406119 = DmJZzktrnVrK19698939;     DmJZzktrnVrK19698939 = DmJZzktrnVrK84068095;     DmJZzktrnVrK84068095 = DmJZzktrnVrK45489556;     DmJZzktrnVrK45489556 = DmJZzktrnVrK89182213;     DmJZzktrnVrK89182213 = DmJZzktrnVrK97162683;     DmJZzktrnVrK97162683 = DmJZzktrnVrK90278948;     DmJZzktrnVrK90278948 = DmJZzktrnVrK41691885;     DmJZzktrnVrK41691885 = DmJZzktrnVrK24271208;     DmJZzktrnVrK24271208 = DmJZzktrnVrK29920700;     DmJZzktrnVrK29920700 = DmJZzktrnVrK32341575;     DmJZzktrnVrK32341575 = DmJZzktrnVrK67350769;     DmJZzktrnVrK67350769 = DmJZzktrnVrK4219889;     DmJZzktrnVrK4219889 = DmJZzktrnVrK73238266;     DmJZzktrnVrK73238266 = DmJZzktrnVrK49146062;     DmJZzktrnVrK49146062 = DmJZzktrnVrK61791510;     DmJZzktrnVrK61791510 = DmJZzktrnVrK51657244;     DmJZzktrnVrK51657244 = DmJZzktrnVrK33801644;     DmJZzktrnVrK33801644 = DmJZzktrnVrK8752104;     DmJZzktrnVrK8752104 = DmJZzktrnVrK36478128;     DmJZzktrnVrK36478128 = DmJZzktrnVrK62235195;     DmJZzktrnVrK62235195 = DmJZzktrnVrK25646648;     DmJZzktrnVrK25646648 = DmJZzktrnVrK25018913;     DmJZzktrnVrK25018913 = DmJZzktrnVrK60770920;     DmJZzktrnVrK60770920 = DmJZzktrnVrK42678916;     DmJZzktrnVrK42678916 = DmJZzktrnVrK99437321;     DmJZzktrnVrK99437321 = DmJZzktrnVrK85829369;     DmJZzktrnVrK85829369 = DmJZzktrnVrK75596353;     DmJZzktrnVrK75596353 = DmJZzktrnVrK47290921;     DmJZzktrnVrK47290921 = DmJZzktrnVrK91949533;     DmJZzktrnVrK91949533 = DmJZzktrnVrK38416600;     DmJZzktrnVrK38416600 = DmJZzktrnVrK28007210;     DmJZzktrnVrK28007210 = DmJZzktrnVrK1963670;     DmJZzktrnVrK1963670 = DmJZzktrnVrK29867952;     DmJZzktrnVrK29867952 = DmJZzktrnVrK52373042;     DmJZzktrnVrK52373042 = DmJZzktrnVrK5399142;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void JJrFWqIXBdJJuV30435457() {     long wHWZGHfCOqkT64995238 = -276573571;    long wHWZGHfCOqkT49380512 = -279154929;    long wHWZGHfCOqkT90296794 = -48425222;    long wHWZGHfCOqkT66255344 = -950939413;    long wHWZGHfCOqkT73008365 = 65760942;    long wHWZGHfCOqkT3567291 = 78979951;    long wHWZGHfCOqkT78442775 = -450550306;    long wHWZGHfCOqkT57000812 = -358284908;    long wHWZGHfCOqkT45812015 = -129119269;    long wHWZGHfCOqkT95653355 = -620677726;    long wHWZGHfCOqkT36157677 = -865885984;    long wHWZGHfCOqkT36905501 = -106337067;    long wHWZGHfCOqkT77078892 = 18258311;    long wHWZGHfCOqkT62589121 = -180067403;    long wHWZGHfCOqkT80027609 = -628822728;    long wHWZGHfCOqkT37024285 = -103141212;    long wHWZGHfCOqkT16808918 = -482601037;    long wHWZGHfCOqkT21233901 = -229009070;    long wHWZGHfCOqkT12159432 = -219962216;    long wHWZGHfCOqkT22566530 = 69556290;    long wHWZGHfCOqkT53228101 = -340666636;    long wHWZGHfCOqkT57841930 = -950921594;    long wHWZGHfCOqkT45966219 = -508026151;    long wHWZGHfCOqkT60747667 = -533421204;    long wHWZGHfCOqkT31385079 = -568943787;    long wHWZGHfCOqkT88547281 = 90048988;    long wHWZGHfCOqkT3733753 = -187971445;    long wHWZGHfCOqkT71883341 = -582970990;    long wHWZGHfCOqkT43541673 = -434054197;    long wHWZGHfCOqkT50434145 = -40438153;    long wHWZGHfCOqkT17856605 = -497541305;    long wHWZGHfCOqkT83221886 = -697959904;    long wHWZGHfCOqkT31617399 = -162075569;    long wHWZGHfCOqkT4780677 = -272366462;    long wHWZGHfCOqkT63663088 = 40213893;    long wHWZGHfCOqkT72127487 = -62950424;    long wHWZGHfCOqkT33739025 = -650264650;    long wHWZGHfCOqkT88929202 = -394305773;    long wHWZGHfCOqkT33891629 = -488701342;    long wHWZGHfCOqkT80271675 = -709861169;    long wHWZGHfCOqkT70946534 = -663241734;    long wHWZGHfCOqkT10504589 = -618754759;    long wHWZGHfCOqkT62880804 = -761790022;    long wHWZGHfCOqkT23794011 = 23984252;    long wHWZGHfCOqkT23767477 = -512506446;    long wHWZGHfCOqkT71054140 = -37817800;    long wHWZGHfCOqkT37829586 = -872169440;    long wHWZGHfCOqkT85432831 = -125284290;    long wHWZGHfCOqkT12360176 = -827441283;    long wHWZGHfCOqkT172619 = 87960727;    long wHWZGHfCOqkT25968802 = -809140865;    long wHWZGHfCOqkT37292245 = -703490986;    long wHWZGHfCOqkT90225491 = 62494498;    long wHWZGHfCOqkT30790971 = -463586429;    long wHWZGHfCOqkT77207356 = -880184813;    long wHWZGHfCOqkT7153309 = -325651978;    long wHWZGHfCOqkT3414294 = -771128779;    long wHWZGHfCOqkT29549128 = -515004019;    long wHWZGHfCOqkT34870266 = -281995627;    long wHWZGHfCOqkT84461083 = 75711953;    long wHWZGHfCOqkT99833537 = -733048605;    long wHWZGHfCOqkT6559435 = -867579316;    long wHWZGHfCOqkT13459140 = -924230712;    long wHWZGHfCOqkT95377869 = 11318883;    long wHWZGHfCOqkT77796750 = -23136421;    long wHWZGHfCOqkT52935791 = -67926080;    long wHWZGHfCOqkT5288102 = -944261499;    long wHWZGHfCOqkT72298216 = -709375228;    long wHWZGHfCOqkT98926033 = -120281297;    long wHWZGHfCOqkT7900123 = -465872304;    long wHWZGHfCOqkT3285261 = -452876563;    long wHWZGHfCOqkT27879715 = 11704736;    long wHWZGHfCOqkT87342272 = -740307729;    long wHWZGHfCOqkT31887756 = -510101048;    long wHWZGHfCOqkT51619995 = -267201976;    long wHWZGHfCOqkT42723513 = -721911878;    long wHWZGHfCOqkT94961125 = -89131573;    long wHWZGHfCOqkT22172209 = -432010403;    long wHWZGHfCOqkT36980190 = 79085242;    long wHWZGHfCOqkT60330938 = -431125987;    long wHWZGHfCOqkT50717695 = -37781572;    long wHWZGHfCOqkT18300921 = 37312845;    long wHWZGHfCOqkT59523165 = -755529708;    long wHWZGHfCOqkT43369055 = -422014925;    long wHWZGHfCOqkT24465344 = -231297289;    long wHWZGHfCOqkT80564360 = -794050319;    long wHWZGHfCOqkT92996394 = -660454402;    long wHWZGHfCOqkT826429 = -698489140;    long wHWZGHfCOqkT27573321 = -392181649;    long wHWZGHfCOqkT56509779 = -634134130;    long wHWZGHfCOqkT68713194 = -291821646;    long wHWZGHfCOqkT4189898 = -35260632;    long wHWZGHfCOqkT54058937 = -12310147;    long wHWZGHfCOqkT49430545 = -464413295;    long wHWZGHfCOqkT80438137 = -976812565;    long wHWZGHfCOqkT64387100 = -795662418;    long wHWZGHfCOqkT97045449 = -694524048;    long wHWZGHfCOqkT67502935 = -673108905;    long wHWZGHfCOqkT45997260 = -952879328;    long wHWZGHfCOqkT70831686 = -276573571;     wHWZGHfCOqkT64995238 = wHWZGHfCOqkT49380512;     wHWZGHfCOqkT49380512 = wHWZGHfCOqkT90296794;     wHWZGHfCOqkT90296794 = wHWZGHfCOqkT66255344;     wHWZGHfCOqkT66255344 = wHWZGHfCOqkT73008365;     wHWZGHfCOqkT73008365 = wHWZGHfCOqkT3567291;     wHWZGHfCOqkT3567291 = wHWZGHfCOqkT78442775;     wHWZGHfCOqkT78442775 = wHWZGHfCOqkT57000812;     wHWZGHfCOqkT57000812 = wHWZGHfCOqkT45812015;     wHWZGHfCOqkT45812015 = wHWZGHfCOqkT95653355;     wHWZGHfCOqkT95653355 = wHWZGHfCOqkT36157677;     wHWZGHfCOqkT36157677 = wHWZGHfCOqkT36905501;     wHWZGHfCOqkT36905501 = wHWZGHfCOqkT77078892;     wHWZGHfCOqkT77078892 = wHWZGHfCOqkT62589121;     wHWZGHfCOqkT62589121 = wHWZGHfCOqkT80027609;     wHWZGHfCOqkT80027609 = wHWZGHfCOqkT37024285;     wHWZGHfCOqkT37024285 = wHWZGHfCOqkT16808918;     wHWZGHfCOqkT16808918 = wHWZGHfCOqkT21233901;     wHWZGHfCOqkT21233901 = wHWZGHfCOqkT12159432;     wHWZGHfCOqkT12159432 = wHWZGHfCOqkT22566530;     wHWZGHfCOqkT22566530 = wHWZGHfCOqkT53228101;     wHWZGHfCOqkT53228101 = wHWZGHfCOqkT57841930;     wHWZGHfCOqkT57841930 = wHWZGHfCOqkT45966219;     wHWZGHfCOqkT45966219 = wHWZGHfCOqkT60747667;     wHWZGHfCOqkT60747667 = wHWZGHfCOqkT31385079;     wHWZGHfCOqkT31385079 = wHWZGHfCOqkT88547281;     wHWZGHfCOqkT88547281 = wHWZGHfCOqkT3733753;     wHWZGHfCOqkT3733753 = wHWZGHfCOqkT71883341;     wHWZGHfCOqkT71883341 = wHWZGHfCOqkT43541673;     wHWZGHfCOqkT43541673 = wHWZGHfCOqkT50434145;     wHWZGHfCOqkT50434145 = wHWZGHfCOqkT17856605;     wHWZGHfCOqkT17856605 = wHWZGHfCOqkT83221886;     wHWZGHfCOqkT83221886 = wHWZGHfCOqkT31617399;     wHWZGHfCOqkT31617399 = wHWZGHfCOqkT4780677;     wHWZGHfCOqkT4780677 = wHWZGHfCOqkT63663088;     wHWZGHfCOqkT63663088 = wHWZGHfCOqkT72127487;     wHWZGHfCOqkT72127487 = wHWZGHfCOqkT33739025;     wHWZGHfCOqkT33739025 = wHWZGHfCOqkT88929202;     wHWZGHfCOqkT88929202 = wHWZGHfCOqkT33891629;     wHWZGHfCOqkT33891629 = wHWZGHfCOqkT80271675;     wHWZGHfCOqkT80271675 = wHWZGHfCOqkT70946534;     wHWZGHfCOqkT70946534 = wHWZGHfCOqkT10504589;     wHWZGHfCOqkT10504589 = wHWZGHfCOqkT62880804;     wHWZGHfCOqkT62880804 = wHWZGHfCOqkT23794011;     wHWZGHfCOqkT23794011 = wHWZGHfCOqkT23767477;     wHWZGHfCOqkT23767477 = wHWZGHfCOqkT71054140;     wHWZGHfCOqkT71054140 = wHWZGHfCOqkT37829586;     wHWZGHfCOqkT37829586 = wHWZGHfCOqkT85432831;     wHWZGHfCOqkT85432831 = wHWZGHfCOqkT12360176;     wHWZGHfCOqkT12360176 = wHWZGHfCOqkT172619;     wHWZGHfCOqkT172619 = wHWZGHfCOqkT25968802;     wHWZGHfCOqkT25968802 = wHWZGHfCOqkT37292245;     wHWZGHfCOqkT37292245 = wHWZGHfCOqkT90225491;     wHWZGHfCOqkT90225491 = wHWZGHfCOqkT30790971;     wHWZGHfCOqkT30790971 = wHWZGHfCOqkT77207356;     wHWZGHfCOqkT77207356 = wHWZGHfCOqkT7153309;     wHWZGHfCOqkT7153309 = wHWZGHfCOqkT3414294;     wHWZGHfCOqkT3414294 = wHWZGHfCOqkT29549128;     wHWZGHfCOqkT29549128 = wHWZGHfCOqkT34870266;     wHWZGHfCOqkT34870266 = wHWZGHfCOqkT84461083;     wHWZGHfCOqkT84461083 = wHWZGHfCOqkT99833537;     wHWZGHfCOqkT99833537 = wHWZGHfCOqkT6559435;     wHWZGHfCOqkT6559435 = wHWZGHfCOqkT13459140;     wHWZGHfCOqkT13459140 = wHWZGHfCOqkT95377869;     wHWZGHfCOqkT95377869 = wHWZGHfCOqkT77796750;     wHWZGHfCOqkT77796750 = wHWZGHfCOqkT52935791;     wHWZGHfCOqkT52935791 = wHWZGHfCOqkT5288102;     wHWZGHfCOqkT5288102 = wHWZGHfCOqkT72298216;     wHWZGHfCOqkT72298216 = wHWZGHfCOqkT98926033;     wHWZGHfCOqkT98926033 = wHWZGHfCOqkT7900123;     wHWZGHfCOqkT7900123 = wHWZGHfCOqkT3285261;     wHWZGHfCOqkT3285261 = wHWZGHfCOqkT27879715;     wHWZGHfCOqkT27879715 = wHWZGHfCOqkT87342272;     wHWZGHfCOqkT87342272 = wHWZGHfCOqkT31887756;     wHWZGHfCOqkT31887756 = wHWZGHfCOqkT51619995;     wHWZGHfCOqkT51619995 = wHWZGHfCOqkT42723513;     wHWZGHfCOqkT42723513 = wHWZGHfCOqkT94961125;     wHWZGHfCOqkT94961125 = wHWZGHfCOqkT22172209;     wHWZGHfCOqkT22172209 = wHWZGHfCOqkT36980190;     wHWZGHfCOqkT36980190 = wHWZGHfCOqkT60330938;     wHWZGHfCOqkT60330938 = wHWZGHfCOqkT50717695;     wHWZGHfCOqkT50717695 = wHWZGHfCOqkT18300921;     wHWZGHfCOqkT18300921 = wHWZGHfCOqkT59523165;     wHWZGHfCOqkT59523165 = wHWZGHfCOqkT43369055;     wHWZGHfCOqkT43369055 = wHWZGHfCOqkT24465344;     wHWZGHfCOqkT24465344 = wHWZGHfCOqkT80564360;     wHWZGHfCOqkT80564360 = wHWZGHfCOqkT92996394;     wHWZGHfCOqkT92996394 = wHWZGHfCOqkT826429;     wHWZGHfCOqkT826429 = wHWZGHfCOqkT27573321;     wHWZGHfCOqkT27573321 = wHWZGHfCOqkT56509779;     wHWZGHfCOqkT56509779 = wHWZGHfCOqkT68713194;     wHWZGHfCOqkT68713194 = wHWZGHfCOqkT4189898;     wHWZGHfCOqkT4189898 = wHWZGHfCOqkT54058937;     wHWZGHfCOqkT54058937 = wHWZGHfCOqkT49430545;     wHWZGHfCOqkT49430545 = wHWZGHfCOqkT80438137;     wHWZGHfCOqkT80438137 = wHWZGHfCOqkT64387100;     wHWZGHfCOqkT64387100 = wHWZGHfCOqkT97045449;     wHWZGHfCOqkT97045449 = wHWZGHfCOqkT67502935;     wHWZGHfCOqkT67502935 = wHWZGHfCOqkT45997260;     wHWZGHfCOqkT45997260 = wHWZGHfCOqkT70831686;     wHWZGHfCOqkT70831686 = wHWZGHfCOqkT64995238;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void KxRNAQBihtMYdl42980646() {     long dIUWmfvCDSwg84463408 = -689704783;    long dIUWmfvCDSwg2404377 = -825032925;    long dIUWmfvCDSwg7133787 = -800053837;    long dIUWmfvCDSwg84902493 = -767513676;    long dIUWmfvCDSwg73454881 = -560511474;    long dIUWmfvCDSwg29159365 = -911504817;    long dIUWmfvCDSwg23274654 = -893856536;    long dIUWmfvCDSwg22251046 = -452092874;    long dIUWmfvCDSwg6498813 = -857310648;    long dIUWmfvCDSwg73582078 = -626263771;    long dIUWmfvCDSwg90380940 = -198876284;    long dIUWmfvCDSwg40400114 = -105639772;    long dIUWmfvCDSwg67450552 = -406098966;    long dIUWmfvCDSwg71005161 = -722353129;    long dIUWmfvCDSwg40554071 = -926906519;    long dIUWmfvCDSwg3239935 = -566333146;    long dIUWmfvCDSwg22771031 = -654375718;    long dIUWmfvCDSwg45296653 = 20236212;    long dIUWmfvCDSwg11794312 = -597166977;    long dIUWmfvCDSwg3177832 = -647980166;    long dIUWmfvCDSwg65684173 = -946878962;    long dIUWmfvCDSwg72824013 = -362724807;    long dIUWmfvCDSwg14139225 = -805600769;    long dIUWmfvCDSwg78469336 = -169965195;    long dIUWmfvCDSwg42588568 = -863243897;    long dIUWmfvCDSwg93314742 = -695746230;    long dIUWmfvCDSwg87661883 = -953122376;    long dIUWmfvCDSwg22675016 = -746704269;    long dIUWmfvCDSwg85286630 = -447965343;    long dIUWmfvCDSwg35140999 = -131876847;    long dIUWmfvCDSwg47660690 = -362867398;    long dIUWmfvCDSwg22801197 = -162308923;    long dIUWmfvCDSwg43093502 = -717283335;    long dIUWmfvCDSwg63537183 = -576969668;    long dIUWmfvCDSwg3593424 = -22488913;    long dIUWmfvCDSwg8193425 = -366519032;    long dIUWmfvCDSwg2122476 = -77140725;    long dIUWmfvCDSwg30411677 = -471514588;    long dIUWmfvCDSwg1204954 = -953116167;    long dIUWmfvCDSwg1553412 = -706392266;    long dIUWmfvCDSwg12428592 = -73028030;    long dIUWmfvCDSwg22363722 = -857650985;    long dIUWmfvCDSwg34014046 = -709591819;    long dIUWmfvCDSwg7179549 = -425088409;    long dIUWmfvCDSwg3795889 = -789629409;    long dIUWmfvCDSwg25515268 = -575149222;    long dIUWmfvCDSwg19819466 = -785862763;    long dIUWmfvCDSwg85588661 = -308571605;    long dIUWmfvCDSwg53495767 = -841380521;    long dIUWmfvCDSwg41070961 = -773051618;    long dIUWmfvCDSwg404371 = -115505796;    long dIUWmfvCDSwg53741105 = 19156154;    long dIUWmfvCDSwg60050638 = -713614463;    long dIUWmfvCDSwg3721000 = -458180066;    long dIUWmfvCDSwg77296472 = -654743448;    long dIUWmfvCDSwg11639396 = -226979977;    long dIUWmfvCDSwg88265151 = 80567844;    long dIUWmfvCDSwg28664451 = -530088642;    long dIUWmfvCDSwg42313925 = -904269780;    long dIUWmfvCDSwg80140138 = -864765245;    long dIUWmfvCDSwg41497481 = -958382441;    long dIUWmfvCDSwg599639 = -47152267;    long dIUWmfvCDSwg36964416 = 95872468;    long dIUWmfvCDSwg71357813 = -625433801;    long dIUWmfvCDSwg25921388 = -163396374;    long dIUWmfvCDSwg67579743 = 63432638;    long dIUWmfvCDSwg97306611 = -388356437;    long dIUWmfvCDSwg3913369 = -829129298;    long dIUWmfvCDSwg67411737 = -599864216;    long dIUWmfvCDSwg32360647 = -460387487;    long dIUWmfvCDSwg1117459 = -389192422;    long dIUWmfvCDSwg92359353 = -82861130;    long dIUWmfvCDSwg44091699 = -26647622;    long dIUWmfvCDSwg10240900 = -890774712;    long dIUWmfvCDSwg90749240 = -474952137;    long dIUWmfvCDSwg43320452 = 10772023;    long dIUWmfvCDSwg38809967 = -653132988;    long dIUWmfvCDSwg6959676 = -280512361;    long dIUWmfvCDSwg74673447 = -380335786;    long dIUWmfvCDSwg17073301 = -188094676;    long dIUWmfvCDSwg73495276 = -909883468;    long dIUWmfvCDSwg2073222 = -544550772;    long dIUWmfvCDSwg69179249 = -905323749;    long dIUWmfvCDSwg44215669 = -674913726;    long dIUWmfvCDSwg34736629 = 83628948;    long dIUWmfvCDSwg93919585 = -282023553;    long dIUWmfvCDSwg62750558 = -448694460;    long dIUWmfvCDSwg39372503 = -159103270;    long dIUWmfvCDSwg86240711 = -922226221;    long dIUWmfvCDSwg91954028 = -795508937;    long dIUWmfvCDSwg19928274 = -347086876;    long dIUWmfvCDSwg73458025 = -547052084;    long dIUWmfvCDSwg88097751 = -567244809;    long dIUWmfvCDSwg21064815 = 11649077;    long dIUWmfvCDSwg60055931 = -748009825;    long dIUWmfvCDSwg11828954 = 74124237;    long dIUWmfvCDSwg85399306 = -853523454;    long dIUWmfvCDSwg62656233 = 15841982;    long dIUWmfvCDSwg81258161 = -161692035;    long dIUWmfvCDSwg36216145 = -689704783;     dIUWmfvCDSwg84463408 = dIUWmfvCDSwg2404377;     dIUWmfvCDSwg2404377 = dIUWmfvCDSwg7133787;     dIUWmfvCDSwg7133787 = dIUWmfvCDSwg84902493;     dIUWmfvCDSwg84902493 = dIUWmfvCDSwg73454881;     dIUWmfvCDSwg73454881 = dIUWmfvCDSwg29159365;     dIUWmfvCDSwg29159365 = dIUWmfvCDSwg23274654;     dIUWmfvCDSwg23274654 = dIUWmfvCDSwg22251046;     dIUWmfvCDSwg22251046 = dIUWmfvCDSwg6498813;     dIUWmfvCDSwg6498813 = dIUWmfvCDSwg73582078;     dIUWmfvCDSwg73582078 = dIUWmfvCDSwg90380940;     dIUWmfvCDSwg90380940 = dIUWmfvCDSwg40400114;     dIUWmfvCDSwg40400114 = dIUWmfvCDSwg67450552;     dIUWmfvCDSwg67450552 = dIUWmfvCDSwg71005161;     dIUWmfvCDSwg71005161 = dIUWmfvCDSwg40554071;     dIUWmfvCDSwg40554071 = dIUWmfvCDSwg3239935;     dIUWmfvCDSwg3239935 = dIUWmfvCDSwg22771031;     dIUWmfvCDSwg22771031 = dIUWmfvCDSwg45296653;     dIUWmfvCDSwg45296653 = dIUWmfvCDSwg11794312;     dIUWmfvCDSwg11794312 = dIUWmfvCDSwg3177832;     dIUWmfvCDSwg3177832 = dIUWmfvCDSwg65684173;     dIUWmfvCDSwg65684173 = dIUWmfvCDSwg72824013;     dIUWmfvCDSwg72824013 = dIUWmfvCDSwg14139225;     dIUWmfvCDSwg14139225 = dIUWmfvCDSwg78469336;     dIUWmfvCDSwg78469336 = dIUWmfvCDSwg42588568;     dIUWmfvCDSwg42588568 = dIUWmfvCDSwg93314742;     dIUWmfvCDSwg93314742 = dIUWmfvCDSwg87661883;     dIUWmfvCDSwg87661883 = dIUWmfvCDSwg22675016;     dIUWmfvCDSwg22675016 = dIUWmfvCDSwg85286630;     dIUWmfvCDSwg85286630 = dIUWmfvCDSwg35140999;     dIUWmfvCDSwg35140999 = dIUWmfvCDSwg47660690;     dIUWmfvCDSwg47660690 = dIUWmfvCDSwg22801197;     dIUWmfvCDSwg22801197 = dIUWmfvCDSwg43093502;     dIUWmfvCDSwg43093502 = dIUWmfvCDSwg63537183;     dIUWmfvCDSwg63537183 = dIUWmfvCDSwg3593424;     dIUWmfvCDSwg3593424 = dIUWmfvCDSwg8193425;     dIUWmfvCDSwg8193425 = dIUWmfvCDSwg2122476;     dIUWmfvCDSwg2122476 = dIUWmfvCDSwg30411677;     dIUWmfvCDSwg30411677 = dIUWmfvCDSwg1204954;     dIUWmfvCDSwg1204954 = dIUWmfvCDSwg1553412;     dIUWmfvCDSwg1553412 = dIUWmfvCDSwg12428592;     dIUWmfvCDSwg12428592 = dIUWmfvCDSwg22363722;     dIUWmfvCDSwg22363722 = dIUWmfvCDSwg34014046;     dIUWmfvCDSwg34014046 = dIUWmfvCDSwg7179549;     dIUWmfvCDSwg7179549 = dIUWmfvCDSwg3795889;     dIUWmfvCDSwg3795889 = dIUWmfvCDSwg25515268;     dIUWmfvCDSwg25515268 = dIUWmfvCDSwg19819466;     dIUWmfvCDSwg19819466 = dIUWmfvCDSwg85588661;     dIUWmfvCDSwg85588661 = dIUWmfvCDSwg53495767;     dIUWmfvCDSwg53495767 = dIUWmfvCDSwg41070961;     dIUWmfvCDSwg41070961 = dIUWmfvCDSwg404371;     dIUWmfvCDSwg404371 = dIUWmfvCDSwg53741105;     dIUWmfvCDSwg53741105 = dIUWmfvCDSwg60050638;     dIUWmfvCDSwg60050638 = dIUWmfvCDSwg3721000;     dIUWmfvCDSwg3721000 = dIUWmfvCDSwg77296472;     dIUWmfvCDSwg77296472 = dIUWmfvCDSwg11639396;     dIUWmfvCDSwg11639396 = dIUWmfvCDSwg88265151;     dIUWmfvCDSwg88265151 = dIUWmfvCDSwg28664451;     dIUWmfvCDSwg28664451 = dIUWmfvCDSwg42313925;     dIUWmfvCDSwg42313925 = dIUWmfvCDSwg80140138;     dIUWmfvCDSwg80140138 = dIUWmfvCDSwg41497481;     dIUWmfvCDSwg41497481 = dIUWmfvCDSwg599639;     dIUWmfvCDSwg599639 = dIUWmfvCDSwg36964416;     dIUWmfvCDSwg36964416 = dIUWmfvCDSwg71357813;     dIUWmfvCDSwg71357813 = dIUWmfvCDSwg25921388;     dIUWmfvCDSwg25921388 = dIUWmfvCDSwg67579743;     dIUWmfvCDSwg67579743 = dIUWmfvCDSwg97306611;     dIUWmfvCDSwg97306611 = dIUWmfvCDSwg3913369;     dIUWmfvCDSwg3913369 = dIUWmfvCDSwg67411737;     dIUWmfvCDSwg67411737 = dIUWmfvCDSwg32360647;     dIUWmfvCDSwg32360647 = dIUWmfvCDSwg1117459;     dIUWmfvCDSwg1117459 = dIUWmfvCDSwg92359353;     dIUWmfvCDSwg92359353 = dIUWmfvCDSwg44091699;     dIUWmfvCDSwg44091699 = dIUWmfvCDSwg10240900;     dIUWmfvCDSwg10240900 = dIUWmfvCDSwg90749240;     dIUWmfvCDSwg90749240 = dIUWmfvCDSwg43320452;     dIUWmfvCDSwg43320452 = dIUWmfvCDSwg38809967;     dIUWmfvCDSwg38809967 = dIUWmfvCDSwg6959676;     dIUWmfvCDSwg6959676 = dIUWmfvCDSwg74673447;     dIUWmfvCDSwg74673447 = dIUWmfvCDSwg17073301;     dIUWmfvCDSwg17073301 = dIUWmfvCDSwg73495276;     dIUWmfvCDSwg73495276 = dIUWmfvCDSwg2073222;     dIUWmfvCDSwg2073222 = dIUWmfvCDSwg69179249;     dIUWmfvCDSwg69179249 = dIUWmfvCDSwg44215669;     dIUWmfvCDSwg44215669 = dIUWmfvCDSwg34736629;     dIUWmfvCDSwg34736629 = dIUWmfvCDSwg93919585;     dIUWmfvCDSwg93919585 = dIUWmfvCDSwg62750558;     dIUWmfvCDSwg62750558 = dIUWmfvCDSwg39372503;     dIUWmfvCDSwg39372503 = dIUWmfvCDSwg86240711;     dIUWmfvCDSwg86240711 = dIUWmfvCDSwg91954028;     dIUWmfvCDSwg91954028 = dIUWmfvCDSwg19928274;     dIUWmfvCDSwg19928274 = dIUWmfvCDSwg73458025;     dIUWmfvCDSwg73458025 = dIUWmfvCDSwg88097751;     dIUWmfvCDSwg88097751 = dIUWmfvCDSwg21064815;     dIUWmfvCDSwg21064815 = dIUWmfvCDSwg60055931;     dIUWmfvCDSwg60055931 = dIUWmfvCDSwg11828954;     dIUWmfvCDSwg11828954 = dIUWmfvCDSwg85399306;     dIUWmfvCDSwg85399306 = dIUWmfvCDSwg62656233;     dIUWmfvCDSwg62656233 = dIUWmfvCDSwg81258161;     dIUWmfvCDSwg81258161 = dIUWmfvCDSwg36216145;     dIUWmfvCDSwg36216145 = dIUWmfvCDSwg84463408;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void BMFKFFhBbDY3283304() {     double ErVZvhpvJehE74589717 = -748460984;    double ErVZvhpvJehE85529441 = -99959095;    double ErVZvhpvJehE2626486 = -936848298;    double ErVZvhpvJehE58401068 = -953685498;    double ErVZvhpvJehE86511617 = -501834916;    double ErVZvhpvJehE9945769 = -804137925;    double ErVZvhpvJehE17938092 = -531402009;    double ErVZvhpvJehE75129609 = -88540613;    double ErVZvhpvJehE30310500 = -865203286;    double ErVZvhpvJehE77837748 = -196138297;    double ErVZvhpvJehE66532759 = -707296441;    double ErVZvhpvJehE75149621 = -685227907;    double ErVZvhpvJehE5796685 = -718334826;    double ErVZvhpvJehE9424015 = -720514014;    double ErVZvhpvJehE38628443 = -312027462;    double ErVZvhpvJehE27419676 = -266713016;    double ErVZvhpvJehE66733211 = -915720960;    double ErVZvhpvJehE66652365 = -422613081;    double ErVZvhpvJehE72708702 = 36422587;    double ErVZvhpvJehE70502079 = -195858476;    double ErVZvhpvJehE53606576 = -651304054;    double ErVZvhpvJehE70905595 = -695821442;    double ErVZvhpvJehE47377643 = -112060690;    double ErVZvhpvJehE86390433 = -617989571;    double ErVZvhpvJehE89473756 = -406754841;    double ErVZvhpvJehE12105708 = -571619965;    double ErVZvhpvJehE9629219 = -712651370;    double ErVZvhpvJehE45845391 = -806594328;    double ErVZvhpvJehE46495628 = -110164391;    double ErVZvhpvJehE82930079 = -6279239;    double ErVZvhpvJehE51124093 = -689533942;    double ErVZvhpvJehE22168111 = -663133342;    double ErVZvhpvJehE52062543 = 82491505;    double ErVZvhpvJehE87375828 = -568420826;    double ErVZvhpvJehE39189958 = -772824574;    double ErVZvhpvJehE61424431 = -669548442;    double ErVZvhpvJehE2356045 = -692956629;    double ErVZvhpvJehE54768960 = -337573832;    double ErVZvhpvJehE11737971 = -660578212;    double ErVZvhpvJehE46065553 = -611100039;    double ErVZvhpvJehE26128265 = -878889305;    double ErVZvhpvJehE77008185 = -672144198;    double ErVZvhpvJehE93830886 = -85017415;    double ErVZvhpvJehE37841490 = -289171598;    double ErVZvhpvJehE95760305 = -902139365;    double ErVZvhpvJehE45954261 = 41226873;    double ErVZvhpvJehE242757 = -334345262;    double ErVZvhpvJehE75975120 = -335227858;    double ErVZvhpvJehE81414420 = -177319868;    double ErVZvhpvJehE70351366 = -130047955;    double ErVZvhpvJehE29769894 = -489887841;    double ErVZvhpvJehE97514212 = 54729321;    double ErVZvhpvJehE9503094 = -425467458;    double ErVZvhpvJehE56628062 = -581735347;    double ErVZvhpvJehE49676728 = -783343719;    double ErVZvhpvJehE3684123 = 47360458;    double ErVZvhpvJehE38151798 = -987898405;    double ErVZvhpvJehE16236053 = -218858727;    double ErVZvhpvJehE68927312 = -446930658;    double ErVZvhpvJehE74405909 = -930214952;    double ErVZvhpvJehE316551 = 8513445;    double ErVZvhpvJehE72092701 = -724807682;    double ErVZvhpvJehE28633981 = -978376222;    double ErVZvhpvJehE47380420 = -758924048;    double ErVZvhpvJehE26713656 = -506604356;    double ErVZvhpvJehE44364649 = 55836900;    double ErVZvhpvJehE23087078 = -667719413;    double ErVZvhpvJehE18420856 = -49914001;    double ErVZvhpvJehE70234056 = -947689440;    double ErVZvhpvJehE77204011 = -642479020;    double ErVZvhpvJehE25063632 = -573756388;    double ErVZvhpvJehE11964251 = -478147128;    double ErVZvhpvJehE54914395 = -762034869;    double ErVZvhpvJehE26643149 = -352477374;    double ErVZvhpvJehE44373815 = -316969171;    double ErVZvhpvJehE76598391 = -979159856;    double ErVZvhpvJehE77074708 = -510804028;    double ErVZvhpvJehE9536153 = -822889093;    double ErVZvhpvJehE90630127 = -715850206;    double ErVZvhpvJehE43519495 = -347981714;    double ErVZvhpvJehE11862952 = -137274703;    double ErVZvhpvJehE33654098 = -277423513;    double ErVZvhpvJehE64430970 = -529274460;    double ErVZvhpvJehE76144261 = -980116437;    double ErVZvhpvJehE53160185 = -516391398;    double ErVZvhpvJehE53609881 = -644263264;    double ErVZvhpvJehE12665018 = -137665884;    double ErVZvhpvJehE95434481 = -335773148;    double ErVZvhpvJehE37699101 = -785077107;    double ErVZvhpvJehE35505836 = -720185032;    double ErVZvhpvJehE23272634 = -681650037;    double ErVZvhpvJehE86119992 = -374097902;    double ErVZvhpvJehE85841648 = -890643175;    double ErVZvhpvJehE37332061 = -730363261;    double ErVZvhpvJehE45749003 = -519613484;    double ErVZvhpvJehE54035564 = -54081624;    double ErVZvhpvJehE48374204 = -693767977;    double ErVZvhpvJehE46450466 = -326093367;    double ErVZvhpvJehE11127835 = -782567243;    double ErVZvhpvJehE51395657 = -748460984;     ErVZvhpvJehE74589717 = ErVZvhpvJehE85529441;     ErVZvhpvJehE85529441 = ErVZvhpvJehE2626486;     ErVZvhpvJehE2626486 = ErVZvhpvJehE58401068;     ErVZvhpvJehE58401068 = ErVZvhpvJehE86511617;     ErVZvhpvJehE86511617 = ErVZvhpvJehE9945769;     ErVZvhpvJehE9945769 = ErVZvhpvJehE17938092;     ErVZvhpvJehE17938092 = ErVZvhpvJehE75129609;     ErVZvhpvJehE75129609 = ErVZvhpvJehE30310500;     ErVZvhpvJehE30310500 = ErVZvhpvJehE77837748;     ErVZvhpvJehE77837748 = ErVZvhpvJehE66532759;     ErVZvhpvJehE66532759 = ErVZvhpvJehE75149621;     ErVZvhpvJehE75149621 = ErVZvhpvJehE5796685;     ErVZvhpvJehE5796685 = ErVZvhpvJehE9424015;     ErVZvhpvJehE9424015 = ErVZvhpvJehE38628443;     ErVZvhpvJehE38628443 = ErVZvhpvJehE27419676;     ErVZvhpvJehE27419676 = ErVZvhpvJehE66733211;     ErVZvhpvJehE66733211 = ErVZvhpvJehE66652365;     ErVZvhpvJehE66652365 = ErVZvhpvJehE72708702;     ErVZvhpvJehE72708702 = ErVZvhpvJehE70502079;     ErVZvhpvJehE70502079 = ErVZvhpvJehE53606576;     ErVZvhpvJehE53606576 = ErVZvhpvJehE70905595;     ErVZvhpvJehE70905595 = ErVZvhpvJehE47377643;     ErVZvhpvJehE47377643 = ErVZvhpvJehE86390433;     ErVZvhpvJehE86390433 = ErVZvhpvJehE89473756;     ErVZvhpvJehE89473756 = ErVZvhpvJehE12105708;     ErVZvhpvJehE12105708 = ErVZvhpvJehE9629219;     ErVZvhpvJehE9629219 = ErVZvhpvJehE45845391;     ErVZvhpvJehE45845391 = ErVZvhpvJehE46495628;     ErVZvhpvJehE46495628 = ErVZvhpvJehE82930079;     ErVZvhpvJehE82930079 = ErVZvhpvJehE51124093;     ErVZvhpvJehE51124093 = ErVZvhpvJehE22168111;     ErVZvhpvJehE22168111 = ErVZvhpvJehE52062543;     ErVZvhpvJehE52062543 = ErVZvhpvJehE87375828;     ErVZvhpvJehE87375828 = ErVZvhpvJehE39189958;     ErVZvhpvJehE39189958 = ErVZvhpvJehE61424431;     ErVZvhpvJehE61424431 = ErVZvhpvJehE2356045;     ErVZvhpvJehE2356045 = ErVZvhpvJehE54768960;     ErVZvhpvJehE54768960 = ErVZvhpvJehE11737971;     ErVZvhpvJehE11737971 = ErVZvhpvJehE46065553;     ErVZvhpvJehE46065553 = ErVZvhpvJehE26128265;     ErVZvhpvJehE26128265 = ErVZvhpvJehE77008185;     ErVZvhpvJehE77008185 = ErVZvhpvJehE93830886;     ErVZvhpvJehE93830886 = ErVZvhpvJehE37841490;     ErVZvhpvJehE37841490 = ErVZvhpvJehE95760305;     ErVZvhpvJehE95760305 = ErVZvhpvJehE45954261;     ErVZvhpvJehE45954261 = ErVZvhpvJehE242757;     ErVZvhpvJehE242757 = ErVZvhpvJehE75975120;     ErVZvhpvJehE75975120 = ErVZvhpvJehE81414420;     ErVZvhpvJehE81414420 = ErVZvhpvJehE70351366;     ErVZvhpvJehE70351366 = ErVZvhpvJehE29769894;     ErVZvhpvJehE29769894 = ErVZvhpvJehE97514212;     ErVZvhpvJehE97514212 = ErVZvhpvJehE9503094;     ErVZvhpvJehE9503094 = ErVZvhpvJehE56628062;     ErVZvhpvJehE56628062 = ErVZvhpvJehE49676728;     ErVZvhpvJehE49676728 = ErVZvhpvJehE3684123;     ErVZvhpvJehE3684123 = ErVZvhpvJehE38151798;     ErVZvhpvJehE38151798 = ErVZvhpvJehE16236053;     ErVZvhpvJehE16236053 = ErVZvhpvJehE68927312;     ErVZvhpvJehE68927312 = ErVZvhpvJehE74405909;     ErVZvhpvJehE74405909 = ErVZvhpvJehE316551;     ErVZvhpvJehE316551 = ErVZvhpvJehE72092701;     ErVZvhpvJehE72092701 = ErVZvhpvJehE28633981;     ErVZvhpvJehE28633981 = ErVZvhpvJehE47380420;     ErVZvhpvJehE47380420 = ErVZvhpvJehE26713656;     ErVZvhpvJehE26713656 = ErVZvhpvJehE44364649;     ErVZvhpvJehE44364649 = ErVZvhpvJehE23087078;     ErVZvhpvJehE23087078 = ErVZvhpvJehE18420856;     ErVZvhpvJehE18420856 = ErVZvhpvJehE70234056;     ErVZvhpvJehE70234056 = ErVZvhpvJehE77204011;     ErVZvhpvJehE77204011 = ErVZvhpvJehE25063632;     ErVZvhpvJehE25063632 = ErVZvhpvJehE11964251;     ErVZvhpvJehE11964251 = ErVZvhpvJehE54914395;     ErVZvhpvJehE54914395 = ErVZvhpvJehE26643149;     ErVZvhpvJehE26643149 = ErVZvhpvJehE44373815;     ErVZvhpvJehE44373815 = ErVZvhpvJehE76598391;     ErVZvhpvJehE76598391 = ErVZvhpvJehE77074708;     ErVZvhpvJehE77074708 = ErVZvhpvJehE9536153;     ErVZvhpvJehE9536153 = ErVZvhpvJehE90630127;     ErVZvhpvJehE90630127 = ErVZvhpvJehE43519495;     ErVZvhpvJehE43519495 = ErVZvhpvJehE11862952;     ErVZvhpvJehE11862952 = ErVZvhpvJehE33654098;     ErVZvhpvJehE33654098 = ErVZvhpvJehE64430970;     ErVZvhpvJehE64430970 = ErVZvhpvJehE76144261;     ErVZvhpvJehE76144261 = ErVZvhpvJehE53160185;     ErVZvhpvJehE53160185 = ErVZvhpvJehE53609881;     ErVZvhpvJehE53609881 = ErVZvhpvJehE12665018;     ErVZvhpvJehE12665018 = ErVZvhpvJehE95434481;     ErVZvhpvJehE95434481 = ErVZvhpvJehE37699101;     ErVZvhpvJehE37699101 = ErVZvhpvJehE35505836;     ErVZvhpvJehE35505836 = ErVZvhpvJehE23272634;     ErVZvhpvJehE23272634 = ErVZvhpvJehE86119992;     ErVZvhpvJehE86119992 = ErVZvhpvJehE85841648;     ErVZvhpvJehE85841648 = ErVZvhpvJehE37332061;     ErVZvhpvJehE37332061 = ErVZvhpvJehE45749003;     ErVZvhpvJehE45749003 = ErVZvhpvJehE54035564;     ErVZvhpvJehE54035564 = ErVZvhpvJehE48374204;     ErVZvhpvJehE48374204 = ErVZvhpvJehE46450466;     ErVZvhpvJehE46450466 = ErVZvhpvJehE11127835;     ErVZvhpvJehE11127835 = ErVZvhpvJehE51395657;     ErVZvhpvJehE51395657 = ErVZvhpvJehE74589717;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void hJpZaAFhhM15828493() {     double mHwQonjbwAnl94057887 = -61592196;    double mHwQonjbwAnl38553305 = -645837091;    double mHwQonjbwAnl19463478 = -588476913;    double mHwQonjbwAnl77048216 = -770259761;    double mHwQonjbwAnl86958133 = -28107332;    double mHwQonjbwAnl35537843 = -694622694;    double mHwQonjbwAnl62769970 = -974708239;    double mHwQonjbwAnl40379842 = -182348579;    double mHwQonjbwAnl90997296 = -493394665;    double mHwQonjbwAnl55766472 = -201724343;    double mHwQonjbwAnl20756023 = -40286742;    double mHwQonjbwAnl78644235 = -684530612;    double mHwQonjbwAnl96168343 = -42692103;    double mHwQonjbwAnl17840056 = -162799739;    double mHwQonjbwAnl99154904 = -610111253;    double mHwQonjbwAnl93635325 = -729904950;    double mHwQonjbwAnl72695324 = 12504359;    double mHwQonjbwAnl90715116 = -173367799;    double mHwQonjbwAnl72343581 = -340782173;    double mHwQonjbwAnl51113381 = -913394932;    double mHwQonjbwAnl66062648 = -157516380;    double mHwQonjbwAnl85887677 = -107624656;    double mHwQonjbwAnl15550649 = -409635308;    double mHwQonjbwAnl4112102 = -254533563;    double mHwQonjbwAnl677246 = -701054950;    double mHwQonjbwAnl16873169 = -257415183;    double mHwQonjbwAnl93557349 = -377802302;    double mHwQonjbwAnl96637065 = -970327607;    double mHwQonjbwAnl88240584 = -124075537;    double mHwQonjbwAnl67636933 = -97717933;    double mHwQonjbwAnl80928178 = -554860034;    double mHwQonjbwAnl61747421 = -127482360;    double mHwQonjbwAnl63538647 = -472716262;    double mHwQonjbwAnl46132335 = -873024032;    double mHwQonjbwAnl79120294 = -835527380;    double mHwQonjbwAnl97490368 = -973117051;    double mHwQonjbwAnl70739495 = -119832704;    double mHwQonjbwAnl96251434 = -414782648;    double mHwQonjbwAnl79051295 = -24993037;    double mHwQonjbwAnl67347289 = -607631136;    double mHwQonjbwAnl67610322 = -288675601;    double mHwQonjbwAnl88867318 = -911040424;    double mHwQonjbwAnl64964128 = -32819212;    double mHwQonjbwAnl21227029 = -738244258;    double mHwQonjbwAnl75788717 = -79262328;    double mHwQonjbwAnl415389 = -496104548;    double mHwQonjbwAnl82232636 = -248038585;    double mHwQonjbwAnl76130950 = -518515172;    double mHwQonjbwAnl22550012 = -191259106;    double mHwQonjbwAnl11249709 = -991060300;    double mHwQonjbwAnl4205464 = -896252772;    double mHwQonjbwAnl13963073 = -322623538;    double mHwQonjbwAnl79328239 = -101576419;    double mHwQonjbwAnl29558090 = -576328984;    double mHwQonjbwAnl49765844 = -557902354;    double mHwQonjbwAnl8170210 = -953967541;    double mHwQonjbwAnl23002656 = -136201783;    double mHwQonjbwAnl15351376 = -233943350;    double mHwQonjbwAnl76370971 = 30795188;    double mHwQonjbwAnl70084964 = -770692149;    double mHwQonjbwAnl41980494 = -216820392;    double mHwQonjbwAnl66132905 = 95619368;    double mHwQonjbwAnl52139258 = 41726958;    double mHwQonjbwAnl23360364 = -295676732;    double mHwQonjbwAnl74838293 = -646864309;    double mHwQonjbwAnl59008602 = -912804382;    double mHwQonjbwAnl15105588 = -111814351;    double mHwQonjbwAnl50036008 = -169668071;    double mHwQonjbwAnl38719761 = -327272360;    double mHwQonjbwAnl1664536 = -636994203;    double mHwQonjbwAnl22895830 = -510072247;    double mHwQonjbwAnl76443890 = -572712994;    double mHwQonjbwAnl11663822 = -48374762;    double mHwQonjbwAnl4996293 = -733151038;    double mHwQonjbwAnl83503059 = -524719332;    double mHwQonjbwAnl77195330 = -246475956;    double mHwQonjbwAnl20923550 = 25194556;    double mHwQonjbwAnl94323620 = -671391050;    double mHwQonjbwAnl28323385 = -75271235;    double mHwQonjbwAnl261857 = -104950402;    double mHwQonjbwAnl34640533 = 90623402;    double mHwQonjbwAnl17426399 = -859287130;    double mHwQonjbwAnl74087054 = -679068501;    double mHwQonjbwAnl76990875 = -133015237;    double mHwQonjbwAnl63431470 = -201465162;    double mHwQonjbwAnl66965105 = -132236497;    double mHwQonjbwAnl82419181 = 74094058;    double mHwQonjbwAnl33980557 = -896387279;    double mHwQonjbwAnl96366490 = -215121678;    double mHwQonjbwAnl70950084 = -881559840;    double mHwQonjbwAnl74487713 = -736915268;    double mHwQonjbwAnl55388119 = -885889354;    double mHwQonjbwAnl19880463 = -345577837;    double mHwQonjbwAnl8966331 = -254300889;    double mHwQonjbwAnl25366796 = -290810744;    double mHwQonjbwAnl1477418 = -284294969;    double mHwQonjbwAnl36728061 = -852767382;    double mHwQonjbwAnl41603764 = -737142480;    double mHwQonjbwAnl46388735 = 8620050;    double mHwQonjbwAnl16780115 = -61592196;     mHwQonjbwAnl94057887 = mHwQonjbwAnl38553305;     mHwQonjbwAnl38553305 = mHwQonjbwAnl19463478;     mHwQonjbwAnl19463478 = mHwQonjbwAnl77048216;     mHwQonjbwAnl77048216 = mHwQonjbwAnl86958133;     mHwQonjbwAnl86958133 = mHwQonjbwAnl35537843;     mHwQonjbwAnl35537843 = mHwQonjbwAnl62769970;     mHwQonjbwAnl62769970 = mHwQonjbwAnl40379842;     mHwQonjbwAnl40379842 = mHwQonjbwAnl90997296;     mHwQonjbwAnl90997296 = mHwQonjbwAnl55766472;     mHwQonjbwAnl55766472 = mHwQonjbwAnl20756023;     mHwQonjbwAnl20756023 = mHwQonjbwAnl78644235;     mHwQonjbwAnl78644235 = mHwQonjbwAnl96168343;     mHwQonjbwAnl96168343 = mHwQonjbwAnl17840056;     mHwQonjbwAnl17840056 = mHwQonjbwAnl99154904;     mHwQonjbwAnl99154904 = mHwQonjbwAnl93635325;     mHwQonjbwAnl93635325 = mHwQonjbwAnl72695324;     mHwQonjbwAnl72695324 = mHwQonjbwAnl90715116;     mHwQonjbwAnl90715116 = mHwQonjbwAnl72343581;     mHwQonjbwAnl72343581 = mHwQonjbwAnl51113381;     mHwQonjbwAnl51113381 = mHwQonjbwAnl66062648;     mHwQonjbwAnl66062648 = mHwQonjbwAnl85887677;     mHwQonjbwAnl85887677 = mHwQonjbwAnl15550649;     mHwQonjbwAnl15550649 = mHwQonjbwAnl4112102;     mHwQonjbwAnl4112102 = mHwQonjbwAnl677246;     mHwQonjbwAnl677246 = mHwQonjbwAnl16873169;     mHwQonjbwAnl16873169 = mHwQonjbwAnl93557349;     mHwQonjbwAnl93557349 = mHwQonjbwAnl96637065;     mHwQonjbwAnl96637065 = mHwQonjbwAnl88240584;     mHwQonjbwAnl88240584 = mHwQonjbwAnl67636933;     mHwQonjbwAnl67636933 = mHwQonjbwAnl80928178;     mHwQonjbwAnl80928178 = mHwQonjbwAnl61747421;     mHwQonjbwAnl61747421 = mHwQonjbwAnl63538647;     mHwQonjbwAnl63538647 = mHwQonjbwAnl46132335;     mHwQonjbwAnl46132335 = mHwQonjbwAnl79120294;     mHwQonjbwAnl79120294 = mHwQonjbwAnl97490368;     mHwQonjbwAnl97490368 = mHwQonjbwAnl70739495;     mHwQonjbwAnl70739495 = mHwQonjbwAnl96251434;     mHwQonjbwAnl96251434 = mHwQonjbwAnl79051295;     mHwQonjbwAnl79051295 = mHwQonjbwAnl67347289;     mHwQonjbwAnl67347289 = mHwQonjbwAnl67610322;     mHwQonjbwAnl67610322 = mHwQonjbwAnl88867318;     mHwQonjbwAnl88867318 = mHwQonjbwAnl64964128;     mHwQonjbwAnl64964128 = mHwQonjbwAnl21227029;     mHwQonjbwAnl21227029 = mHwQonjbwAnl75788717;     mHwQonjbwAnl75788717 = mHwQonjbwAnl415389;     mHwQonjbwAnl415389 = mHwQonjbwAnl82232636;     mHwQonjbwAnl82232636 = mHwQonjbwAnl76130950;     mHwQonjbwAnl76130950 = mHwQonjbwAnl22550012;     mHwQonjbwAnl22550012 = mHwQonjbwAnl11249709;     mHwQonjbwAnl11249709 = mHwQonjbwAnl4205464;     mHwQonjbwAnl4205464 = mHwQonjbwAnl13963073;     mHwQonjbwAnl13963073 = mHwQonjbwAnl79328239;     mHwQonjbwAnl79328239 = mHwQonjbwAnl29558090;     mHwQonjbwAnl29558090 = mHwQonjbwAnl49765844;     mHwQonjbwAnl49765844 = mHwQonjbwAnl8170210;     mHwQonjbwAnl8170210 = mHwQonjbwAnl23002656;     mHwQonjbwAnl23002656 = mHwQonjbwAnl15351376;     mHwQonjbwAnl15351376 = mHwQonjbwAnl76370971;     mHwQonjbwAnl76370971 = mHwQonjbwAnl70084964;     mHwQonjbwAnl70084964 = mHwQonjbwAnl41980494;     mHwQonjbwAnl41980494 = mHwQonjbwAnl66132905;     mHwQonjbwAnl66132905 = mHwQonjbwAnl52139258;     mHwQonjbwAnl52139258 = mHwQonjbwAnl23360364;     mHwQonjbwAnl23360364 = mHwQonjbwAnl74838293;     mHwQonjbwAnl74838293 = mHwQonjbwAnl59008602;     mHwQonjbwAnl59008602 = mHwQonjbwAnl15105588;     mHwQonjbwAnl15105588 = mHwQonjbwAnl50036008;     mHwQonjbwAnl50036008 = mHwQonjbwAnl38719761;     mHwQonjbwAnl38719761 = mHwQonjbwAnl1664536;     mHwQonjbwAnl1664536 = mHwQonjbwAnl22895830;     mHwQonjbwAnl22895830 = mHwQonjbwAnl76443890;     mHwQonjbwAnl76443890 = mHwQonjbwAnl11663822;     mHwQonjbwAnl11663822 = mHwQonjbwAnl4996293;     mHwQonjbwAnl4996293 = mHwQonjbwAnl83503059;     mHwQonjbwAnl83503059 = mHwQonjbwAnl77195330;     mHwQonjbwAnl77195330 = mHwQonjbwAnl20923550;     mHwQonjbwAnl20923550 = mHwQonjbwAnl94323620;     mHwQonjbwAnl94323620 = mHwQonjbwAnl28323385;     mHwQonjbwAnl28323385 = mHwQonjbwAnl261857;     mHwQonjbwAnl261857 = mHwQonjbwAnl34640533;     mHwQonjbwAnl34640533 = mHwQonjbwAnl17426399;     mHwQonjbwAnl17426399 = mHwQonjbwAnl74087054;     mHwQonjbwAnl74087054 = mHwQonjbwAnl76990875;     mHwQonjbwAnl76990875 = mHwQonjbwAnl63431470;     mHwQonjbwAnl63431470 = mHwQonjbwAnl66965105;     mHwQonjbwAnl66965105 = mHwQonjbwAnl82419181;     mHwQonjbwAnl82419181 = mHwQonjbwAnl33980557;     mHwQonjbwAnl33980557 = mHwQonjbwAnl96366490;     mHwQonjbwAnl96366490 = mHwQonjbwAnl70950084;     mHwQonjbwAnl70950084 = mHwQonjbwAnl74487713;     mHwQonjbwAnl74487713 = mHwQonjbwAnl55388119;     mHwQonjbwAnl55388119 = mHwQonjbwAnl19880463;     mHwQonjbwAnl19880463 = mHwQonjbwAnl8966331;     mHwQonjbwAnl8966331 = mHwQonjbwAnl25366796;     mHwQonjbwAnl25366796 = mHwQonjbwAnl1477418;     mHwQonjbwAnl1477418 = mHwQonjbwAnl36728061;     mHwQonjbwAnl36728061 = mHwQonjbwAnl41603764;     mHwQonjbwAnl41603764 = mHwQonjbwAnl46388735;     mHwQonjbwAnl46388735 = mHwQonjbwAnl16780115;     mHwQonjbwAnl16780115 = mHwQonjbwAnl94057887;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ykSbBLTXiQ12011653() {     double wJAUfcFJpp53653984 = -290348573;    double wJAUfcFJpp40059154 = -455992476;    double wJAUfcFJpp56464865 = -662617835;    double wJAUfcFJpp72923975 = -542870639;    double wJAUfcFJpp98251359 = 71385641;    double wJAUfcFJpp33214964 = -552882367;    double wJAUfcFJpp60128453 = -304425824;    double wJAUfcFJpp91205126 = -536559954;    double wJAUfcFJpp4810741 = 73932836;    double wJAUfcFJpp38790987 = -142983196;    double wJAUfcFJpp46050954 = -441829181;    double wJAUfcFJpp13315437 = -779551862;    double wJAUfcFJpp66922907 = 51129379;    double wJAUfcFJpp76213894 = -66958087;    double wJAUfcFJpp96462709 = -302637774;    double wJAUfcFJpp90389579 = -535277842;    double wJAUfcFJpp8656428 = 84288079;    double wJAUfcFJpp55383448 = -542703904;    double wJAUfcFJpp52785785 = -479901803;    double wJAUfcFJpp31030491 = -475803585;    double wJAUfcFJpp46523767 = 9462796;    double wJAUfcFJpp54377276 = -26533;    double wJAUfcFJpp7742475 = -173930387;    double wJAUfcFJpp68842340 = -918871800;    double wJAUfcFJpp76655250 = -157192540;    double wJAUfcFJpp11288077 = -392032654;    double wJAUfcFJpp6897420 = -827282299;    double wJAUfcFJpp61748234 = -491709197;    double wJAUfcFJpp38024928 = 86331848;    double wJAUfcFJpp6110400 = -144701175;    double wJAUfcFJpp5842497 = -100079362;    double wJAUfcFJpp4512682 = -544700358;    double wJAUfcFJpp12620686 = -452663134;    double wJAUfcFJpp28656778 = -374907964;    double wJAUfcFJpp84057655 = -483737366;    double wJAUfcFJpp76080265 = -184773633;    double wJAUfcFJpp61371173 = -412611339;    double wJAUfcFJpp94611771 = -359235038;    double wJAUfcFJpp98069238 = -843699554;    double wJAUfcFJpp40172944 = -881512084;    double wJAUfcFJpp25828136 = -757337197;    double wJAUfcFJpp58946499 = -915981843;    double wJAUfcFJpp5843371 = -866264042;    double wJAUfcFJpp95466533 = -62158997;    double wJAUfcFJpp76777032 = -625580397;    double wJAUfcFJpp65208517 = -739048707;    double wJAUfcFJpp87721358 = -139894252;    double wJAUfcFJpp22827345 = -851268401;    double wJAUfcFJpp61939659 = -475196726;    double wJAUfcFJpp26417102 = -212312761;    double wJAUfcFJpp54691713 = -682360996;    double wJAUfcFJpp20548226 = -293866793;    double wJAUfcFJpp54743754 = -341524873;    double wJAUfcFJpp2832614 = -836497939;    double wJAUfcFJpp65487886 = -521836441;    double wJAUfcFJpp99276707 = -190322041;    double wJAUfcFJpp32316680 = -182062089;    double wJAUfcFJpp87622524 = -743746036;    double wJAUfcFJpp96268725 = -285678099;    double wJAUfcFJpp86963283 = -536581706;    double wJAUfcFJpp26317544 = -725600068;    double wJAUfcFJpp98380218 = -812716628;    double wJAUfcFJpp53180199 = -522891803;    double wJAUfcFJpp98700340 = -781365989;    double wJAUfcFJpp32948491 = 57096166;    double wJAUfcFJpp41538273 = -897128824;    double wJAUfcFJpp694752 = -226888728;    double wJAUfcFJpp38266129 = -573962658;    double wJAUfcFJpp92156238 = -583220721;    double wJAUfcFJpp20382445 = -17864142;    double wJAUfcFJpp29018407 = -22666503;    double wJAUfcFJpp14044656 = -556476884;    double wJAUfcFJpp57314209 = -699004350;    double wJAUfcFJpp12612841 = -598389720;    double wJAUfcFJpp5202356 = -718466388;    double wJAUfcFJpp87577267 = -74555362;    double wJAUfcFJpp48533906 = -133762492;    double wJAUfcFJpp12275941 = -11771391;    double wJAUfcFJpp92065308 = -193291403;    double wJAUfcFJpp11446733 = -418143833;    double wJAUfcFJpp23566718 = -152138402;    double wJAUfcFJpp84070075 = -976013899;    double wJAUfcFJpp99808574 = 83487529;    double wJAUfcFJpp11607827 = -701355392;    double wJAUfcFJpp51418686 = -462340180;    double wJAUfcFJpp85294270 = -806212570;    double wJAUfcFJpp49768928 = -103175485;    double wJAUfcFJpp9788073 = -616165196;    double wJAUfcFJpp63168891 = -853071523;    double wJAUfcFJpp84780947 = -193415326;    double wJAUfcFJpp43763585 = 97288456;    double wJAUfcFJpp73748648 = -668865303;    double wJAUfcFJpp98343046 = 26443061;    double wJAUfcFJpp11105955 = -207117849;    double wJAUfcFJpp13855400 = -55912016;    double wJAUfcFJpp27447917 = -944620570;    double wJAUfcFJpp5766301 = -293090041;    double wJAUfcFJpp7143030 = 15101947;    double wJAUfcFJpp62518043 = -19255163;    double wJAUfcFJpp35238760 = -290348573;     wJAUfcFJpp53653984 = wJAUfcFJpp40059154;     wJAUfcFJpp40059154 = wJAUfcFJpp56464865;     wJAUfcFJpp56464865 = wJAUfcFJpp72923975;     wJAUfcFJpp72923975 = wJAUfcFJpp98251359;     wJAUfcFJpp98251359 = wJAUfcFJpp33214964;     wJAUfcFJpp33214964 = wJAUfcFJpp60128453;     wJAUfcFJpp60128453 = wJAUfcFJpp91205126;     wJAUfcFJpp91205126 = wJAUfcFJpp4810741;     wJAUfcFJpp4810741 = wJAUfcFJpp38790987;     wJAUfcFJpp38790987 = wJAUfcFJpp46050954;     wJAUfcFJpp46050954 = wJAUfcFJpp13315437;     wJAUfcFJpp13315437 = wJAUfcFJpp66922907;     wJAUfcFJpp66922907 = wJAUfcFJpp76213894;     wJAUfcFJpp76213894 = wJAUfcFJpp96462709;     wJAUfcFJpp96462709 = wJAUfcFJpp90389579;     wJAUfcFJpp90389579 = wJAUfcFJpp8656428;     wJAUfcFJpp8656428 = wJAUfcFJpp55383448;     wJAUfcFJpp55383448 = wJAUfcFJpp52785785;     wJAUfcFJpp52785785 = wJAUfcFJpp31030491;     wJAUfcFJpp31030491 = wJAUfcFJpp46523767;     wJAUfcFJpp46523767 = wJAUfcFJpp54377276;     wJAUfcFJpp54377276 = wJAUfcFJpp7742475;     wJAUfcFJpp7742475 = wJAUfcFJpp68842340;     wJAUfcFJpp68842340 = wJAUfcFJpp76655250;     wJAUfcFJpp76655250 = wJAUfcFJpp11288077;     wJAUfcFJpp11288077 = wJAUfcFJpp6897420;     wJAUfcFJpp6897420 = wJAUfcFJpp61748234;     wJAUfcFJpp61748234 = wJAUfcFJpp38024928;     wJAUfcFJpp38024928 = wJAUfcFJpp6110400;     wJAUfcFJpp6110400 = wJAUfcFJpp5842497;     wJAUfcFJpp5842497 = wJAUfcFJpp4512682;     wJAUfcFJpp4512682 = wJAUfcFJpp12620686;     wJAUfcFJpp12620686 = wJAUfcFJpp28656778;     wJAUfcFJpp28656778 = wJAUfcFJpp84057655;     wJAUfcFJpp84057655 = wJAUfcFJpp76080265;     wJAUfcFJpp76080265 = wJAUfcFJpp61371173;     wJAUfcFJpp61371173 = wJAUfcFJpp94611771;     wJAUfcFJpp94611771 = wJAUfcFJpp98069238;     wJAUfcFJpp98069238 = wJAUfcFJpp40172944;     wJAUfcFJpp40172944 = wJAUfcFJpp25828136;     wJAUfcFJpp25828136 = wJAUfcFJpp58946499;     wJAUfcFJpp58946499 = wJAUfcFJpp5843371;     wJAUfcFJpp5843371 = wJAUfcFJpp95466533;     wJAUfcFJpp95466533 = wJAUfcFJpp76777032;     wJAUfcFJpp76777032 = wJAUfcFJpp65208517;     wJAUfcFJpp65208517 = wJAUfcFJpp87721358;     wJAUfcFJpp87721358 = wJAUfcFJpp22827345;     wJAUfcFJpp22827345 = wJAUfcFJpp61939659;     wJAUfcFJpp61939659 = wJAUfcFJpp26417102;     wJAUfcFJpp26417102 = wJAUfcFJpp54691713;     wJAUfcFJpp54691713 = wJAUfcFJpp20548226;     wJAUfcFJpp20548226 = wJAUfcFJpp54743754;     wJAUfcFJpp54743754 = wJAUfcFJpp2832614;     wJAUfcFJpp2832614 = wJAUfcFJpp65487886;     wJAUfcFJpp65487886 = wJAUfcFJpp99276707;     wJAUfcFJpp99276707 = wJAUfcFJpp32316680;     wJAUfcFJpp32316680 = wJAUfcFJpp87622524;     wJAUfcFJpp87622524 = wJAUfcFJpp96268725;     wJAUfcFJpp96268725 = wJAUfcFJpp86963283;     wJAUfcFJpp86963283 = wJAUfcFJpp26317544;     wJAUfcFJpp26317544 = wJAUfcFJpp98380218;     wJAUfcFJpp98380218 = wJAUfcFJpp53180199;     wJAUfcFJpp53180199 = wJAUfcFJpp98700340;     wJAUfcFJpp98700340 = wJAUfcFJpp32948491;     wJAUfcFJpp32948491 = wJAUfcFJpp41538273;     wJAUfcFJpp41538273 = wJAUfcFJpp694752;     wJAUfcFJpp694752 = wJAUfcFJpp38266129;     wJAUfcFJpp38266129 = wJAUfcFJpp92156238;     wJAUfcFJpp92156238 = wJAUfcFJpp20382445;     wJAUfcFJpp20382445 = wJAUfcFJpp29018407;     wJAUfcFJpp29018407 = wJAUfcFJpp14044656;     wJAUfcFJpp14044656 = wJAUfcFJpp57314209;     wJAUfcFJpp57314209 = wJAUfcFJpp12612841;     wJAUfcFJpp12612841 = wJAUfcFJpp5202356;     wJAUfcFJpp5202356 = wJAUfcFJpp87577267;     wJAUfcFJpp87577267 = wJAUfcFJpp48533906;     wJAUfcFJpp48533906 = wJAUfcFJpp12275941;     wJAUfcFJpp12275941 = wJAUfcFJpp92065308;     wJAUfcFJpp92065308 = wJAUfcFJpp11446733;     wJAUfcFJpp11446733 = wJAUfcFJpp23566718;     wJAUfcFJpp23566718 = wJAUfcFJpp84070075;     wJAUfcFJpp84070075 = wJAUfcFJpp99808574;     wJAUfcFJpp99808574 = wJAUfcFJpp11607827;     wJAUfcFJpp11607827 = wJAUfcFJpp51418686;     wJAUfcFJpp51418686 = wJAUfcFJpp85294270;     wJAUfcFJpp85294270 = wJAUfcFJpp49768928;     wJAUfcFJpp49768928 = wJAUfcFJpp9788073;     wJAUfcFJpp9788073 = wJAUfcFJpp63168891;     wJAUfcFJpp63168891 = wJAUfcFJpp84780947;     wJAUfcFJpp84780947 = wJAUfcFJpp43763585;     wJAUfcFJpp43763585 = wJAUfcFJpp73748648;     wJAUfcFJpp73748648 = wJAUfcFJpp98343046;     wJAUfcFJpp98343046 = wJAUfcFJpp11105955;     wJAUfcFJpp11105955 = wJAUfcFJpp13855400;     wJAUfcFJpp13855400 = wJAUfcFJpp27447917;     wJAUfcFJpp27447917 = wJAUfcFJpp5766301;     wJAUfcFJpp5766301 = wJAUfcFJpp7143030;     wJAUfcFJpp7143030 = wJAUfcFJpp62518043;     wJAUfcFJpp62518043 = wJAUfcFJpp35238760;     wJAUfcFJpp35238760 = wJAUfcFJpp53653984;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void NJylSlHsVo24556842() {     double vGQociHkuu73122154 = -703479785;    double vGQociHkuu93083018 = 98129528;    double vGQociHkuu73301857 = -314246450;    double vGQociHkuu91571124 = -359444902;    double vGQociHkuu98697875 = -554886775;    double vGQociHkuu58807038 = -443367135;    double vGQociHkuu4960332 = -747732054;    double vGQociHkuu56455359 = -630367920;    double vGQociHkuu65497538 = -654258543;    double vGQociHkuu16719710 = -148569242;    double vGQociHkuu274218 = -874819481;    double vGQociHkuu16810050 = -778854566;    double vGQociHkuu57294566 = -373227898;    double vGQociHkuu84629934 = -609243812;    double vGQociHkuu56989171 = -600721566;    double vGQociHkuu56605228 = -998469775;    double vGQociHkuu14618541 = -87486603;    double vGQociHkuu79446199 = -293458622;    double vGQociHkuu52420664 = -857106564;    double vGQociHkuu11641793 = -93340041;    double vGQociHkuu58979839 = -596749530;    double vGQociHkuu69359359 = -511829746;    double vGQociHkuu75915480 = -471505006;    double vGQociHkuu86564009 = -555415791;    double vGQociHkuu87858739 = -451492649;    double vGQociHkuu16055538 = -77827872;    double vGQociHkuu90825550 = -492433231;    double vGQociHkuu12539910 = -655442476;    double vGQociHkuu79769884 = 72420702;    double vGQociHkuu90817254 = -236139870;    double vGQociHkuu35646582 = 34594545;    double vGQociHkuu44091992 = -9049376;    double vGQociHkuu24096789 = 92129099;    double vGQociHkuu87413284 = -679511170;    double vGQociHkuu23987992 = -546440172;    double vGQociHkuu12146203 = -488342241;    double vGQociHkuu29754624 = -939487414;    double vGQociHkuu36094246 = -436443853;    double vGQociHkuu65382563 = -208114379;    double vGQociHkuu61454680 = -878043180;    double vGQociHkuu67310192 = -167123493;    double vGQociHkuu70805632 = -54878069;    double vGQociHkuu76976611 = -814065839;    double vGQociHkuu78852072 = -511231658;    double vGQociHkuu56805443 = -902703360;    double vGQociHkuu19669645 = -176380128;    double vGQociHkuu69711238 = -53587575;    double vGQociHkuu22983175 = 65444285;    double vGQociHkuu3075251 = -489135965;    double vGQociHkuu67315444 = 26674894;    double vGQociHkuu29127283 = 11274073;    double vGQociHkuu36997086 = -671219652;    double vGQociHkuu24568900 = -17633834;    double vGQociHkuu75762642 = -831091575;    double vGQociHkuu65577003 = -296395076;    double vGQociHkuu3762796 = -91650039;    double vGQociHkuu17167538 = -430365467;    double vGQociHkuu86737848 = -758830659;    double vGQociHkuu3712385 = -907952253;    double vGQociHkuu82642338 = -377058903;    double vGQociHkuu67981487 = -950933905;    double vGQociHkuu92420422 = 7710421;    double vGQociHkuu76685475 = -602788623;    double vGQociHkuu74680284 = -318118674;    double vGQociHkuu81073128 = -83163787;    double vGQociHkuu56182226 = -765770106;    double vGQociHkuu92713261 = -770983666;    double vGQociHkuu69881281 = -693716728;    double vGQociHkuu60641943 = 37196359;    double vGQociHkuu44842969 = -12379325;    double vGQociHkuu26850605 = 41017638;    double vGQociHkuu78524295 = -651042750;    double vGQociHkuu14063636 = 14655757;    double vGQociHkuu90965983 = -979063384;    double vGQociHkuu44331600 = -926216549;    double vGQociHkuu88174206 = -441871462;    double vGQociHkuu92382748 = -697763908;    double vGQociHkuu97063407 = -960273348;    double vGQociHkuu29758566 = -652712432;    double vGQociHkuu68189095 = -175112522;    double vGQociHkuu46344299 = 75759702;    double vGQociHkuu67842376 = -457877516;    double vGQociHkuu9464659 = -66306512;    double vGQociHkuu12454441 = -954254193;    double vGQociHkuu61689971 = -147413943;    double vGQociHkuu98649495 = -294185803;    double vGQociHkuu19523092 = -991415542;    double vGQociHkuu48334147 = -76779326;    double vGQociHkuu21836282 = -283116094;    double vGQociHkuu20225197 = -354790133;    double vGQociHkuu94978664 = 42023225;    double vGQociHkuu43016775 = -80656755;    double vGQociHkuu32381861 = -528491601;    double vGQociHkuu82740224 = -831055477;    double vGQociHkuu93473192 = -927109276;    double vGQociHkuu74889770 = -74833915;    double vGQociHkuu94120157 = -452089447;    double vGQociHkuu2296328 = -395947166;    double vGQociHkuu97778944 = -328067871;    double vGQociHkuu623218 = -703479785;     vGQociHkuu73122154 = vGQociHkuu93083018;     vGQociHkuu93083018 = vGQociHkuu73301857;     vGQociHkuu73301857 = vGQociHkuu91571124;     vGQociHkuu91571124 = vGQociHkuu98697875;     vGQociHkuu98697875 = vGQociHkuu58807038;     vGQociHkuu58807038 = vGQociHkuu4960332;     vGQociHkuu4960332 = vGQociHkuu56455359;     vGQociHkuu56455359 = vGQociHkuu65497538;     vGQociHkuu65497538 = vGQociHkuu16719710;     vGQociHkuu16719710 = vGQociHkuu274218;     vGQociHkuu274218 = vGQociHkuu16810050;     vGQociHkuu16810050 = vGQociHkuu57294566;     vGQociHkuu57294566 = vGQociHkuu84629934;     vGQociHkuu84629934 = vGQociHkuu56989171;     vGQociHkuu56989171 = vGQociHkuu56605228;     vGQociHkuu56605228 = vGQociHkuu14618541;     vGQociHkuu14618541 = vGQociHkuu79446199;     vGQociHkuu79446199 = vGQociHkuu52420664;     vGQociHkuu52420664 = vGQociHkuu11641793;     vGQociHkuu11641793 = vGQociHkuu58979839;     vGQociHkuu58979839 = vGQociHkuu69359359;     vGQociHkuu69359359 = vGQociHkuu75915480;     vGQociHkuu75915480 = vGQociHkuu86564009;     vGQociHkuu86564009 = vGQociHkuu87858739;     vGQociHkuu87858739 = vGQociHkuu16055538;     vGQociHkuu16055538 = vGQociHkuu90825550;     vGQociHkuu90825550 = vGQociHkuu12539910;     vGQociHkuu12539910 = vGQociHkuu79769884;     vGQociHkuu79769884 = vGQociHkuu90817254;     vGQociHkuu90817254 = vGQociHkuu35646582;     vGQociHkuu35646582 = vGQociHkuu44091992;     vGQociHkuu44091992 = vGQociHkuu24096789;     vGQociHkuu24096789 = vGQociHkuu87413284;     vGQociHkuu87413284 = vGQociHkuu23987992;     vGQociHkuu23987992 = vGQociHkuu12146203;     vGQociHkuu12146203 = vGQociHkuu29754624;     vGQociHkuu29754624 = vGQociHkuu36094246;     vGQociHkuu36094246 = vGQociHkuu65382563;     vGQociHkuu65382563 = vGQociHkuu61454680;     vGQociHkuu61454680 = vGQociHkuu67310192;     vGQociHkuu67310192 = vGQociHkuu70805632;     vGQociHkuu70805632 = vGQociHkuu76976611;     vGQociHkuu76976611 = vGQociHkuu78852072;     vGQociHkuu78852072 = vGQociHkuu56805443;     vGQociHkuu56805443 = vGQociHkuu19669645;     vGQociHkuu19669645 = vGQociHkuu69711238;     vGQociHkuu69711238 = vGQociHkuu22983175;     vGQociHkuu22983175 = vGQociHkuu3075251;     vGQociHkuu3075251 = vGQociHkuu67315444;     vGQociHkuu67315444 = vGQociHkuu29127283;     vGQociHkuu29127283 = vGQociHkuu36997086;     vGQociHkuu36997086 = vGQociHkuu24568900;     vGQociHkuu24568900 = vGQociHkuu75762642;     vGQociHkuu75762642 = vGQociHkuu65577003;     vGQociHkuu65577003 = vGQociHkuu3762796;     vGQociHkuu3762796 = vGQociHkuu17167538;     vGQociHkuu17167538 = vGQociHkuu86737848;     vGQociHkuu86737848 = vGQociHkuu3712385;     vGQociHkuu3712385 = vGQociHkuu82642338;     vGQociHkuu82642338 = vGQociHkuu67981487;     vGQociHkuu67981487 = vGQociHkuu92420422;     vGQociHkuu92420422 = vGQociHkuu76685475;     vGQociHkuu76685475 = vGQociHkuu74680284;     vGQociHkuu74680284 = vGQociHkuu81073128;     vGQociHkuu81073128 = vGQociHkuu56182226;     vGQociHkuu56182226 = vGQociHkuu92713261;     vGQociHkuu92713261 = vGQociHkuu69881281;     vGQociHkuu69881281 = vGQociHkuu60641943;     vGQociHkuu60641943 = vGQociHkuu44842969;     vGQociHkuu44842969 = vGQociHkuu26850605;     vGQociHkuu26850605 = vGQociHkuu78524295;     vGQociHkuu78524295 = vGQociHkuu14063636;     vGQociHkuu14063636 = vGQociHkuu90965983;     vGQociHkuu90965983 = vGQociHkuu44331600;     vGQociHkuu44331600 = vGQociHkuu88174206;     vGQociHkuu88174206 = vGQociHkuu92382748;     vGQociHkuu92382748 = vGQociHkuu97063407;     vGQociHkuu97063407 = vGQociHkuu29758566;     vGQociHkuu29758566 = vGQociHkuu68189095;     vGQociHkuu68189095 = vGQociHkuu46344299;     vGQociHkuu46344299 = vGQociHkuu67842376;     vGQociHkuu67842376 = vGQociHkuu9464659;     vGQociHkuu9464659 = vGQociHkuu12454441;     vGQociHkuu12454441 = vGQociHkuu61689971;     vGQociHkuu61689971 = vGQociHkuu98649495;     vGQociHkuu98649495 = vGQociHkuu19523092;     vGQociHkuu19523092 = vGQociHkuu48334147;     vGQociHkuu48334147 = vGQociHkuu21836282;     vGQociHkuu21836282 = vGQociHkuu20225197;     vGQociHkuu20225197 = vGQociHkuu94978664;     vGQociHkuu94978664 = vGQociHkuu43016775;     vGQociHkuu43016775 = vGQociHkuu32381861;     vGQociHkuu32381861 = vGQociHkuu82740224;     vGQociHkuu82740224 = vGQociHkuu93473192;     vGQociHkuu93473192 = vGQociHkuu74889770;     vGQociHkuu74889770 = vGQociHkuu94120157;     vGQociHkuu94120157 = vGQociHkuu2296328;     vGQociHkuu2296328 = vGQociHkuu97778944;     vGQociHkuu97778944 = vGQociHkuu623218;     vGQociHkuu623218 = vGQociHkuu73122154;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void sQIBdOGDzQ84859498() {     double pMTZIPoqzI63248463 = -762235986;    double pMTZIPoqzI76208083 = -276796642;    double pMTZIPoqzI68794556 = -451040911;    double pMTZIPoqzI65069699 = -545616724;    double pMTZIPoqzI11754612 = -496210217;    double pMTZIPoqzI39593443 = -336000243;    double pMTZIPoqzI99623769 = -385277527;    double pMTZIPoqzI9333923 = -266815659;    double pMTZIPoqzI89309225 = -662151181;    double pMTZIPoqzI20975380 = -818443768;    double pMTZIPoqzI76426037 = -283239639;    double pMTZIPoqzI51559558 = -258442702;    double pMTZIPoqzI95640698 = -685463758;    double pMTZIPoqzI23048788 = -607404697;    double pMTZIPoqzI55063543 = 14157492;    double pMTZIPoqzI80784970 = -698849645;    double pMTZIPoqzI58580721 = -348831844;    double pMTZIPoqzI801912 = -736307914;    double pMTZIPoqzI13335055 = -223517000;    double pMTZIPoqzI78966040 = -741218351;    double pMTZIPoqzI46902241 = -301174622;    double pMTZIPoqzI67440941 = -844926382;    double pMTZIPoqzI9153899 = -877964927;    double pMTZIPoqzI94485106 = 96559833;    double pMTZIPoqzI34743927 = 4996407;    double pMTZIPoqzI34846503 = 46298393;    double pMTZIPoqzI12792886 = -251962225;    double pMTZIPoqzI35710285 = -715332534;    double pMTZIPoqzI40978882 = -689778346;    double pMTZIPoqzI38606334 = -110542261;    double pMTZIPoqzI39109984 = -292071999;    double pMTZIPoqzI43458906 = -509873795;    double pMTZIPoqzI33065830 = -208096060;    double pMTZIPoqzI11251930 = -670962328;    double pMTZIPoqzI59584526 = -196775833;    double pMTZIPoqzI65377209 = -791371651;    double pMTZIPoqzI29988192 = -455303318;    double pMTZIPoqzI60451529 = -302503097;    double pMTZIPoqzI75915580 = 84423575;    double pMTZIPoqzI5966822 = -782750953;    double pMTZIPoqzI81009865 = -972984769;    double pMTZIPoqzI25450095 = -969371282;    double pMTZIPoqzI36793453 = -189491435;    double pMTZIPoqzI9514014 = -375314847;    double pMTZIPoqzI48769861 = 84786684;    double pMTZIPoqzI40108638 = -660004034;    double pMTZIPoqzI50134529 = -702070075;    double pMTZIPoqzI13369634 = 38788032;    double pMTZIPoqzI30993905 = -925075311;    double pMTZIPoqzI96595849 = -430321444;    double pMTZIPoqzI58492806 = -363107972;    double pMTZIPoqzI80770193 = -635646485;    double pMTZIPoqzI74021355 = -829486829;    double pMTZIPoqzI28669704 = -954646857;    double pMTZIPoqzI37957258 = -424995348;    double pMTZIPoqzI95807521 = -917309605;    double pMTZIPoqzI67054185 = -398831716;    double pMTZIPoqzI74309449 = -447600745;    double pMTZIPoqzI30325772 = -450613131;    double pMTZIPoqzI76908109 = -442508610;    double pMTZIPoqzI26800557 = 15961981;    double pMTZIPoqzI63913485 = -669944993;    double pMTZIPoqzI68355040 = -577037313;    double pMTZIPoqzI50702891 = -451608920;    double pMTZIPoqzI81865396 = -426371769;    double pMTZIPoqzI32967131 = -773365844;    double pMTZIPoqzI18493728 = 49653358;    double pMTZIPoqzI84388769 = 85498569;    double pMTZIPoqzI63464262 = -310628865;    double pMTZIPoqzI89686333 = -194470858;    double pMTZIPoqzI50796778 = -143546328;    double pMTZIPoqzI98129192 = 53671252;    double pMTZIPoqzI24886332 = -720731489;    double pMTZIPoqzI7368234 = -440766047;    double pMTZIPoqzI97956175 = -768233583;    double pMTZIPoqzI21452146 = -331803341;    double pMTZIPoqzI30647489 = -555434948;    double pMTZIPoqzI99639884 = -402650081;    double pMTZIPoqzI45715246 = -988226851;    double pMTZIPoqzI94635289 = -334999560;    double pMTZIPoqzI84711973 = -251631533;    double pMTZIPoqzI99423251 = -190750257;    double pMTZIPoqzI4716380 = -790257224;    double pMTZIPoqzI44383033 = -159456903;    double pMTZIPoqzI80113527 = -747434290;    double pMTZIPoqzI58339791 = -656425514;    double pMTZIPoqzI69437551 = -680386967;    double pMTZIPoqzI4396126 = -253449204;    double pMTZIPoqzI73294671 = -145966980;    double pMTZIPoqzI63777004 = -279466228;    double pMTZIPoqzI98323024 = -292539936;    double pMTZIPoqzI55678742 = 92297426;    double pMTZIPoqzI30125758 = -851889967;    double pMTZIPoqzI99007471 = -473067815;    double pMTZIPoqzI79166264 = -698712935;    double pMTZIPoqzI17096381 = -203039776;    double pMTZIPoqzI57095055 = -292333969;    double pMTZIPoqzI86090561 = -737882515;    double pMTZIPoqzI27648618 = -948943078;    double pMTZIPoqzI15802730 = -762235986;     pMTZIPoqzI63248463 = pMTZIPoqzI76208083;     pMTZIPoqzI76208083 = pMTZIPoqzI68794556;     pMTZIPoqzI68794556 = pMTZIPoqzI65069699;     pMTZIPoqzI65069699 = pMTZIPoqzI11754612;     pMTZIPoqzI11754612 = pMTZIPoqzI39593443;     pMTZIPoqzI39593443 = pMTZIPoqzI99623769;     pMTZIPoqzI99623769 = pMTZIPoqzI9333923;     pMTZIPoqzI9333923 = pMTZIPoqzI89309225;     pMTZIPoqzI89309225 = pMTZIPoqzI20975380;     pMTZIPoqzI20975380 = pMTZIPoqzI76426037;     pMTZIPoqzI76426037 = pMTZIPoqzI51559558;     pMTZIPoqzI51559558 = pMTZIPoqzI95640698;     pMTZIPoqzI95640698 = pMTZIPoqzI23048788;     pMTZIPoqzI23048788 = pMTZIPoqzI55063543;     pMTZIPoqzI55063543 = pMTZIPoqzI80784970;     pMTZIPoqzI80784970 = pMTZIPoqzI58580721;     pMTZIPoqzI58580721 = pMTZIPoqzI801912;     pMTZIPoqzI801912 = pMTZIPoqzI13335055;     pMTZIPoqzI13335055 = pMTZIPoqzI78966040;     pMTZIPoqzI78966040 = pMTZIPoqzI46902241;     pMTZIPoqzI46902241 = pMTZIPoqzI67440941;     pMTZIPoqzI67440941 = pMTZIPoqzI9153899;     pMTZIPoqzI9153899 = pMTZIPoqzI94485106;     pMTZIPoqzI94485106 = pMTZIPoqzI34743927;     pMTZIPoqzI34743927 = pMTZIPoqzI34846503;     pMTZIPoqzI34846503 = pMTZIPoqzI12792886;     pMTZIPoqzI12792886 = pMTZIPoqzI35710285;     pMTZIPoqzI35710285 = pMTZIPoqzI40978882;     pMTZIPoqzI40978882 = pMTZIPoqzI38606334;     pMTZIPoqzI38606334 = pMTZIPoqzI39109984;     pMTZIPoqzI39109984 = pMTZIPoqzI43458906;     pMTZIPoqzI43458906 = pMTZIPoqzI33065830;     pMTZIPoqzI33065830 = pMTZIPoqzI11251930;     pMTZIPoqzI11251930 = pMTZIPoqzI59584526;     pMTZIPoqzI59584526 = pMTZIPoqzI65377209;     pMTZIPoqzI65377209 = pMTZIPoqzI29988192;     pMTZIPoqzI29988192 = pMTZIPoqzI60451529;     pMTZIPoqzI60451529 = pMTZIPoqzI75915580;     pMTZIPoqzI75915580 = pMTZIPoqzI5966822;     pMTZIPoqzI5966822 = pMTZIPoqzI81009865;     pMTZIPoqzI81009865 = pMTZIPoqzI25450095;     pMTZIPoqzI25450095 = pMTZIPoqzI36793453;     pMTZIPoqzI36793453 = pMTZIPoqzI9514014;     pMTZIPoqzI9514014 = pMTZIPoqzI48769861;     pMTZIPoqzI48769861 = pMTZIPoqzI40108638;     pMTZIPoqzI40108638 = pMTZIPoqzI50134529;     pMTZIPoqzI50134529 = pMTZIPoqzI13369634;     pMTZIPoqzI13369634 = pMTZIPoqzI30993905;     pMTZIPoqzI30993905 = pMTZIPoqzI96595849;     pMTZIPoqzI96595849 = pMTZIPoqzI58492806;     pMTZIPoqzI58492806 = pMTZIPoqzI80770193;     pMTZIPoqzI80770193 = pMTZIPoqzI74021355;     pMTZIPoqzI74021355 = pMTZIPoqzI28669704;     pMTZIPoqzI28669704 = pMTZIPoqzI37957258;     pMTZIPoqzI37957258 = pMTZIPoqzI95807521;     pMTZIPoqzI95807521 = pMTZIPoqzI67054185;     pMTZIPoqzI67054185 = pMTZIPoqzI74309449;     pMTZIPoqzI74309449 = pMTZIPoqzI30325772;     pMTZIPoqzI30325772 = pMTZIPoqzI76908109;     pMTZIPoqzI76908109 = pMTZIPoqzI26800557;     pMTZIPoqzI26800557 = pMTZIPoqzI63913485;     pMTZIPoqzI63913485 = pMTZIPoqzI68355040;     pMTZIPoqzI68355040 = pMTZIPoqzI50702891;     pMTZIPoqzI50702891 = pMTZIPoqzI81865396;     pMTZIPoqzI81865396 = pMTZIPoqzI32967131;     pMTZIPoqzI32967131 = pMTZIPoqzI18493728;     pMTZIPoqzI18493728 = pMTZIPoqzI84388769;     pMTZIPoqzI84388769 = pMTZIPoqzI63464262;     pMTZIPoqzI63464262 = pMTZIPoqzI89686333;     pMTZIPoqzI89686333 = pMTZIPoqzI50796778;     pMTZIPoqzI50796778 = pMTZIPoqzI98129192;     pMTZIPoqzI98129192 = pMTZIPoqzI24886332;     pMTZIPoqzI24886332 = pMTZIPoqzI7368234;     pMTZIPoqzI7368234 = pMTZIPoqzI97956175;     pMTZIPoqzI97956175 = pMTZIPoqzI21452146;     pMTZIPoqzI21452146 = pMTZIPoqzI30647489;     pMTZIPoqzI30647489 = pMTZIPoqzI99639884;     pMTZIPoqzI99639884 = pMTZIPoqzI45715246;     pMTZIPoqzI45715246 = pMTZIPoqzI94635289;     pMTZIPoqzI94635289 = pMTZIPoqzI84711973;     pMTZIPoqzI84711973 = pMTZIPoqzI99423251;     pMTZIPoqzI99423251 = pMTZIPoqzI4716380;     pMTZIPoqzI4716380 = pMTZIPoqzI44383033;     pMTZIPoqzI44383033 = pMTZIPoqzI80113527;     pMTZIPoqzI80113527 = pMTZIPoqzI58339791;     pMTZIPoqzI58339791 = pMTZIPoqzI69437551;     pMTZIPoqzI69437551 = pMTZIPoqzI4396126;     pMTZIPoqzI4396126 = pMTZIPoqzI73294671;     pMTZIPoqzI73294671 = pMTZIPoqzI63777004;     pMTZIPoqzI63777004 = pMTZIPoqzI98323024;     pMTZIPoqzI98323024 = pMTZIPoqzI55678742;     pMTZIPoqzI55678742 = pMTZIPoqzI30125758;     pMTZIPoqzI30125758 = pMTZIPoqzI99007471;     pMTZIPoqzI99007471 = pMTZIPoqzI79166264;     pMTZIPoqzI79166264 = pMTZIPoqzI17096381;     pMTZIPoqzI17096381 = pMTZIPoqzI57095055;     pMTZIPoqzI57095055 = pMTZIPoqzI86090561;     pMTZIPoqzI86090561 = pMTZIPoqzI27648618;     pMTZIPoqzI27648618 = pMTZIPoqzI15802730;     pMTZIPoqzI15802730 = pMTZIPoqzI63248463;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void UFQEGMWkwK97404687() {     double MjbUVCFjuh82716633 = -75367198;    double MjbUVCFjuh29231947 = -822674638;    double MjbUVCFjuh85631548 = -102669526;    double MjbUVCFjuh83716847 = -362190987;    double MjbUVCFjuh12201128 = -22482633;    double MjbUVCFjuh65185517 = -226485011;    double MjbUVCFjuh44455648 = -828583757;    double MjbUVCFjuh74584156 = -360623625;    double MjbUVCFjuh49996023 = -290342560;    double MjbUVCFjuh98904103 = -824029813;    double MjbUVCFjuh30649301 = -716229939;    double MjbUVCFjuh55054171 = -257745406;    double MjbUVCFjuh86012357 = -9821035;    double MjbUVCFjuh31464828 = -49690422;    double MjbUVCFjuh15590004 = -283926300;    double MjbUVCFjuh47000620 = -62041579;    double MjbUVCFjuh64542834 = -520606526;    double MjbUVCFjuh24864663 = -487062632;    double MjbUVCFjuh12969935 = -600721760;    double MjbUVCFjuh59577342 = -358754807;    double MjbUVCFjuh59358313 = -907386948;    double MjbUVCFjuh82423024 = -256729595;    double MjbUVCFjuh77326904 = -75539545;    double MjbUVCFjuh12206776 = -639984159;    double MjbUVCFjuh45947417 = -289303703;    double MjbUVCFjuh39613964 = -739496826;    double MjbUVCFjuh96721016 = 82886844;    double MjbUVCFjuh86501959 = -879065813;    double MjbUVCFjuh82723839 = -703689492;    double MjbUVCFjuh23313188 = -201980955;    double MjbUVCFjuh68914069 = -157398092;    double MjbUVCFjuh83038216 = 25777187;    double MjbUVCFjuh44541933 = -763303827;    double MjbUVCFjuh70008436 = -975565534;    double MjbUVCFjuh99514862 = -259478639;    double MjbUVCFjuh1443147 = 5059740;    double MjbUVCFjuh98371642 = -982179393;    double MjbUVCFjuh1934004 = -379711912;    double MjbUVCFjuh43228905 = -379991250;    double MjbUVCFjuh27248558 = -779282050;    double MjbUVCFjuh22491923 = -382771064;    double MjbUVCFjuh37309228 = -108267508;    double MjbUVCFjuh7926694 = -137293232;    double MjbUVCFjuh92899552 = -824387507;    double MjbUVCFjuh28798272 = -192336279;    double MjbUVCFjuh94569765 = -97335455;    double MjbUVCFjuh32124409 = -615763398;    double MjbUVCFjuh13525464 = -144499282;    double MjbUVCFjuh72129495 = -939014550;    double MjbUVCFjuh37494192 = -191333789;    double MjbUVCFjuh32928376 = -769472903;    double MjbUVCFjuh97219052 = 87000655;    double MjbUVCFjuh43846502 = -505595790;    double MjbUVCFjuh1599733 = -949240493;    double MjbUVCFjuh38046375 = -199553983;    double MjbUVCFjuh293610 = -818637604;    double MjbUVCFjuh51905043 = -647135094;    double MjbUVCFjuh73424773 = -462685368;    double MjbUVCFjuh37769431 = 27112716;    double MjbUVCFjuh72587164 = -282985808;    double MjbUVCFjuh68464500 = -209371856;    double MjbUVCFjuh57953689 = -949517944;    double MjbUVCFjuh91860317 = -656934133;    double MjbUVCFjuh26682835 = 11638395;    double MjbUVCFjuh29990034 = -566631722;    double MjbUVCFjuh47611084 = -642007126;    double MjbUVCFjuh10512238 = -494441580;    double MjbUVCFjuh16003922 = -34255501;    double MjbUVCFjuh31949966 = -790211784;    double MjbUVCFjuh14146858 = -188986041;    double MjbUVCFjuh48628977 = -79862187;    double MjbUVCFjuh62608831 = -40894614;    double MjbUVCFjuh81635758 = -7071382;    double MjbUVCFjuh85721376 = -821439711;    double MjbUVCFjuh37085420 = -975983743;    double MjbUVCFjuh22049085 = -699119441;    double MjbUVCFjuh74496330 = -19436363;    double MjbUVCFjuh84427352 = -251152038;    double MjbUVCFjuh83408503 = -347647880;    double MjbUVCFjuh51377651 = -91968248;    double MjbUVCFjuh7489555 = -23733428;    double MjbUVCFjuh83195553 = -772613874;    double MjbUVCFjuh14372464 = -940051264;    double MjbUVCFjuh45229647 = -412355704;    double MjbUVCFjuh90384812 = -432508053;    double MjbUVCFjuh71695016 = -144398747;    double MjbUVCFjuh39191715 = -468627024;    double MjbUVCFjuh42942201 = -814063334;    double MjbUVCFjuh31962062 = -676011552;    double MjbUVCFjuh99221253 = -440841035;    double MjbUVCFjuh49538104 = -347805166;    double MjbUVCFjuh24946870 = -419494025;    double MjbUVCFjuh64164572 = -306824628;    double MjbUVCFjuh70641741 = 2994557;    double MjbUVCFjuh58784057 = -469910195;    double MjbUVCFjuh64538234 = -433253120;    double MjbUVCFjuh45448911 = -451333375;    double MjbUVCFjuh81243859 = -48931628;    double MjbUVCFjuh62909518 = -157755786;    double MjbUVCFjuh81187188 = -75367198;     MjbUVCFjuh82716633 = MjbUVCFjuh29231947;     MjbUVCFjuh29231947 = MjbUVCFjuh85631548;     MjbUVCFjuh85631548 = MjbUVCFjuh83716847;     MjbUVCFjuh83716847 = MjbUVCFjuh12201128;     MjbUVCFjuh12201128 = MjbUVCFjuh65185517;     MjbUVCFjuh65185517 = MjbUVCFjuh44455648;     MjbUVCFjuh44455648 = MjbUVCFjuh74584156;     MjbUVCFjuh74584156 = MjbUVCFjuh49996023;     MjbUVCFjuh49996023 = MjbUVCFjuh98904103;     MjbUVCFjuh98904103 = MjbUVCFjuh30649301;     MjbUVCFjuh30649301 = MjbUVCFjuh55054171;     MjbUVCFjuh55054171 = MjbUVCFjuh86012357;     MjbUVCFjuh86012357 = MjbUVCFjuh31464828;     MjbUVCFjuh31464828 = MjbUVCFjuh15590004;     MjbUVCFjuh15590004 = MjbUVCFjuh47000620;     MjbUVCFjuh47000620 = MjbUVCFjuh64542834;     MjbUVCFjuh64542834 = MjbUVCFjuh24864663;     MjbUVCFjuh24864663 = MjbUVCFjuh12969935;     MjbUVCFjuh12969935 = MjbUVCFjuh59577342;     MjbUVCFjuh59577342 = MjbUVCFjuh59358313;     MjbUVCFjuh59358313 = MjbUVCFjuh82423024;     MjbUVCFjuh82423024 = MjbUVCFjuh77326904;     MjbUVCFjuh77326904 = MjbUVCFjuh12206776;     MjbUVCFjuh12206776 = MjbUVCFjuh45947417;     MjbUVCFjuh45947417 = MjbUVCFjuh39613964;     MjbUVCFjuh39613964 = MjbUVCFjuh96721016;     MjbUVCFjuh96721016 = MjbUVCFjuh86501959;     MjbUVCFjuh86501959 = MjbUVCFjuh82723839;     MjbUVCFjuh82723839 = MjbUVCFjuh23313188;     MjbUVCFjuh23313188 = MjbUVCFjuh68914069;     MjbUVCFjuh68914069 = MjbUVCFjuh83038216;     MjbUVCFjuh83038216 = MjbUVCFjuh44541933;     MjbUVCFjuh44541933 = MjbUVCFjuh70008436;     MjbUVCFjuh70008436 = MjbUVCFjuh99514862;     MjbUVCFjuh99514862 = MjbUVCFjuh1443147;     MjbUVCFjuh1443147 = MjbUVCFjuh98371642;     MjbUVCFjuh98371642 = MjbUVCFjuh1934004;     MjbUVCFjuh1934004 = MjbUVCFjuh43228905;     MjbUVCFjuh43228905 = MjbUVCFjuh27248558;     MjbUVCFjuh27248558 = MjbUVCFjuh22491923;     MjbUVCFjuh22491923 = MjbUVCFjuh37309228;     MjbUVCFjuh37309228 = MjbUVCFjuh7926694;     MjbUVCFjuh7926694 = MjbUVCFjuh92899552;     MjbUVCFjuh92899552 = MjbUVCFjuh28798272;     MjbUVCFjuh28798272 = MjbUVCFjuh94569765;     MjbUVCFjuh94569765 = MjbUVCFjuh32124409;     MjbUVCFjuh32124409 = MjbUVCFjuh13525464;     MjbUVCFjuh13525464 = MjbUVCFjuh72129495;     MjbUVCFjuh72129495 = MjbUVCFjuh37494192;     MjbUVCFjuh37494192 = MjbUVCFjuh32928376;     MjbUVCFjuh32928376 = MjbUVCFjuh97219052;     MjbUVCFjuh97219052 = MjbUVCFjuh43846502;     MjbUVCFjuh43846502 = MjbUVCFjuh1599733;     MjbUVCFjuh1599733 = MjbUVCFjuh38046375;     MjbUVCFjuh38046375 = MjbUVCFjuh293610;     MjbUVCFjuh293610 = MjbUVCFjuh51905043;     MjbUVCFjuh51905043 = MjbUVCFjuh73424773;     MjbUVCFjuh73424773 = MjbUVCFjuh37769431;     MjbUVCFjuh37769431 = MjbUVCFjuh72587164;     MjbUVCFjuh72587164 = MjbUVCFjuh68464500;     MjbUVCFjuh68464500 = MjbUVCFjuh57953689;     MjbUVCFjuh57953689 = MjbUVCFjuh91860317;     MjbUVCFjuh91860317 = MjbUVCFjuh26682835;     MjbUVCFjuh26682835 = MjbUVCFjuh29990034;     MjbUVCFjuh29990034 = MjbUVCFjuh47611084;     MjbUVCFjuh47611084 = MjbUVCFjuh10512238;     MjbUVCFjuh10512238 = MjbUVCFjuh16003922;     MjbUVCFjuh16003922 = MjbUVCFjuh31949966;     MjbUVCFjuh31949966 = MjbUVCFjuh14146858;     MjbUVCFjuh14146858 = MjbUVCFjuh48628977;     MjbUVCFjuh48628977 = MjbUVCFjuh62608831;     MjbUVCFjuh62608831 = MjbUVCFjuh81635758;     MjbUVCFjuh81635758 = MjbUVCFjuh85721376;     MjbUVCFjuh85721376 = MjbUVCFjuh37085420;     MjbUVCFjuh37085420 = MjbUVCFjuh22049085;     MjbUVCFjuh22049085 = MjbUVCFjuh74496330;     MjbUVCFjuh74496330 = MjbUVCFjuh84427352;     MjbUVCFjuh84427352 = MjbUVCFjuh83408503;     MjbUVCFjuh83408503 = MjbUVCFjuh51377651;     MjbUVCFjuh51377651 = MjbUVCFjuh7489555;     MjbUVCFjuh7489555 = MjbUVCFjuh83195553;     MjbUVCFjuh83195553 = MjbUVCFjuh14372464;     MjbUVCFjuh14372464 = MjbUVCFjuh45229647;     MjbUVCFjuh45229647 = MjbUVCFjuh90384812;     MjbUVCFjuh90384812 = MjbUVCFjuh71695016;     MjbUVCFjuh71695016 = MjbUVCFjuh39191715;     MjbUVCFjuh39191715 = MjbUVCFjuh42942201;     MjbUVCFjuh42942201 = MjbUVCFjuh31962062;     MjbUVCFjuh31962062 = MjbUVCFjuh99221253;     MjbUVCFjuh99221253 = MjbUVCFjuh49538104;     MjbUVCFjuh49538104 = MjbUVCFjuh24946870;     MjbUVCFjuh24946870 = MjbUVCFjuh64164572;     MjbUVCFjuh64164572 = MjbUVCFjuh70641741;     MjbUVCFjuh70641741 = MjbUVCFjuh58784057;     MjbUVCFjuh58784057 = MjbUVCFjuh64538234;     MjbUVCFjuh64538234 = MjbUVCFjuh45448911;     MjbUVCFjuh45448911 = MjbUVCFjuh81243859;     MjbUVCFjuh81243859 = MjbUVCFjuh62909518;     MjbUVCFjuh62909518 = MjbUVCFjuh81187188;     MjbUVCFjuh81187188 = MjbUVCFjuh82716633;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void wWOwfPgqCB93587847() {     double NsJxOIkNnR42312730 = -304123575;    double NsJxOIkNnR30737797 = -632830023;    double NsJxOIkNnR22632936 = -176810449;    double NsJxOIkNnR79592606 = -134801864;    double NsJxOIkNnR23494354 = 77010340;    double NsJxOIkNnR62862637 = -84744685;    double NsJxOIkNnR41814131 = -158301343;    double NsJxOIkNnR25409440 = -714835000;    double NsJxOIkNnR63809466 = -823015059;    double NsJxOIkNnR81928618 = -765288667;    double NsJxOIkNnR55944232 = -17772378;    double NsJxOIkNnR89725372 = -352766656;    double NsJxOIkNnR56766921 = 84000447;    double NsJxOIkNnR89838666 = 46151230;    double NsJxOIkNnR12897810 = 23547179;    double NsJxOIkNnR43754874 = -967414471;    double NsJxOIkNnR503939 = -448822806;    double NsJxOIkNnR89532994 = -856398737;    double NsJxOIkNnR93412137 = -739841390;    double NsJxOIkNnR39494452 = 78836540;    double NsJxOIkNnR39819432 = -740407772;    double NsJxOIkNnR50912623 = -149131473;    double NsJxOIkNnR69518729 = -939834624;    double NsJxOIkNnR76937014 = -204322396;    double NsJxOIkNnR21925422 = -845441293;    double NsJxOIkNnR34028871 = -874114297;    double NsJxOIkNnR10061087 = -366593154;    double NsJxOIkNnR51613128 = -400447403;    double NsJxOIkNnR32508182 = -493282107;    double NsJxOIkNnR61786655 = -248964198;    double NsJxOIkNnR93828387 = -802617420;    double NsJxOIkNnR25803477 = -391440811;    double NsJxOIkNnR93623972 = -743250700;    double NsJxOIkNnR52532879 = -477449465;    double NsJxOIkNnR4452224 = 92311376;    double NsJxOIkNnR80033042 = -306596841;    double NsJxOIkNnR89003320 = -174958028;    double NsJxOIkNnR294342 = -324164302;    double NsJxOIkNnR62246848 = -98697767;    double NsJxOIkNnR74213 = 46837002;    double NsJxOIkNnR80709736 = -851432661;    double NsJxOIkNnR7388410 = -113208926;    double NsJxOIkNnR48805936 = -970738062;    double NsJxOIkNnR67139057 = -148302246;    double NsJxOIkNnR29786588 = -738654348;    double NsJxOIkNnR59362894 = -340279614;    double NsJxOIkNnR37613131 = -507619065;    double NsJxOIkNnR60221857 = -477252511;    double NsJxOIkNnR11519144 = -122952169;    double NsJxOIkNnR52661584 = -512586249;    double NsJxOIkNnR83414625 = -555581127;    double NsJxOIkNnR3804206 = -984242600;    double NsJxOIkNnR19262016 = -745544243;    double NsJxOIkNnR74874255 = -109409448;    double NsJxOIkNnR53768416 = -163488070;    double NsJxOIkNnR91400107 = -54992103;    double NsJxOIkNnR61219067 = -692995400;    double NsJxOIkNnR45695922 = -972488054;    double NsJxOIkNnR57667185 = -289360572;    double NsJxOIkNnR89465483 = -48875364;    double NsJxOIkNnR52801550 = -718151532;    double NsJxOIkNnR90201002 = -757853940;    double NsJxOIkNnR92901258 = -121552894;    double NsJxOIkNnR2022812 = -474050862;    double NsJxOIkNnR88100230 = -962671248;    double NsJxOIkNnR30140755 = -626331568;    double NsJxOIkNnR96101400 = -609515957;    double NsJxOIkNnR4234043 = -438550088;    double NsJxOIkNnR85386443 = 53839854;    double NsJxOIkNnR32864767 = -669855980;    double NsJxOIkNnR54751553 = -692456443;    double NsJxOIkNnR209598 = -24658504;    double NsJxOIkNnR27286146 = -657700971;    double NsJxOIkNnR93337924 = -686678393;    double NsJxOIkNnR58784715 = -69730800;    double NsJxOIkNnR32431022 = -527198847;    double NsJxOIkNnR2106687 = -178393411;    double NsJxOIkNnR2379673 = -691532378;    double NsJxOIkNnR47150427 = -465668048;    double NsJxOIkNnR62562527 = -405161680;    double NsJxOIkNnR96415739 = -266495232;    double NsJxOIkNnR49839229 = -889340643;    double NsJxOIkNnR40093985 = -177495235;    double NsJxOIkNnR79846597 = -980695858;    double NsJxOIkNnR78372029 = -693383071;    double NsJxOIkNnR90024181 = -818374820;    double NsJxOIkNnR6541462 = -645896568;    double NsJxOIkNnR18749717 = -533841252;    double NsJxOIkNnR98764462 = -213961396;    double NsJxOIkNnR13052116 = -852696521;    double NsJxOIkNnR18813976 = -613601442;    double NsJxOIkNnR43307399 = -202469974;    double NsJxOIkNnR42627156 = 65196269;    double NsJxOIkNnR72781364 = 50177597;    double NsJxOIkNnR47272662 = -235011467;    double NsJxOIkNnR90508733 = 6421279;    double NsJxOIkNnR14487152 = -991656033;    double NsJxOIkNnR46783124 = -396687200;    double NsJxOIkNnR79038826 = -185630999;    double NsJxOIkNnR99645832 = -304123575;     NsJxOIkNnR42312730 = NsJxOIkNnR30737797;     NsJxOIkNnR30737797 = NsJxOIkNnR22632936;     NsJxOIkNnR22632936 = NsJxOIkNnR79592606;     NsJxOIkNnR79592606 = NsJxOIkNnR23494354;     NsJxOIkNnR23494354 = NsJxOIkNnR62862637;     NsJxOIkNnR62862637 = NsJxOIkNnR41814131;     NsJxOIkNnR41814131 = NsJxOIkNnR25409440;     NsJxOIkNnR25409440 = NsJxOIkNnR63809466;     NsJxOIkNnR63809466 = NsJxOIkNnR81928618;     NsJxOIkNnR81928618 = NsJxOIkNnR55944232;     NsJxOIkNnR55944232 = NsJxOIkNnR89725372;     NsJxOIkNnR89725372 = NsJxOIkNnR56766921;     NsJxOIkNnR56766921 = NsJxOIkNnR89838666;     NsJxOIkNnR89838666 = NsJxOIkNnR12897810;     NsJxOIkNnR12897810 = NsJxOIkNnR43754874;     NsJxOIkNnR43754874 = NsJxOIkNnR503939;     NsJxOIkNnR503939 = NsJxOIkNnR89532994;     NsJxOIkNnR89532994 = NsJxOIkNnR93412137;     NsJxOIkNnR93412137 = NsJxOIkNnR39494452;     NsJxOIkNnR39494452 = NsJxOIkNnR39819432;     NsJxOIkNnR39819432 = NsJxOIkNnR50912623;     NsJxOIkNnR50912623 = NsJxOIkNnR69518729;     NsJxOIkNnR69518729 = NsJxOIkNnR76937014;     NsJxOIkNnR76937014 = NsJxOIkNnR21925422;     NsJxOIkNnR21925422 = NsJxOIkNnR34028871;     NsJxOIkNnR34028871 = NsJxOIkNnR10061087;     NsJxOIkNnR10061087 = NsJxOIkNnR51613128;     NsJxOIkNnR51613128 = NsJxOIkNnR32508182;     NsJxOIkNnR32508182 = NsJxOIkNnR61786655;     NsJxOIkNnR61786655 = NsJxOIkNnR93828387;     NsJxOIkNnR93828387 = NsJxOIkNnR25803477;     NsJxOIkNnR25803477 = NsJxOIkNnR93623972;     NsJxOIkNnR93623972 = NsJxOIkNnR52532879;     NsJxOIkNnR52532879 = NsJxOIkNnR4452224;     NsJxOIkNnR4452224 = NsJxOIkNnR80033042;     NsJxOIkNnR80033042 = NsJxOIkNnR89003320;     NsJxOIkNnR89003320 = NsJxOIkNnR294342;     NsJxOIkNnR294342 = NsJxOIkNnR62246848;     NsJxOIkNnR62246848 = NsJxOIkNnR74213;     NsJxOIkNnR74213 = NsJxOIkNnR80709736;     NsJxOIkNnR80709736 = NsJxOIkNnR7388410;     NsJxOIkNnR7388410 = NsJxOIkNnR48805936;     NsJxOIkNnR48805936 = NsJxOIkNnR67139057;     NsJxOIkNnR67139057 = NsJxOIkNnR29786588;     NsJxOIkNnR29786588 = NsJxOIkNnR59362894;     NsJxOIkNnR59362894 = NsJxOIkNnR37613131;     NsJxOIkNnR37613131 = NsJxOIkNnR60221857;     NsJxOIkNnR60221857 = NsJxOIkNnR11519144;     NsJxOIkNnR11519144 = NsJxOIkNnR52661584;     NsJxOIkNnR52661584 = NsJxOIkNnR83414625;     NsJxOIkNnR83414625 = NsJxOIkNnR3804206;     NsJxOIkNnR3804206 = NsJxOIkNnR19262016;     NsJxOIkNnR19262016 = NsJxOIkNnR74874255;     NsJxOIkNnR74874255 = NsJxOIkNnR53768416;     NsJxOIkNnR53768416 = NsJxOIkNnR91400107;     NsJxOIkNnR91400107 = NsJxOIkNnR61219067;     NsJxOIkNnR61219067 = NsJxOIkNnR45695922;     NsJxOIkNnR45695922 = NsJxOIkNnR57667185;     NsJxOIkNnR57667185 = NsJxOIkNnR89465483;     NsJxOIkNnR89465483 = NsJxOIkNnR52801550;     NsJxOIkNnR52801550 = NsJxOIkNnR90201002;     NsJxOIkNnR90201002 = NsJxOIkNnR92901258;     NsJxOIkNnR92901258 = NsJxOIkNnR2022812;     NsJxOIkNnR2022812 = NsJxOIkNnR88100230;     NsJxOIkNnR88100230 = NsJxOIkNnR30140755;     NsJxOIkNnR30140755 = NsJxOIkNnR96101400;     NsJxOIkNnR96101400 = NsJxOIkNnR4234043;     NsJxOIkNnR4234043 = NsJxOIkNnR85386443;     NsJxOIkNnR85386443 = NsJxOIkNnR32864767;     NsJxOIkNnR32864767 = NsJxOIkNnR54751553;     NsJxOIkNnR54751553 = NsJxOIkNnR209598;     NsJxOIkNnR209598 = NsJxOIkNnR27286146;     NsJxOIkNnR27286146 = NsJxOIkNnR93337924;     NsJxOIkNnR93337924 = NsJxOIkNnR58784715;     NsJxOIkNnR58784715 = NsJxOIkNnR32431022;     NsJxOIkNnR32431022 = NsJxOIkNnR2106687;     NsJxOIkNnR2106687 = NsJxOIkNnR2379673;     NsJxOIkNnR2379673 = NsJxOIkNnR47150427;     NsJxOIkNnR47150427 = NsJxOIkNnR62562527;     NsJxOIkNnR62562527 = NsJxOIkNnR96415739;     NsJxOIkNnR96415739 = NsJxOIkNnR49839229;     NsJxOIkNnR49839229 = NsJxOIkNnR40093985;     NsJxOIkNnR40093985 = NsJxOIkNnR79846597;     NsJxOIkNnR79846597 = NsJxOIkNnR78372029;     NsJxOIkNnR78372029 = NsJxOIkNnR90024181;     NsJxOIkNnR90024181 = NsJxOIkNnR6541462;     NsJxOIkNnR6541462 = NsJxOIkNnR18749717;     NsJxOIkNnR18749717 = NsJxOIkNnR98764462;     NsJxOIkNnR98764462 = NsJxOIkNnR13052116;     NsJxOIkNnR13052116 = NsJxOIkNnR18813976;     NsJxOIkNnR18813976 = NsJxOIkNnR43307399;     NsJxOIkNnR43307399 = NsJxOIkNnR42627156;     NsJxOIkNnR42627156 = NsJxOIkNnR72781364;     NsJxOIkNnR72781364 = NsJxOIkNnR47272662;     NsJxOIkNnR47272662 = NsJxOIkNnR90508733;     NsJxOIkNnR90508733 = NsJxOIkNnR14487152;     NsJxOIkNnR14487152 = NsJxOIkNnR46783124;     NsJxOIkNnR46783124 = NsJxOIkNnR79038826;     NsJxOIkNnR79038826 = NsJxOIkNnR99645832;     NsJxOIkNnR99645832 = NsJxOIkNnR42312730;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void JcHlsiMXBJ53890505() {     double kCZIQCuwJb32439039 = -362879776;    double kCZIQCuwJb13862862 = 92243806;    double kCZIQCuwJb18125635 = -313604910;    double kCZIQCuwJb53091181 = -320973686;    double kCZIQCuwJb36551090 = -964313102;    double kCZIQCuwJb43649042 = 22622207;    double kCZIQCuwJb36477569 = -895846816;    double kCZIQCuwJb78288003 = -351282739;    double kCZIQCuwJb87621153 = -830907697;    double kCZIQCuwJb86184288 = -335163192;    double kCZIQCuwJb32096051 = -526192536;    double kCZIQCuwJb24474881 = -932354791;    double kCZIQCuwJb95113053 = -228235413;    double kCZIQCuwJb28257521 = 47990346;    double kCZIQCuwJb10972182 = -461573764;    double kCZIQCuwJb67934616 = -667794341;    double kCZIQCuwJb44466119 = -710168047;    double kCZIQCuwJb10888707 = -199248029;    double kCZIQCuwJb54326528 = -106251826;    double kCZIQCuwJb6818700 = -569041770;    double kCZIQCuwJb27741834 = -444832865;    double kCZIQCuwJb48994205 = -482228108;    double kCZIQCuwJb2757148 = -246294545;    double kCZIQCuwJb84858111 = -652346771;    double kCZIQCuwJb68810609 = -388952237;    double kCZIQCuwJb52819836 = -749988031;    double kCZIQCuwJb32028422 = -126122147;    double kCZIQCuwJb74783503 = -460337462;    double kCZIQCuwJb93717179 = -155481155;    double kCZIQCuwJb9575735 = -123366589;    double kCZIQCuwJb97291790 = -29283963;    double kCZIQCuwJb25170391 = -892265230;    double kCZIQCuwJb2593014 = 56524141;    double kCZIQCuwJb76371523 = -468900623;    double kCZIQCuwJb40048758 = -658024285;    double kCZIQCuwJb33264050 = -609626252;    double kCZIQCuwJb89236889 = -790773932;    double kCZIQCuwJb24651625 = -190223546;    double kCZIQCuwJb72779865 = -906159812;    double kCZIQCuwJb44586354 = -957870771;    double kCZIQCuwJb94409409 = -557293936;    double kCZIQCuwJb62032872 = 72297861;    double kCZIQCuwJb8622778 = -346163657;    double kCZIQCuwJb97800998 = -12385435;    double kCZIQCuwJb21751005 = -851164304;    double kCZIQCuwJb79801887 = -823903519;    double kCZIQCuwJb18036422 = -56101565;    double kCZIQCuwJb50608317 = -503908764;    double kCZIQCuwJb39437797 = -558891516;    double kCZIQCuwJb81941990 = -969582587;    double kCZIQCuwJb12780150 = -929963171;    double kCZIQCuwJb47577313 = -948669433;    double kCZIQCuwJb68714471 = -457397238;    double kCZIQCuwJb27781318 = -232964730;    double kCZIQCuwJb26148672 = -292088342;    double kCZIQCuwJb83444833 = -880651669;    double kCZIQCuwJb11105714 = -661461649;    double kCZIQCuwJb33267524 = -661258139;    double kCZIQCuwJb84280571 = -932021450;    double kCZIQCuwJb83731254 = -114325071;    double kCZIQCuwJb11620620 = -851255646;    double kCZIQCuwJb61694066 = -335509355;    double kCZIQCuwJb84570823 = -95801584;    double kCZIQCuwJb78045419 = -607541108;    double kCZIQCuwJb88892498 = -205879229;    double kCZIQCuwJb6925660 = -633927306;    double kCZIQCuwJb21881867 = -888878932;    double kCZIQCuwJb18741530 = -759334791;    double kCZIQCuwJb88208762 = -293985370;    double kCZIQCuwJb77708132 = -851947513;    double kCZIQCuwJb78697726 = -877020409;    double kCZIQCuwJb19814494 = -419944502;    double kCZIQCuwJb38108842 = -293088217;    double kCZIQCuwJb9740175 = -148381055;    double kCZIQCuwJb12409291 = 88252166;    double kCZIQCuwJb65708961 = -417130726;    double kCZIQCuwJb40371428 = -36064451;    double kCZIQCuwJb4956150 = -133909111;    double kCZIQCuwJb63107106 = -801182468;    double kCZIQCuwJb89008721 = -565048718;    double kCZIQCuwJb34783414 = -593886467;    double kCZIQCuwJb81420105 = -622213384;    double kCZIQCuwJb35345706 = -901445946;    double kCZIQCuwJb11775190 = -185898569;    double kCZIQCuwJb96795585 = -193403418;    double kCZIQCuwJb49714477 = -80614531;    double kCZIQCuwJb56455920 = -334867993;    double kCZIQCuwJb74811695 = -710511130;    double kCZIQCuwJb50222852 = -76812282;    double kCZIQCuwJb56603924 = -777372617;    double kCZIQCuwJb22158336 = -948164603;    double kCZIQCuwJb55969366 = -29515793;    double kCZIQCuwJb40371053 = -258202097;    double kCZIQCuwJb89048611 = -691834742;    double kCZIQCuwJb32965734 = -6615126;    double kCZIQCuwJb32715344 = -121784582;    double kCZIQCuwJb77462049 = -831900555;    double kCZIQCuwJb30577358 = -738622549;    double kCZIQCuwJb8908501 = -806506206;    double kCZIQCuwJb14825345 = -362879776;     kCZIQCuwJb32439039 = kCZIQCuwJb13862862;     kCZIQCuwJb13862862 = kCZIQCuwJb18125635;     kCZIQCuwJb18125635 = kCZIQCuwJb53091181;     kCZIQCuwJb53091181 = kCZIQCuwJb36551090;     kCZIQCuwJb36551090 = kCZIQCuwJb43649042;     kCZIQCuwJb43649042 = kCZIQCuwJb36477569;     kCZIQCuwJb36477569 = kCZIQCuwJb78288003;     kCZIQCuwJb78288003 = kCZIQCuwJb87621153;     kCZIQCuwJb87621153 = kCZIQCuwJb86184288;     kCZIQCuwJb86184288 = kCZIQCuwJb32096051;     kCZIQCuwJb32096051 = kCZIQCuwJb24474881;     kCZIQCuwJb24474881 = kCZIQCuwJb95113053;     kCZIQCuwJb95113053 = kCZIQCuwJb28257521;     kCZIQCuwJb28257521 = kCZIQCuwJb10972182;     kCZIQCuwJb10972182 = kCZIQCuwJb67934616;     kCZIQCuwJb67934616 = kCZIQCuwJb44466119;     kCZIQCuwJb44466119 = kCZIQCuwJb10888707;     kCZIQCuwJb10888707 = kCZIQCuwJb54326528;     kCZIQCuwJb54326528 = kCZIQCuwJb6818700;     kCZIQCuwJb6818700 = kCZIQCuwJb27741834;     kCZIQCuwJb27741834 = kCZIQCuwJb48994205;     kCZIQCuwJb48994205 = kCZIQCuwJb2757148;     kCZIQCuwJb2757148 = kCZIQCuwJb84858111;     kCZIQCuwJb84858111 = kCZIQCuwJb68810609;     kCZIQCuwJb68810609 = kCZIQCuwJb52819836;     kCZIQCuwJb52819836 = kCZIQCuwJb32028422;     kCZIQCuwJb32028422 = kCZIQCuwJb74783503;     kCZIQCuwJb74783503 = kCZIQCuwJb93717179;     kCZIQCuwJb93717179 = kCZIQCuwJb9575735;     kCZIQCuwJb9575735 = kCZIQCuwJb97291790;     kCZIQCuwJb97291790 = kCZIQCuwJb25170391;     kCZIQCuwJb25170391 = kCZIQCuwJb2593014;     kCZIQCuwJb2593014 = kCZIQCuwJb76371523;     kCZIQCuwJb76371523 = kCZIQCuwJb40048758;     kCZIQCuwJb40048758 = kCZIQCuwJb33264050;     kCZIQCuwJb33264050 = kCZIQCuwJb89236889;     kCZIQCuwJb89236889 = kCZIQCuwJb24651625;     kCZIQCuwJb24651625 = kCZIQCuwJb72779865;     kCZIQCuwJb72779865 = kCZIQCuwJb44586354;     kCZIQCuwJb44586354 = kCZIQCuwJb94409409;     kCZIQCuwJb94409409 = kCZIQCuwJb62032872;     kCZIQCuwJb62032872 = kCZIQCuwJb8622778;     kCZIQCuwJb8622778 = kCZIQCuwJb97800998;     kCZIQCuwJb97800998 = kCZIQCuwJb21751005;     kCZIQCuwJb21751005 = kCZIQCuwJb79801887;     kCZIQCuwJb79801887 = kCZIQCuwJb18036422;     kCZIQCuwJb18036422 = kCZIQCuwJb50608317;     kCZIQCuwJb50608317 = kCZIQCuwJb39437797;     kCZIQCuwJb39437797 = kCZIQCuwJb81941990;     kCZIQCuwJb81941990 = kCZIQCuwJb12780150;     kCZIQCuwJb12780150 = kCZIQCuwJb47577313;     kCZIQCuwJb47577313 = kCZIQCuwJb68714471;     kCZIQCuwJb68714471 = kCZIQCuwJb27781318;     kCZIQCuwJb27781318 = kCZIQCuwJb26148672;     kCZIQCuwJb26148672 = kCZIQCuwJb83444833;     kCZIQCuwJb83444833 = kCZIQCuwJb11105714;     kCZIQCuwJb11105714 = kCZIQCuwJb33267524;     kCZIQCuwJb33267524 = kCZIQCuwJb84280571;     kCZIQCuwJb84280571 = kCZIQCuwJb83731254;     kCZIQCuwJb83731254 = kCZIQCuwJb11620620;     kCZIQCuwJb11620620 = kCZIQCuwJb61694066;     kCZIQCuwJb61694066 = kCZIQCuwJb84570823;     kCZIQCuwJb84570823 = kCZIQCuwJb78045419;     kCZIQCuwJb78045419 = kCZIQCuwJb88892498;     kCZIQCuwJb88892498 = kCZIQCuwJb6925660;     kCZIQCuwJb6925660 = kCZIQCuwJb21881867;     kCZIQCuwJb21881867 = kCZIQCuwJb18741530;     kCZIQCuwJb18741530 = kCZIQCuwJb88208762;     kCZIQCuwJb88208762 = kCZIQCuwJb77708132;     kCZIQCuwJb77708132 = kCZIQCuwJb78697726;     kCZIQCuwJb78697726 = kCZIQCuwJb19814494;     kCZIQCuwJb19814494 = kCZIQCuwJb38108842;     kCZIQCuwJb38108842 = kCZIQCuwJb9740175;     kCZIQCuwJb9740175 = kCZIQCuwJb12409291;     kCZIQCuwJb12409291 = kCZIQCuwJb65708961;     kCZIQCuwJb65708961 = kCZIQCuwJb40371428;     kCZIQCuwJb40371428 = kCZIQCuwJb4956150;     kCZIQCuwJb4956150 = kCZIQCuwJb63107106;     kCZIQCuwJb63107106 = kCZIQCuwJb89008721;     kCZIQCuwJb89008721 = kCZIQCuwJb34783414;     kCZIQCuwJb34783414 = kCZIQCuwJb81420105;     kCZIQCuwJb81420105 = kCZIQCuwJb35345706;     kCZIQCuwJb35345706 = kCZIQCuwJb11775190;     kCZIQCuwJb11775190 = kCZIQCuwJb96795585;     kCZIQCuwJb96795585 = kCZIQCuwJb49714477;     kCZIQCuwJb49714477 = kCZIQCuwJb56455920;     kCZIQCuwJb56455920 = kCZIQCuwJb74811695;     kCZIQCuwJb74811695 = kCZIQCuwJb50222852;     kCZIQCuwJb50222852 = kCZIQCuwJb56603924;     kCZIQCuwJb56603924 = kCZIQCuwJb22158336;     kCZIQCuwJb22158336 = kCZIQCuwJb55969366;     kCZIQCuwJb55969366 = kCZIQCuwJb40371053;     kCZIQCuwJb40371053 = kCZIQCuwJb89048611;     kCZIQCuwJb89048611 = kCZIQCuwJb32965734;     kCZIQCuwJb32965734 = kCZIQCuwJb32715344;     kCZIQCuwJb32715344 = kCZIQCuwJb77462049;     kCZIQCuwJb77462049 = kCZIQCuwJb30577358;     kCZIQCuwJb30577358 = kCZIQCuwJb8908501;     kCZIQCuwJb8908501 = kCZIQCuwJb14825345;     kCZIQCuwJb14825345 = kCZIQCuwJb32439039;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void mCyWZgrsGN66435694() {     double HEZqoSaZLV51907209 = -776010988;    double HEZqoSaZLV66886725 = -453634190;    double HEZqoSaZLV34962627 = 34766475;    double HEZqoSaZLV71738329 = -137547949;    double HEZqoSaZLV36997606 = -490585518;    double HEZqoSaZLV69241116 = -967862561;    double HEZqoSaZLV81309447 = -239153045;    double HEZqoSaZLV43538237 = -445090705;    double HEZqoSaZLV48307951 = -459099076;    double HEZqoSaZLV64113012 = -340749238;    double HEZqoSaZLV86319314 = -959182836;    double HEZqoSaZLV27969494 = -931657496;    double HEZqoSaZLV85484712 = -652592690;    double HEZqoSaZLV36673561 = -494295380;    double HEZqoSaZLV71498643 = -759657555;    double HEZqoSaZLV34150265 = -30986274;    double HEZqoSaZLV50428232 = -881942729;    double HEZqoSaZLV34951458 = 49997253;    double HEZqoSaZLV53961408 = -483456587;    double HEZqoSaZLV87430001 = -186578226;    double HEZqoSaZLV40197906 = 48954810;    double HEZqoSaZLV63976288 = -994031321;    double HEZqoSaZLV70930153 = -543869164;    double HEZqoSaZLV2579780 = -288890763;    double HEZqoSaZLV80014098 = -683252346;    double HEZqoSaZLV57587297 = -435783250;    double HEZqoSaZLV15956553 = -891273079;    double HEZqoSaZLV25575179 = -624070740;    double HEZqoSaZLV35462137 = -169392301;    double HEZqoSaZLV94282588 = -214805283;    double HEZqoSaZLV27095876 = -994610056;    double HEZqoSaZLV64749702 = -356614248;    double HEZqoSaZLV14069117 = -498683626;    double HEZqoSaZLV35128031 = -773503830;    double HEZqoSaZLV79979093 = -720727091;    double HEZqoSaZLV69329986 = -913194860;    double HEZqoSaZLV57620340 = -217650007;    double HEZqoSaZLV66134099 = -267432361;    double HEZqoSaZLV40093190 = -270574637;    double HEZqoSaZLV65868090 = -954401868;    double HEZqoSaZLV35891467 = 32919768;    double HEZqoSaZLV73892005 = -166598365;    double HEZqoSaZLV79756018 = -293965455;    double HEZqoSaZLV81186537 = -461458096;    double HEZqoSaZLV1779416 = -28287267;    double HEZqoSaZLV34263015 = -261234940;    double HEZqoSaZLV26302 = 30205112;    double HEZqoSaZLV50764147 = -687196078;    double HEZqoSaZLV80573388 = -572830754;    double HEZqoSaZLV22840333 = -730594932;    double HEZqoSaZLV87215718 = -236328103;    double HEZqoSaZLV64026173 = -226022292;    double HEZqoSaZLV38539617 = -133506199;    double HEZqoSaZLV711347 = -227558367;    double HEZqoSaZLV26237788 = -66646977;    double HEZqoSaZLV87930921 = -781979667;    double HEZqoSaZLV95956571 = -909765027;    double HEZqoSaZLV32382847 = -676342763;    double HEZqoSaZLV91724231 = -454295603;    double HEZqoSaZLV79410308 = 45197731;    double HEZqoSaZLV53284563 = 23410518;    double HEZqoSaZLV55734269 = -615082305;    double HEZqoSaZLV8076100 = -175698404;    double HEZqoSaZLV54025362 = -144293793;    double HEZqoSaZLV37017136 = -346139182;    double HEZqoSaZLV21569613 = -502568588;    double HEZqoSaZLV13900378 = -332973870;    double HEZqoSaZLV50356682 = -879088861;    double HEZqoSaZLV56694467 = -773568289;    double HEZqoSaZLV2168657 = -846462696;    double HEZqoSaZLV76529925 = -813336268;    double HEZqoSaZLV84294133 = -514510368;    double HEZqoSaZLV94858268 = -679428110;    double HEZqoSaZLV88093317 = -529054719;    double HEZqoSaZLV51538535 = -119497994;    double HEZqoSaZLV66305900 = -784446826;    double HEZqoSaZLV84220269 = -600065867;    double HEZqoSaZLV89743616 = 17588932;    double HEZqoSaZLV800365 = -160603497;    double HEZqoSaZLV45751084 = -322017406;    double HEZqoSaZLV57560995 = -365988363;    double HEZqoSaZLV65192406 = -104077001;    double HEZqoSaZLV45001790 = 48760013;    double HEZqoSaZLV12621805 = -438797370;    double HEZqoSaZLV7066871 = -978477181;    double HEZqoSaZLV63069702 = -668587764;    double HEZqoSaZLV26210085 = -123108050;    double HEZqoSaZLV13357770 = -171125260;    double HEZqoSaZLV8890243 = -606856854;    double HEZqoSaZLV92048172 = -938747424;    double HEZqoSaZLV73373415 = 96570166;    double HEZqoSaZLV25237493 = -541307245;    double HEZqoSaZLV74409867 = -813136759;    double HEZqoSaZLV60682881 = -215772369;    double HEZqoSaZLV12583527 = -877812386;    double HEZqoSaZLV80157197 = -351997927;    double HEZqoSaZLV65815905 = -990899961;    double HEZqoSaZLV25730656 = -49671662;    double HEZqoSaZLV44169401 = -15318914;    double HEZqoSaZLV80209803 = -776010988;     HEZqoSaZLV51907209 = HEZqoSaZLV66886725;     HEZqoSaZLV66886725 = HEZqoSaZLV34962627;     HEZqoSaZLV34962627 = HEZqoSaZLV71738329;     HEZqoSaZLV71738329 = HEZqoSaZLV36997606;     HEZqoSaZLV36997606 = HEZqoSaZLV69241116;     HEZqoSaZLV69241116 = HEZqoSaZLV81309447;     HEZqoSaZLV81309447 = HEZqoSaZLV43538237;     HEZqoSaZLV43538237 = HEZqoSaZLV48307951;     HEZqoSaZLV48307951 = HEZqoSaZLV64113012;     HEZqoSaZLV64113012 = HEZqoSaZLV86319314;     HEZqoSaZLV86319314 = HEZqoSaZLV27969494;     HEZqoSaZLV27969494 = HEZqoSaZLV85484712;     HEZqoSaZLV85484712 = HEZqoSaZLV36673561;     HEZqoSaZLV36673561 = HEZqoSaZLV71498643;     HEZqoSaZLV71498643 = HEZqoSaZLV34150265;     HEZqoSaZLV34150265 = HEZqoSaZLV50428232;     HEZqoSaZLV50428232 = HEZqoSaZLV34951458;     HEZqoSaZLV34951458 = HEZqoSaZLV53961408;     HEZqoSaZLV53961408 = HEZqoSaZLV87430001;     HEZqoSaZLV87430001 = HEZqoSaZLV40197906;     HEZqoSaZLV40197906 = HEZqoSaZLV63976288;     HEZqoSaZLV63976288 = HEZqoSaZLV70930153;     HEZqoSaZLV70930153 = HEZqoSaZLV2579780;     HEZqoSaZLV2579780 = HEZqoSaZLV80014098;     HEZqoSaZLV80014098 = HEZqoSaZLV57587297;     HEZqoSaZLV57587297 = HEZqoSaZLV15956553;     HEZqoSaZLV15956553 = HEZqoSaZLV25575179;     HEZqoSaZLV25575179 = HEZqoSaZLV35462137;     HEZqoSaZLV35462137 = HEZqoSaZLV94282588;     HEZqoSaZLV94282588 = HEZqoSaZLV27095876;     HEZqoSaZLV27095876 = HEZqoSaZLV64749702;     HEZqoSaZLV64749702 = HEZqoSaZLV14069117;     HEZqoSaZLV14069117 = HEZqoSaZLV35128031;     HEZqoSaZLV35128031 = HEZqoSaZLV79979093;     HEZqoSaZLV79979093 = HEZqoSaZLV69329986;     HEZqoSaZLV69329986 = HEZqoSaZLV57620340;     HEZqoSaZLV57620340 = HEZqoSaZLV66134099;     HEZqoSaZLV66134099 = HEZqoSaZLV40093190;     HEZqoSaZLV40093190 = HEZqoSaZLV65868090;     HEZqoSaZLV65868090 = HEZqoSaZLV35891467;     HEZqoSaZLV35891467 = HEZqoSaZLV73892005;     HEZqoSaZLV73892005 = HEZqoSaZLV79756018;     HEZqoSaZLV79756018 = HEZqoSaZLV81186537;     HEZqoSaZLV81186537 = HEZqoSaZLV1779416;     HEZqoSaZLV1779416 = HEZqoSaZLV34263015;     HEZqoSaZLV34263015 = HEZqoSaZLV26302;     HEZqoSaZLV26302 = HEZqoSaZLV50764147;     HEZqoSaZLV50764147 = HEZqoSaZLV80573388;     HEZqoSaZLV80573388 = HEZqoSaZLV22840333;     HEZqoSaZLV22840333 = HEZqoSaZLV87215718;     HEZqoSaZLV87215718 = HEZqoSaZLV64026173;     HEZqoSaZLV64026173 = HEZqoSaZLV38539617;     HEZqoSaZLV38539617 = HEZqoSaZLV711347;     HEZqoSaZLV711347 = HEZqoSaZLV26237788;     HEZqoSaZLV26237788 = HEZqoSaZLV87930921;     HEZqoSaZLV87930921 = HEZqoSaZLV95956571;     HEZqoSaZLV95956571 = HEZqoSaZLV32382847;     HEZqoSaZLV32382847 = HEZqoSaZLV91724231;     HEZqoSaZLV91724231 = HEZqoSaZLV79410308;     HEZqoSaZLV79410308 = HEZqoSaZLV53284563;     HEZqoSaZLV53284563 = HEZqoSaZLV55734269;     HEZqoSaZLV55734269 = HEZqoSaZLV8076100;     HEZqoSaZLV8076100 = HEZqoSaZLV54025362;     HEZqoSaZLV54025362 = HEZqoSaZLV37017136;     HEZqoSaZLV37017136 = HEZqoSaZLV21569613;     HEZqoSaZLV21569613 = HEZqoSaZLV13900378;     HEZqoSaZLV13900378 = HEZqoSaZLV50356682;     HEZqoSaZLV50356682 = HEZqoSaZLV56694467;     HEZqoSaZLV56694467 = HEZqoSaZLV2168657;     HEZqoSaZLV2168657 = HEZqoSaZLV76529925;     HEZqoSaZLV76529925 = HEZqoSaZLV84294133;     HEZqoSaZLV84294133 = HEZqoSaZLV94858268;     HEZqoSaZLV94858268 = HEZqoSaZLV88093317;     HEZqoSaZLV88093317 = HEZqoSaZLV51538535;     HEZqoSaZLV51538535 = HEZqoSaZLV66305900;     HEZqoSaZLV66305900 = HEZqoSaZLV84220269;     HEZqoSaZLV84220269 = HEZqoSaZLV89743616;     HEZqoSaZLV89743616 = HEZqoSaZLV800365;     HEZqoSaZLV800365 = HEZqoSaZLV45751084;     HEZqoSaZLV45751084 = HEZqoSaZLV57560995;     HEZqoSaZLV57560995 = HEZqoSaZLV65192406;     HEZqoSaZLV65192406 = HEZqoSaZLV45001790;     HEZqoSaZLV45001790 = HEZqoSaZLV12621805;     HEZqoSaZLV12621805 = HEZqoSaZLV7066871;     HEZqoSaZLV7066871 = HEZqoSaZLV63069702;     HEZqoSaZLV63069702 = HEZqoSaZLV26210085;     HEZqoSaZLV26210085 = HEZqoSaZLV13357770;     HEZqoSaZLV13357770 = HEZqoSaZLV8890243;     HEZqoSaZLV8890243 = HEZqoSaZLV92048172;     HEZqoSaZLV92048172 = HEZqoSaZLV73373415;     HEZqoSaZLV73373415 = HEZqoSaZLV25237493;     HEZqoSaZLV25237493 = HEZqoSaZLV74409867;     HEZqoSaZLV74409867 = HEZqoSaZLV60682881;     HEZqoSaZLV60682881 = HEZqoSaZLV12583527;     HEZqoSaZLV12583527 = HEZqoSaZLV80157197;     HEZqoSaZLV80157197 = HEZqoSaZLV65815905;     HEZqoSaZLV65815905 = HEZqoSaZLV25730656;     HEZqoSaZLV25730656 = HEZqoSaZLV44169401;     HEZqoSaZLV44169401 = HEZqoSaZLV80209803;     HEZqoSaZLV80209803 = HEZqoSaZLV51907209;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ZfvApKWGrO26738352() {     double mwmfhDKxqK42033518 = -834767189;    double mwmfhDKxqK50011790 = -828560360;    double mwmfhDKxqK30455326 = -102027986;    double mwmfhDKxqK45236905 = -323719771;    double mwmfhDKxqK50054341 = -431908960;    double mwmfhDKxqK50027520 = -860495669;    double mwmfhDKxqK75972886 = -976698518;    double mwmfhDKxqK96416799 = -81538444;    double mwmfhDKxqK72119638 = -466991714;    double mwmfhDKxqK68368682 = 89376236;    double mwmfhDKxqK62471134 = -367602993;    double mwmfhDKxqK62719001 = -411245631;    double mwmfhDKxqK23830845 = -964828550;    double mwmfhDKxqK75092414 = -492456264;    double mwmfhDKxqK69573014 = -144778498;    double mwmfhDKxqK58330007 = -831366144;    double mwmfhDKxqK94390412 = -43287970;    double mwmfhDKxqK56307171 = -392852039;    double mwmfhDKxqK14875799 = -949867023;    double mwmfhDKxqK54754250 = -834456535;    double mwmfhDKxqK28120309 = -755470283;    double mwmfhDKxqK62057870 = -227127957;    double mwmfhDKxqK4168572 = -950329085;    double mwmfhDKxqK10500878 = -736915138;    double mwmfhDKxqK26899287 = -226763290;    double mwmfhDKxqK76378262 = -311656984;    double mwmfhDKxqK37923888 = -650802073;    double mwmfhDKxqK48745554 = -683960799;    double mwmfhDKxqK96671134 = -931591349;    double mwmfhDKxqK42071669 = -89207675;    double mwmfhDKxqK30559279 = -221276600;    double mwmfhDKxqK64116616 = -857438668;    double mwmfhDKxqK23038158 = -798908786;    double mwmfhDKxqK58966675 = -764954988;    double mwmfhDKxqK15575628 = -371062752;    double mwmfhDKxqK22560994 = -116224270;    double mwmfhDKxqK57853909 = -833465911;    double mwmfhDKxqK90491382 = -133491605;    double mwmfhDKxqK50626207 = 21963317;    double mwmfhDKxqK10380232 = -859109641;    double mwmfhDKxqK49591140 = -772941507;    double mwmfhDKxqK28536469 = 18908422;    double mwmfhDKxqK39572859 = -769391050;    double mwmfhDKxqK11848478 = -325541285;    double mwmfhDKxqK93743833 = -140797223;    double mwmfhDKxqK54702008 = -744858846;    double mwmfhDKxqK80449591 = -618277387;    double mwmfhDKxqK41150606 = -713852332;    double mwmfhDKxqK8492043 = 91229899;    double mwmfhDKxqK52120738 = -87591269;    double mwmfhDKxqK16581243 = -610710147;    double mwmfhDKxqK7799281 = -190449125;    double mwmfhDKxqK87992072 = -945359194;    double mwmfhDKxqK53618409 = -351113648;    double mwmfhDKxqK98618043 = -195247248;    double mwmfhDKxqK79975647 = -507639233;    double mwmfhDKxqK45843218 = -878231276;    double mwmfhDKxqK19954449 = -365112848;    double mwmfhDKxqK18337618 = 3043519;    double mwmfhDKxqK73676079 = -20251976;    double mwmfhDKxqK12103633 = -109693596;    double mwmfhDKxqK27227332 = -192737720;    double mwmfhDKxqK99745665 = -149947095;    double mwmfhDKxqK30047970 = -277784040;    double mwmfhDKxqK37809404 = -689347164;    double mwmfhDKxqK98354517 = -510164326;    double mwmfhDKxqK39680844 = -612336846;    double mwmfhDKxqK64864170 = -99873563;    double mwmfhDKxqK59516786 = -21393513;    double mwmfhDKxqK47012021 = 71445772;    double mwmfhDKxqK476099 = -997900234;    double mwmfhDKxqK3899031 = -909796365;    double mwmfhDKxqK5680964 = -314815357;    double mwmfhDKxqK4495568 = 9242618;    double mwmfhDKxqK5163110 = 38484971;    double mwmfhDKxqK99583839 = -674378705;    double mwmfhDKxqK22485011 = -457736907;    double mwmfhDKxqK92320093 = -524787801;    double mwmfhDKxqK16757044 = -496117916;    double mwmfhDKxqK72197278 = -481904445;    double mwmfhDKxqK95928670 = -693379598;    double mwmfhDKxqK96773282 = -936949742;    double mwmfhDKxqK40253511 = -675190699;    double mwmfhDKxqK44550396 = -744000081;    double mwmfhDKxqK25490427 = -478497528;    double mwmfhDKxqK22759998 = 69172525;    double mwmfhDKxqK76124543 = -912079475;    double mwmfhDKxqK69419749 = -347795138;    double mwmfhDKxqK60348632 = -469707740;    double mwmfhDKxqK35599981 = -863423519;    double mwmfhDKxqK76717775 = -237992995;    double mwmfhDKxqK37899460 = -368353064;    double mwmfhDKxqK72153764 = -36535124;    double mwmfhDKxqK76950127 = -957784708;    double mwmfhDKxqK98276598 = -649416045;    double mwmfhDKxqK22363808 = -480203788;    double mwmfhDKxqK28790804 = -831144484;    double mwmfhDKxqK9524890 = -391607011;    double mwmfhDKxqK74039074 = -636194121;    double mwmfhDKxqK95389315 = -834767189;     mwmfhDKxqK42033518 = mwmfhDKxqK50011790;     mwmfhDKxqK50011790 = mwmfhDKxqK30455326;     mwmfhDKxqK30455326 = mwmfhDKxqK45236905;     mwmfhDKxqK45236905 = mwmfhDKxqK50054341;     mwmfhDKxqK50054341 = mwmfhDKxqK50027520;     mwmfhDKxqK50027520 = mwmfhDKxqK75972886;     mwmfhDKxqK75972886 = mwmfhDKxqK96416799;     mwmfhDKxqK96416799 = mwmfhDKxqK72119638;     mwmfhDKxqK72119638 = mwmfhDKxqK68368682;     mwmfhDKxqK68368682 = mwmfhDKxqK62471134;     mwmfhDKxqK62471134 = mwmfhDKxqK62719001;     mwmfhDKxqK62719001 = mwmfhDKxqK23830845;     mwmfhDKxqK23830845 = mwmfhDKxqK75092414;     mwmfhDKxqK75092414 = mwmfhDKxqK69573014;     mwmfhDKxqK69573014 = mwmfhDKxqK58330007;     mwmfhDKxqK58330007 = mwmfhDKxqK94390412;     mwmfhDKxqK94390412 = mwmfhDKxqK56307171;     mwmfhDKxqK56307171 = mwmfhDKxqK14875799;     mwmfhDKxqK14875799 = mwmfhDKxqK54754250;     mwmfhDKxqK54754250 = mwmfhDKxqK28120309;     mwmfhDKxqK28120309 = mwmfhDKxqK62057870;     mwmfhDKxqK62057870 = mwmfhDKxqK4168572;     mwmfhDKxqK4168572 = mwmfhDKxqK10500878;     mwmfhDKxqK10500878 = mwmfhDKxqK26899287;     mwmfhDKxqK26899287 = mwmfhDKxqK76378262;     mwmfhDKxqK76378262 = mwmfhDKxqK37923888;     mwmfhDKxqK37923888 = mwmfhDKxqK48745554;     mwmfhDKxqK48745554 = mwmfhDKxqK96671134;     mwmfhDKxqK96671134 = mwmfhDKxqK42071669;     mwmfhDKxqK42071669 = mwmfhDKxqK30559279;     mwmfhDKxqK30559279 = mwmfhDKxqK64116616;     mwmfhDKxqK64116616 = mwmfhDKxqK23038158;     mwmfhDKxqK23038158 = mwmfhDKxqK58966675;     mwmfhDKxqK58966675 = mwmfhDKxqK15575628;     mwmfhDKxqK15575628 = mwmfhDKxqK22560994;     mwmfhDKxqK22560994 = mwmfhDKxqK57853909;     mwmfhDKxqK57853909 = mwmfhDKxqK90491382;     mwmfhDKxqK90491382 = mwmfhDKxqK50626207;     mwmfhDKxqK50626207 = mwmfhDKxqK10380232;     mwmfhDKxqK10380232 = mwmfhDKxqK49591140;     mwmfhDKxqK49591140 = mwmfhDKxqK28536469;     mwmfhDKxqK28536469 = mwmfhDKxqK39572859;     mwmfhDKxqK39572859 = mwmfhDKxqK11848478;     mwmfhDKxqK11848478 = mwmfhDKxqK93743833;     mwmfhDKxqK93743833 = mwmfhDKxqK54702008;     mwmfhDKxqK54702008 = mwmfhDKxqK80449591;     mwmfhDKxqK80449591 = mwmfhDKxqK41150606;     mwmfhDKxqK41150606 = mwmfhDKxqK8492043;     mwmfhDKxqK8492043 = mwmfhDKxqK52120738;     mwmfhDKxqK52120738 = mwmfhDKxqK16581243;     mwmfhDKxqK16581243 = mwmfhDKxqK7799281;     mwmfhDKxqK7799281 = mwmfhDKxqK87992072;     mwmfhDKxqK87992072 = mwmfhDKxqK53618409;     mwmfhDKxqK53618409 = mwmfhDKxqK98618043;     mwmfhDKxqK98618043 = mwmfhDKxqK79975647;     mwmfhDKxqK79975647 = mwmfhDKxqK45843218;     mwmfhDKxqK45843218 = mwmfhDKxqK19954449;     mwmfhDKxqK19954449 = mwmfhDKxqK18337618;     mwmfhDKxqK18337618 = mwmfhDKxqK73676079;     mwmfhDKxqK73676079 = mwmfhDKxqK12103633;     mwmfhDKxqK12103633 = mwmfhDKxqK27227332;     mwmfhDKxqK27227332 = mwmfhDKxqK99745665;     mwmfhDKxqK99745665 = mwmfhDKxqK30047970;     mwmfhDKxqK30047970 = mwmfhDKxqK37809404;     mwmfhDKxqK37809404 = mwmfhDKxqK98354517;     mwmfhDKxqK98354517 = mwmfhDKxqK39680844;     mwmfhDKxqK39680844 = mwmfhDKxqK64864170;     mwmfhDKxqK64864170 = mwmfhDKxqK59516786;     mwmfhDKxqK59516786 = mwmfhDKxqK47012021;     mwmfhDKxqK47012021 = mwmfhDKxqK476099;     mwmfhDKxqK476099 = mwmfhDKxqK3899031;     mwmfhDKxqK3899031 = mwmfhDKxqK5680964;     mwmfhDKxqK5680964 = mwmfhDKxqK4495568;     mwmfhDKxqK4495568 = mwmfhDKxqK5163110;     mwmfhDKxqK5163110 = mwmfhDKxqK99583839;     mwmfhDKxqK99583839 = mwmfhDKxqK22485011;     mwmfhDKxqK22485011 = mwmfhDKxqK92320093;     mwmfhDKxqK92320093 = mwmfhDKxqK16757044;     mwmfhDKxqK16757044 = mwmfhDKxqK72197278;     mwmfhDKxqK72197278 = mwmfhDKxqK95928670;     mwmfhDKxqK95928670 = mwmfhDKxqK96773282;     mwmfhDKxqK96773282 = mwmfhDKxqK40253511;     mwmfhDKxqK40253511 = mwmfhDKxqK44550396;     mwmfhDKxqK44550396 = mwmfhDKxqK25490427;     mwmfhDKxqK25490427 = mwmfhDKxqK22759998;     mwmfhDKxqK22759998 = mwmfhDKxqK76124543;     mwmfhDKxqK76124543 = mwmfhDKxqK69419749;     mwmfhDKxqK69419749 = mwmfhDKxqK60348632;     mwmfhDKxqK60348632 = mwmfhDKxqK35599981;     mwmfhDKxqK35599981 = mwmfhDKxqK76717775;     mwmfhDKxqK76717775 = mwmfhDKxqK37899460;     mwmfhDKxqK37899460 = mwmfhDKxqK72153764;     mwmfhDKxqK72153764 = mwmfhDKxqK76950127;     mwmfhDKxqK76950127 = mwmfhDKxqK98276598;     mwmfhDKxqK98276598 = mwmfhDKxqK22363808;     mwmfhDKxqK22363808 = mwmfhDKxqK28790804;     mwmfhDKxqK28790804 = mwmfhDKxqK9524890;     mwmfhDKxqK9524890 = mwmfhDKxqK74039074;     mwmfhDKxqK74039074 = mwmfhDKxqK95389315;     mwmfhDKxqK95389315 = mwmfhDKxqK42033518;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void KteutXkBgU22921512() {     double uEyCSzDenz1629615 = 36476434;    double uEyCSzDenz51517640 = -638715745;    double uEyCSzDenz67456713 = -176168909;    double uEyCSzDenz41112663 = -96330649;    double uEyCSzDenz61347567 = -332415987;    double uEyCSzDenz47704641 = -718755342;    double uEyCSzDenz73331368 = -306416104;    double uEyCSzDenz47242084 = -435749819;    double uEyCSzDenz85933082 = -999664213;    double uEyCSzDenz51393197 = -951882617;    double uEyCSzDenz87766065 = -769145433;    double uEyCSzDenz97390203 = -506266880;    double uEyCSzDenz94585408 = -871007069;    double uEyCSzDenz33466253 = -396614611;    double uEyCSzDenz66880820 = -937305019;    double uEyCSzDenz55084261 = -636739036;    double uEyCSzDenz30351516 = 28495750;    double uEyCSzDenz20975502 = -762188144;    double uEyCSzDenz95318001 = 11013347;    double uEyCSzDenz34671359 = -396865188;    double uEyCSzDenz8581427 = -588491107;    double uEyCSzDenz30547469 = -119529834;    double uEyCSzDenz96360396 = -714624164;    double uEyCSzDenz75231116 = -301253375;    double uEyCSzDenz2877292 = -782900880;    double uEyCSzDenz70793169 = -446274456;    double uEyCSzDenz51263958 = -282070;    double uEyCSzDenz13856723 = -205342389;    double uEyCSzDenz46455477 = -721183965;    double uEyCSzDenz80545135 = -136190917;    double uEyCSzDenz55473597 = -866495928;    double uEyCSzDenz6881877 = -174656665;    double uEyCSzDenz72120196 = -778855658;    double uEyCSzDenz41491118 = -266838919;    double uEyCSzDenz20512989 = -19272737;    double uEyCSzDenz1150890 = -427880852;    double uEyCSzDenz48485586 = -26244546;    double uEyCSzDenz88851719 = -77943995;    double uEyCSzDenz69644150 = -796743200;    double uEyCSzDenz83205886 = -32990589;    double uEyCSzDenz7808954 = -141603104;    double uEyCSzDenz98615649 = 13967003;    double uEyCSzDenz80452101 = -502835880;    double uEyCSzDenz86087983 = -749456023;    double uEyCSzDenz94732148 = -687115291;    double uEyCSzDenz19495137 = -987803005;    double uEyCSzDenz85938314 = -510133055;    double uEyCSzDenz87846999 = 53394440;    double uEyCSzDenz47881690 = -192707720;    double uEyCSzDenz67288130 = -408843730;    double uEyCSzDenz67067492 = -396818371;    double uEyCSzDenz14384434 = -161692381;    double uEyCSzDenz63407586 = -85307648;    double uEyCSzDenz26892932 = -611282603;    double uEyCSzDenz14340085 = -159181335;    double uEyCSzDenz71082146 = -843993733;    double uEyCSzDenz55157243 = -924091582;    double uEyCSzDenz92225597 = -874915534;    double uEyCSzDenz38235372 = -313429769;    double uEyCSzDenz90554398 = -886141532;    double uEyCSzDenz96440682 = -618473272;    double uEyCSzDenz59474646 = -1073716;    double uEyCSzDenz786607 = -714565855;    double uEyCSzDenz5387948 = -763473297;    double uEyCSzDenz95919600 = 14613310;    double uEyCSzDenz80884189 = -494488768;    double uEyCSzDenz25270007 = -727411223;    double uEyCSzDenz53094291 = -504168150;    double uEyCSzDenz12953264 = -277341875;    double uEyCSzDenz65729930 = -409424168;    double uEyCSzDenz6598675 = -510494490;    double uEyCSzDenz41499796 = -893560256;    double uEyCSzDenz51331352 = -965444945;    double uEyCSzDenz12112116 = -955996064;    double uEyCSzDenz26862406 = -155262085;    double uEyCSzDenz9965778 = -502458111;    double uEyCSzDenz50095367 = -616693955;    double uEyCSzDenz10272414 = -965168141;    double uEyCSzDenz80498967 = -614138084;    double uEyCSzDenz83382154 = -795097876;    double uEyCSzDenz84854855 = -936141401;    double uEyCSzDenz63416959 = 46323489;    double uEyCSzDenz65975032 = 87365331;    double uEyCSzDenz79167346 = -212340235;    double uEyCSzDenz13477643 = -739372546;    double uEyCSzDenz41089163 = -604803548;    double uEyCSzDenz43474290 = 10650982;    double uEyCSzDenz45227264 = -67573055;    double uEyCSzDenz27151033 = -7657584;    double uEyCSzDenz49430843 = -175279005;    double uEyCSzDenz45993647 = -503789271;    double uEyCSzDenz56259989 = -151329012;    double uEyCSzDenz50616348 = -764514227;    double uEyCSzDenz79089751 = -910601668;    double uEyCSzDenz86765203 = -414517317;    double uEyCSzDenz48334307 = -40529389;    double uEyCSzDenz97829043 = -271467142;    double uEyCSzDenz75064154 = -739362584;    double uEyCSzDenz90168382 = -664069334;    double uEyCSzDenz13847960 = 36476434;     uEyCSzDenz1629615 = uEyCSzDenz51517640;     uEyCSzDenz51517640 = uEyCSzDenz67456713;     uEyCSzDenz67456713 = uEyCSzDenz41112663;     uEyCSzDenz41112663 = uEyCSzDenz61347567;     uEyCSzDenz61347567 = uEyCSzDenz47704641;     uEyCSzDenz47704641 = uEyCSzDenz73331368;     uEyCSzDenz73331368 = uEyCSzDenz47242084;     uEyCSzDenz47242084 = uEyCSzDenz85933082;     uEyCSzDenz85933082 = uEyCSzDenz51393197;     uEyCSzDenz51393197 = uEyCSzDenz87766065;     uEyCSzDenz87766065 = uEyCSzDenz97390203;     uEyCSzDenz97390203 = uEyCSzDenz94585408;     uEyCSzDenz94585408 = uEyCSzDenz33466253;     uEyCSzDenz33466253 = uEyCSzDenz66880820;     uEyCSzDenz66880820 = uEyCSzDenz55084261;     uEyCSzDenz55084261 = uEyCSzDenz30351516;     uEyCSzDenz30351516 = uEyCSzDenz20975502;     uEyCSzDenz20975502 = uEyCSzDenz95318001;     uEyCSzDenz95318001 = uEyCSzDenz34671359;     uEyCSzDenz34671359 = uEyCSzDenz8581427;     uEyCSzDenz8581427 = uEyCSzDenz30547469;     uEyCSzDenz30547469 = uEyCSzDenz96360396;     uEyCSzDenz96360396 = uEyCSzDenz75231116;     uEyCSzDenz75231116 = uEyCSzDenz2877292;     uEyCSzDenz2877292 = uEyCSzDenz70793169;     uEyCSzDenz70793169 = uEyCSzDenz51263958;     uEyCSzDenz51263958 = uEyCSzDenz13856723;     uEyCSzDenz13856723 = uEyCSzDenz46455477;     uEyCSzDenz46455477 = uEyCSzDenz80545135;     uEyCSzDenz80545135 = uEyCSzDenz55473597;     uEyCSzDenz55473597 = uEyCSzDenz6881877;     uEyCSzDenz6881877 = uEyCSzDenz72120196;     uEyCSzDenz72120196 = uEyCSzDenz41491118;     uEyCSzDenz41491118 = uEyCSzDenz20512989;     uEyCSzDenz20512989 = uEyCSzDenz1150890;     uEyCSzDenz1150890 = uEyCSzDenz48485586;     uEyCSzDenz48485586 = uEyCSzDenz88851719;     uEyCSzDenz88851719 = uEyCSzDenz69644150;     uEyCSzDenz69644150 = uEyCSzDenz83205886;     uEyCSzDenz83205886 = uEyCSzDenz7808954;     uEyCSzDenz7808954 = uEyCSzDenz98615649;     uEyCSzDenz98615649 = uEyCSzDenz80452101;     uEyCSzDenz80452101 = uEyCSzDenz86087983;     uEyCSzDenz86087983 = uEyCSzDenz94732148;     uEyCSzDenz94732148 = uEyCSzDenz19495137;     uEyCSzDenz19495137 = uEyCSzDenz85938314;     uEyCSzDenz85938314 = uEyCSzDenz87846999;     uEyCSzDenz87846999 = uEyCSzDenz47881690;     uEyCSzDenz47881690 = uEyCSzDenz67288130;     uEyCSzDenz67288130 = uEyCSzDenz67067492;     uEyCSzDenz67067492 = uEyCSzDenz14384434;     uEyCSzDenz14384434 = uEyCSzDenz63407586;     uEyCSzDenz63407586 = uEyCSzDenz26892932;     uEyCSzDenz26892932 = uEyCSzDenz14340085;     uEyCSzDenz14340085 = uEyCSzDenz71082146;     uEyCSzDenz71082146 = uEyCSzDenz55157243;     uEyCSzDenz55157243 = uEyCSzDenz92225597;     uEyCSzDenz92225597 = uEyCSzDenz38235372;     uEyCSzDenz38235372 = uEyCSzDenz90554398;     uEyCSzDenz90554398 = uEyCSzDenz96440682;     uEyCSzDenz96440682 = uEyCSzDenz59474646;     uEyCSzDenz59474646 = uEyCSzDenz786607;     uEyCSzDenz786607 = uEyCSzDenz5387948;     uEyCSzDenz5387948 = uEyCSzDenz95919600;     uEyCSzDenz95919600 = uEyCSzDenz80884189;     uEyCSzDenz80884189 = uEyCSzDenz25270007;     uEyCSzDenz25270007 = uEyCSzDenz53094291;     uEyCSzDenz53094291 = uEyCSzDenz12953264;     uEyCSzDenz12953264 = uEyCSzDenz65729930;     uEyCSzDenz65729930 = uEyCSzDenz6598675;     uEyCSzDenz6598675 = uEyCSzDenz41499796;     uEyCSzDenz41499796 = uEyCSzDenz51331352;     uEyCSzDenz51331352 = uEyCSzDenz12112116;     uEyCSzDenz12112116 = uEyCSzDenz26862406;     uEyCSzDenz26862406 = uEyCSzDenz9965778;     uEyCSzDenz9965778 = uEyCSzDenz50095367;     uEyCSzDenz50095367 = uEyCSzDenz10272414;     uEyCSzDenz10272414 = uEyCSzDenz80498967;     uEyCSzDenz80498967 = uEyCSzDenz83382154;     uEyCSzDenz83382154 = uEyCSzDenz84854855;     uEyCSzDenz84854855 = uEyCSzDenz63416959;     uEyCSzDenz63416959 = uEyCSzDenz65975032;     uEyCSzDenz65975032 = uEyCSzDenz79167346;     uEyCSzDenz79167346 = uEyCSzDenz13477643;     uEyCSzDenz13477643 = uEyCSzDenz41089163;     uEyCSzDenz41089163 = uEyCSzDenz43474290;     uEyCSzDenz43474290 = uEyCSzDenz45227264;     uEyCSzDenz45227264 = uEyCSzDenz27151033;     uEyCSzDenz27151033 = uEyCSzDenz49430843;     uEyCSzDenz49430843 = uEyCSzDenz45993647;     uEyCSzDenz45993647 = uEyCSzDenz56259989;     uEyCSzDenz56259989 = uEyCSzDenz50616348;     uEyCSzDenz50616348 = uEyCSzDenz79089751;     uEyCSzDenz79089751 = uEyCSzDenz86765203;     uEyCSzDenz86765203 = uEyCSzDenz48334307;     uEyCSzDenz48334307 = uEyCSzDenz97829043;     uEyCSzDenz97829043 = uEyCSzDenz75064154;     uEyCSzDenz75064154 = uEyCSzDenz90168382;     uEyCSzDenz90168382 = uEyCSzDenz13847960;     uEyCSzDenz13847960 = uEyCSzDenz1629615;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void BjFGwJQbmZ35466701() {     int RonrBdQhBk21097785 = -376654778;    int RonrBdQhBk4541504 = -84593741;    int RonrBdQhBk84293705 = -927797524;    int RonrBdQhBk59759812 = 87095088;    int RonrBdQhBk61794084 = -958688403;    int RonrBdQhBk73296715 = -609240110;    int RonrBdQhBk18163247 = -749722334;    int RonrBdQhBk12492317 = -529557785;    int RonrBdQhBk46619880 = -627855592;    int RonrBdQhBk29321920 = -957468663;    int RonrBdQhBk41989329 = -102135733;    int RonrBdQhBk884817 = -505569585;    int RonrBdQhBk84957067 = -195364345;    int RonrBdQhBk41882293 = -938900337;    int RonrBdQhBk27407282 = -135388811;    int RonrBdQhBk21299910 = 69030;    int RonrBdQhBk36313629 = -143278932;    int RonrBdQhBk45038253 = -512942862;    int RonrBdQhBk94952880 = -366191413;    int RonrBdQhBk15282661 = -14401645;    int RonrBdQhBk21037499 = -94703433;    int RonrBdQhBk45529552 = -631333048;    int RonrBdQhBk64533403 = 87801218;    int RonrBdQhBk92952784 = 62202633;    int RonrBdQhBk14080781 = 22799010;    int RonrBdQhBk75560630 = -132069674;    int RonrBdQhBk35192089 = -765433002;    int RonrBdQhBk64648397 = -369075668;    int RonrBdQhBk88200434 = -735095110;    int RonrBdQhBk65251989 = -227629611;    int RonrBdQhBk85277681 = -731822021;    int RonrBdQhBk46461187 = -739005684;    int RonrBdQhBk83596299 = -234063425;    int RonrBdQhBk247625 = -571442125;    int RonrBdQhBk60443325 = -81975543;    int RonrBdQhBk37216827 = -731449460;    int RonrBdQhBk16869037 = -553120621;    int RonrBdQhBk30334194 = -155152810;    int RonrBdQhBk36957475 = -161158025;    int RonrBdQhBk4487623 = -29521686;    int RonrBdQhBk49291010 = -651389400;    int RonrBdQhBk10474783 = -224929223;    int RonrBdQhBk51585343 = -450637677;    int RonrBdQhBk69473522 = -98528684;    int RonrBdQhBk74760560 = -964238254;    int RonrBdQhBk73956264 = -425134426;    int RonrBdQhBk67928194 = -423826377;    int RonrBdQhBk88002829 = -129892874;    int RonrBdQhBk89017280 = -206646959;    int RonrBdQhBk8186473 = -169856075;    int RonrBdQhBk41503062 = -803183302;    int RonrBdQhBk30833294 = -539045240;    int RonrBdQhBk33232733 = -861416609;    int RonrBdQhBk99822960 = -605876240;    int RonrBdQhBk14429202 = 66260030;    int RonrBdQhBk75568233 = -745321731;    int RonrBdQhBk40008101 = -72394960;    int RonrBdQhBk91340920 = -890000157;    int RonrBdQhBk45679031 = -935703922;    int RonrBdQhBk86233453 = -726618730;    int RonrBdQhBk38104626 = -843807109;    int RonrBdQhBk53514850 = -280646667;    int RonrBdQhBk24291883 = -794462675;    int RonrBdQhBk81367890 = -300225981;    int RonrBdQhBk44044239 = -125646643;    int RonrBdQhBk95528141 = -363130050;    int RonrBdQhBk17288517 = -171506161;    int RonrBdQhBk84709443 = -623922221;    int RonrBdQhBk81438968 = -756924794;    int RonrBdQhBk90190454 = -403939351;    int RonrBdQhBk4430874 = -446810349;    int RonrBdQhBk5979436 = -988126122;    int RonrBdQhBk8080779 = -251784838;    int RonrBdQhBk90465258 = -236669728;    int RonrBdQhBk65991650 = -363012246;    int RonrBdQhBk10562717 = -869774211;    int RonrBdQhBk93944208 = -80695371;    int RonrBdQhBk95059881 = -813670098;    int RonrBdQhBk18192225 = 26440887;    int RonrBdQhBk40124516 = -552066564;    int RonrBdQhBk7632437 = -708243297;    int RonrBdQhBk47189260 = -535540128;    int RonrBdQhBk75631116 = -62428710;    int RonrBdQhBk80013961 = -465239036;    int RonrBdQhBk23748928 = -424446309;    int RonrBdQhBk54444388 = -92776781;    int RonrBdQhBk13228454 = -877589075;    int RonrBdQhBk83773339 = -628187185;    int RonrBdQhBk85818423 = -537702155;    int RonrBdQhBk84875092 = -336653813;    int RonrBdQhBk97208726 = -559054501;    int RonrBdQhBk25528116 = -663120464;    int RonrBdQhBk84655162 = -219448889;    int RonrBdQhBk50724021 = -434539296;    int RonrBdQhBk66382996 = -185714577;    int RonrBdQhBk95776160 = -270742734;    int RonrBdQhBk86182900 = -430466548;    int RonrBdQhBk70217452 = -50411697;    int RonrBdQhBk25429284 = -972882042;    int RonrBdQhBk79232418 = -376654778;     RonrBdQhBk21097785 = RonrBdQhBk4541504;     RonrBdQhBk4541504 = RonrBdQhBk84293705;     RonrBdQhBk84293705 = RonrBdQhBk59759812;     RonrBdQhBk59759812 = RonrBdQhBk61794084;     RonrBdQhBk61794084 = RonrBdQhBk73296715;     RonrBdQhBk73296715 = RonrBdQhBk18163247;     RonrBdQhBk18163247 = RonrBdQhBk12492317;     RonrBdQhBk12492317 = RonrBdQhBk46619880;     RonrBdQhBk46619880 = RonrBdQhBk29321920;     RonrBdQhBk29321920 = RonrBdQhBk41989329;     RonrBdQhBk41989329 = RonrBdQhBk884817;     RonrBdQhBk884817 = RonrBdQhBk84957067;     RonrBdQhBk84957067 = RonrBdQhBk41882293;     RonrBdQhBk41882293 = RonrBdQhBk27407282;     RonrBdQhBk27407282 = RonrBdQhBk21299910;     RonrBdQhBk21299910 = RonrBdQhBk36313629;     RonrBdQhBk36313629 = RonrBdQhBk45038253;     RonrBdQhBk45038253 = RonrBdQhBk94952880;     RonrBdQhBk94952880 = RonrBdQhBk15282661;     RonrBdQhBk15282661 = RonrBdQhBk21037499;     RonrBdQhBk21037499 = RonrBdQhBk45529552;     RonrBdQhBk45529552 = RonrBdQhBk64533403;     RonrBdQhBk64533403 = RonrBdQhBk92952784;     RonrBdQhBk92952784 = RonrBdQhBk14080781;     RonrBdQhBk14080781 = RonrBdQhBk75560630;     RonrBdQhBk75560630 = RonrBdQhBk35192089;     RonrBdQhBk35192089 = RonrBdQhBk64648397;     RonrBdQhBk64648397 = RonrBdQhBk88200434;     RonrBdQhBk88200434 = RonrBdQhBk65251989;     RonrBdQhBk65251989 = RonrBdQhBk85277681;     RonrBdQhBk85277681 = RonrBdQhBk46461187;     RonrBdQhBk46461187 = RonrBdQhBk83596299;     RonrBdQhBk83596299 = RonrBdQhBk247625;     RonrBdQhBk247625 = RonrBdQhBk60443325;     RonrBdQhBk60443325 = RonrBdQhBk37216827;     RonrBdQhBk37216827 = RonrBdQhBk16869037;     RonrBdQhBk16869037 = RonrBdQhBk30334194;     RonrBdQhBk30334194 = RonrBdQhBk36957475;     RonrBdQhBk36957475 = RonrBdQhBk4487623;     RonrBdQhBk4487623 = RonrBdQhBk49291010;     RonrBdQhBk49291010 = RonrBdQhBk10474783;     RonrBdQhBk10474783 = RonrBdQhBk51585343;     RonrBdQhBk51585343 = RonrBdQhBk69473522;     RonrBdQhBk69473522 = RonrBdQhBk74760560;     RonrBdQhBk74760560 = RonrBdQhBk73956264;     RonrBdQhBk73956264 = RonrBdQhBk67928194;     RonrBdQhBk67928194 = RonrBdQhBk88002829;     RonrBdQhBk88002829 = RonrBdQhBk89017280;     RonrBdQhBk89017280 = RonrBdQhBk8186473;     RonrBdQhBk8186473 = RonrBdQhBk41503062;     RonrBdQhBk41503062 = RonrBdQhBk30833294;     RonrBdQhBk30833294 = RonrBdQhBk33232733;     RonrBdQhBk33232733 = RonrBdQhBk99822960;     RonrBdQhBk99822960 = RonrBdQhBk14429202;     RonrBdQhBk14429202 = RonrBdQhBk75568233;     RonrBdQhBk75568233 = RonrBdQhBk40008101;     RonrBdQhBk40008101 = RonrBdQhBk91340920;     RonrBdQhBk91340920 = RonrBdQhBk45679031;     RonrBdQhBk45679031 = RonrBdQhBk86233453;     RonrBdQhBk86233453 = RonrBdQhBk38104626;     RonrBdQhBk38104626 = RonrBdQhBk53514850;     RonrBdQhBk53514850 = RonrBdQhBk24291883;     RonrBdQhBk24291883 = RonrBdQhBk81367890;     RonrBdQhBk81367890 = RonrBdQhBk44044239;     RonrBdQhBk44044239 = RonrBdQhBk95528141;     RonrBdQhBk95528141 = RonrBdQhBk17288517;     RonrBdQhBk17288517 = RonrBdQhBk84709443;     RonrBdQhBk84709443 = RonrBdQhBk81438968;     RonrBdQhBk81438968 = RonrBdQhBk90190454;     RonrBdQhBk90190454 = RonrBdQhBk4430874;     RonrBdQhBk4430874 = RonrBdQhBk5979436;     RonrBdQhBk5979436 = RonrBdQhBk8080779;     RonrBdQhBk8080779 = RonrBdQhBk90465258;     RonrBdQhBk90465258 = RonrBdQhBk65991650;     RonrBdQhBk65991650 = RonrBdQhBk10562717;     RonrBdQhBk10562717 = RonrBdQhBk93944208;     RonrBdQhBk93944208 = RonrBdQhBk95059881;     RonrBdQhBk95059881 = RonrBdQhBk18192225;     RonrBdQhBk18192225 = RonrBdQhBk40124516;     RonrBdQhBk40124516 = RonrBdQhBk7632437;     RonrBdQhBk7632437 = RonrBdQhBk47189260;     RonrBdQhBk47189260 = RonrBdQhBk75631116;     RonrBdQhBk75631116 = RonrBdQhBk80013961;     RonrBdQhBk80013961 = RonrBdQhBk23748928;     RonrBdQhBk23748928 = RonrBdQhBk54444388;     RonrBdQhBk54444388 = RonrBdQhBk13228454;     RonrBdQhBk13228454 = RonrBdQhBk83773339;     RonrBdQhBk83773339 = RonrBdQhBk85818423;     RonrBdQhBk85818423 = RonrBdQhBk84875092;     RonrBdQhBk84875092 = RonrBdQhBk97208726;     RonrBdQhBk97208726 = RonrBdQhBk25528116;     RonrBdQhBk25528116 = RonrBdQhBk84655162;     RonrBdQhBk84655162 = RonrBdQhBk50724021;     RonrBdQhBk50724021 = RonrBdQhBk66382996;     RonrBdQhBk66382996 = RonrBdQhBk95776160;     RonrBdQhBk95776160 = RonrBdQhBk86182900;     RonrBdQhBk86182900 = RonrBdQhBk70217452;     RonrBdQhBk70217452 = RonrBdQhBk25429284;     RonrBdQhBk25429284 = RonrBdQhBk79232418;     RonrBdQhBk79232418 = RonrBdQhBk21097785;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void xjbmBQPBqGmmFeXRnRbgLQ31649861() {     int khcVHfXCqc80693881 = -605411156;    int khcVHfXCqc6047354 = -994749126;    int khcVHfXCqc21295094 = 98061554;    int khcVHfXCqc55635570 = -785515789;    int khcVHfXCqc73087310 = -859195430;    int khcVHfXCqc70973836 = -467499784;    int khcVHfXCqc15521730 = -79439920;    int khcVHfXCqc63317601 = -883769161;    int khcVHfXCqc60433323 = -60528091;    int khcVHfXCqc12346436 = -898727516;    int khcVHfXCqc67284260 = -503678172;    int khcVHfXCqc35556018 = -600590835;    int khcVHfXCqc55711631 = -101542864;    int khcVHfXCqc256133 = -843058684;    int khcVHfXCqc24715088 = -927915332;    int khcVHfXCqc18054165 = -905303861;    int khcVHfXCqc72274733 = -71495212;    int khcVHfXCqc9706584 = -882278967;    int khcVHfXCqc75395084 = -505311043;    int khcVHfXCqc95199770 = -676810298;    int khcVHfXCqc1498618 = 72275743;    int khcVHfXCqc14019151 = -523734925;    int khcVHfXCqc56725228 = -776493861;    int khcVHfXCqc57683024 = -602135604;    int khcVHfXCqc90058785 = -533338580;    int khcVHfXCqc69975537 = -266687145;    int khcVHfXCqc48532160 = -114912999;    int khcVHfXCqc29759566 = -990457258;    int khcVHfXCqc37984777 = -524687726;    int khcVHfXCqc3725456 = -274612853;    int khcVHfXCqc10192000 = -277041349;    int khcVHfXCqc89226447 = -56223681;    int khcVHfXCqc32678339 = -214010297;    int khcVHfXCqc82772067 = -73326056;    int khcVHfXCqc65380686 = -830185529;    int khcVHfXCqc15806724 = 56893958;    int khcVHfXCqc7500715 = -845899255;    int khcVHfXCqc28694532 = -99605200;    int khcVHfXCqc55975417 = -979864542;    int khcVHfXCqc77313276 = -303402634;    int khcVHfXCqc7508824 = -20050996;    int khcVHfXCqc80553963 = -229870641;    int khcVHfXCqc92464585 = -184082507;    int khcVHfXCqc43713027 = -522443423;    int khcVHfXCqc75748875 = -410556323;    int khcVHfXCqc38749393 = -668078585;    int khcVHfXCqc73416916 = -315682044;    int khcVHfXCqc34699223 = -462646103;    int khcVHfXCqc28406929 = -490584579;    int khcVHfXCqc23353866 = -491108536;    int khcVHfXCqc91989312 = -589291526;    int khcVHfXCqc37418447 = -510288495;    int khcVHfXCqc8648248 = -1365062;    int khcVHfXCqc73097483 = -866045195;    int khcVHfXCqc30151243 = -997674057;    int khcVHfXCqc66674731 = 18323769;    int khcVHfXCqc49322125 = -118255266;    int khcVHfXCqc63612070 = -299802843;    int khcVHfXCqc65576785 = -152177210;    int khcVHfXCqc3111773 = -492508286;    int khcVHfXCqc22441677 = -252586785;    int khcVHfXCqc85762163 = -88982662;    int khcVHfXCqc25332824 = -259081435;    int khcVHfXCqc56707867 = -785915238;    int khcVHfXCqc2154436 = -521686168;    int khcVHfXCqc78057813 = -347454492;    int khcVHfXCqc2877680 = -286580538;    int khcVHfXCqc72939564 = 71783192;    int khcVHfXCqc34875446 = 87126844;    int khcVHfXCqc8908364 = -884809290;    int khcVHfXCqc10553450 = 40595394;    int khcVHfXCqc43580201 = -971890013;    int khcVHfXCqc53731167 = -902414426;    int khcVHfXCqc98081807 = -101908410;    int khcVHfXCqc87690946 = -556759302;    int khcVHfXCqc20944654 = -697853617;    int khcVHfXCqc21554565 = -239652419;    int khcVHfXCqc13012201 = -154050439;    int khcVHfXCqc81934148 = -91579281;    int khcVHfXCqc51309392 = -865259995;    int khcVHfXCqc96558621 = -951005101;    int khcVHfXCqc13832937 = -652266897;    int khcVHfXCqc1352638 = -399872680;    int khcVHfXCqc14630912 = 66420810;    int khcVHfXCqc11736144 = -685321328;    int khcVHfXCqc72773553 = -766752854;    int khcVHfXCqc80578200 = 45141381;    int khcVHfXCqc59580855 = -347965103;    int khcVHfXCqc52620824 = -75652000;    int khcVHfXCqc98705955 = -748509298;    int khcVHfXCqc66484598 = -824850777;    int khcVHfXCqc43888645 = -446096413;    int khcVHfXCqc63117747 = -947427991;    int khcVHfXCqc52863645 = -387356256;    int khcVHfXCqc54871600 = 49184151;    int khcVHfXCqc21746661 = -931068334;    int khcVHfXCqc55221140 = -970789206;    int khcVHfXCqc35756718 = -398167269;    int khcVHfXCqc41558592 = 99242745;    int khcVHfXCqc97691062 = -605411156;     khcVHfXCqc80693881 = khcVHfXCqc6047354;     khcVHfXCqc6047354 = khcVHfXCqc21295094;     khcVHfXCqc21295094 = khcVHfXCqc55635570;     khcVHfXCqc55635570 = khcVHfXCqc73087310;     khcVHfXCqc73087310 = khcVHfXCqc70973836;     khcVHfXCqc70973836 = khcVHfXCqc15521730;     khcVHfXCqc15521730 = khcVHfXCqc63317601;     khcVHfXCqc63317601 = khcVHfXCqc60433323;     khcVHfXCqc60433323 = khcVHfXCqc12346436;     khcVHfXCqc12346436 = khcVHfXCqc67284260;     khcVHfXCqc67284260 = khcVHfXCqc35556018;     khcVHfXCqc35556018 = khcVHfXCqc55711631;     khcVHfXCqc55711631 = khcVHfXCqc256133;     khcVHfXCqc256133 = khcVHfXCqc24715088;     khcVHfXCqc24715088 = khcVHfXCqc18054165;     khcVHfXCqc18054165 = khcVHfXCqc72274733;     khcVHfXCqc72274733 = khcVHfXCqc9706584;     khcVHfXCqc9706584 = khcVHfXCqc75395084;     khcVHfXCqc75395084 = khcVHfXCqc95199770;     khcVHfXCqc95199770 = khcVHfXCqc1498618;     khcVHfXCqc1498618 = khcVHfXCqc14019151;     khcVHfXCqc14019151 = khcVHfXCqc56725228;     khcVHfXCqc56725228 = khcVHfXCqc57683024;     khcVHfXCqc57683024 = khcVHfXCqc90058785;     khcVHfXCqc90058785 = khcVHfXCqc69975537;     khcVHfXCqc69975537 = khcVHfXCqc48532160;     khcVHfXCqc48532160 = khcVHfXCqc29759566;     khcVHfXCqc29759566 = khcVHfXCqc37984777;     khcVHfXCqc37984777 = khcVHfXCqc3725456;     khcVHfXCqc3725456 = khcVHfXCqc10192000;     khcVHfXCqc10192000 = khcVHfXCqc89226447;     khcVHfXCqc89226447 = khcVHfXCqc32678339;     khcVHfXCqc32678339 = khcVHfXCqc82772067;     khcVHfXCqc82772067 = khcVHfXCqc65380686;     khcVHfXCqc65380686 = khcVHfXCqc15806724;     khcVHfXCqc15806724 = khcVHfXCqc7500715;     khcVHfXCqc7500715 = khcVHfXCqc28694532;     khcVHfXCqc28694532 = khcVHfXCqc55975417;     khcVHfXCqc55975417 = khcVHfXCqc77313276;     khcVHfXCqc77313276 = khcVHfXCqc7508824;     khcVHfXCqc7508824 = khcVHfXCqc80553963;     khcVHfXCqc80553963 = khcVHfXCqc92464585;     khcVHfXCqc92464585 = khcVHfXCqc43713027;     khcVHfXCqc43713027 = khcVHfXCqc75748875;     khcVHfXCqc75748875 = khcVHfXCqc38749393;     khcVHfXCqc38749393 = khcVHfXCqc73416916;     khcVHfXCqc73416916 = khcVHfXCqc34699223;     khcVHfXCqc34699223 = khcVHfXCqc28406929;     khcVHfXCqc28406929 = khcVHfXCqc23353866;     khcVHfXCqc23353866 = khcVHfXCqc91989312;     khcVHfXCqc91989312 = khcVHfXCqc37418447;     khcVHfXCqc37418447 = khcVHfXCqc8648248;     khcVHfXCqc8648248 = khcVHfXCqc73097483;     khcVHfXCqc73097483 = khcVHfXCqc30151243;     khcVHfXCqc30151243 = khcVHfXCqc66674731;     khcVHfXCqc66674731 = khcVHfXCqc49322125;     khcVHfXCqc49322125 = khcVHfXCqc63612070;     khcVHfXCqc63612070 = khcVHfXCqc65576785;     khcVHfXCqc65576785 = khcVHfXCqc3111773;     khcVHfXCqc3111773 = khcVHfXCqc22441677;     khcVHfXCqc22441677 = khcVHfXCqc85762163;     khcVHfXCqc85762163 = khcVHfXCqc25332824;     khcVHfXCqc25332824 = khcVHfXCqc56707867;     khcVHfXCqc56707867 = khcVHfXCqc2154436;     khcVHfXCqc2154436 = khcVHfXCqc78057813;     khcVHfXCqc78057813 = khcVHfXCqc2877680;     khcVHfXCqc2877680 = khcVHfXCqc72939564;     khcVHfXCqc72939564 = khcVHfXCqc34875446;     khcVHfXCqc34875446 = khcVHfXCqc8908364;     khcVHfXCqc8908364 = khcVHfXCqc10553450;     khcVHfXCqc10553450 = khcVHfXCqc43580201;     khcVHfXCqc43580201 = khcVHfXCqc53731167;     khcVHfXCqc53731167 = khcVHfXCqc98081807;     khcVHfXCqc98081807 = khcVHfXCqc87690946;     khcVHfXCqc87690946 = khcVHfXCqc20944654;     khcVHfXCqc20944654 = khcVHfXCqc21554565;     khcVHfXCqc21554565 = khcVHfXCqc13012201;     khcVHfXCqc13012201 = khcVHfXCqc81934148;     khcVHfXCqc81934148 = khcVHfXCqc51309392;     khcVHfXCqc51309392 = khcVHfXCqc96558621;     khcVHfXCqc96558621 = khcVHfXCqc13832937;     khcVHfXCqc13832937 = khcVHfXCqc1352638;     khcVHfXCqc1352638 = khcVHfXCqc14630912;     khcVHfXCqc14630912 = khcVHfXCqc11736144;     khcVHfXCqc11736144 = khcVHfXCqc72773553;     khcVHfXCqc72773553 = khcVHfXCqc80578200;     khcVHfXCqc80578200 = khcVHfXCqc59580855;     khcVHfXCqc59580855 = khcVHfXCqc52620824;     khcVHfXCqc52620824 = khcVHfXCqc98705955;     khcVHfXCqc98705955 = khcVHfXCqc66484598;     khcVHfXCqc66484598 = khcVHfXCqc43888645;     khcVHfXCqc43888645 = khcVHfXCqc63117747;     khcVHfXCqc63117747 = khcVHfXCqc52863645;     khcVHfXCqc52863645 = khcVHfXCqc54871600;     khcVHfXCqc54871600 = khcVHfXCqc21746661;     khcVHfXCqc21746661 = khcVHfXCqc55221140;     khcVHfXCqc55221140 = khcVHfXCqc35756718;     khcVHfXCqc35756718 = khcVHfXCqc41558592;     khcVHfXCqc41558592 = khcVHfXCqc97691062;     khcVHfXCqc97691062 = khcVHfXCqc80693881;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void NwGDPtPJPBEtuZywLzmkje27833021() {     int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP40289978 = -834167533;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP7553203 = -804904511;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP58296481 = 23920631;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP51511329 = -558126666;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP84380536 = -759702458;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP68650956 = -325759457;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP12880213 = -509157506;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP14142885 = -137980536;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP74246767 = -593200590;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP95370950 = -839986370;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP92579191 = -905220612;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP70227220 = -695612084;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP26466194 = -7721382;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP58629971 = -747217032;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP22022893 = -620441853;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP14808419 = -710676752;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP8235837 = 288508;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP74374915 = -151615072;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP55837287 = -644430673;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP75116879 = -239218951;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP81959736 = -860745082;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP82508748 = -416136803;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP48917053 = -540788940;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP22413263 = -166473841;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP66036790 = 10523830;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP64390444 = -401304616;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP61872230 = -564392996;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP94870734 = -511838848;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP87769120 = -314280341;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP42198923 = -321596096;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP35106318 = -922260677;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP31991708 = -473441678;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP81760377 = -193957170;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP65296509 = -675209988;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP70318047 = -478395515;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP94396620 = -254762624;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP98132392 = -38677890;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP27054869 = -44057590;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP74993360 = -698571058;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP50138931 = -577283582;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP65726637 = -488712593;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP50633145 = -234812059;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP33343828 = 82472664;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP17952532 = -946358161;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP76737191 = -956874392;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP3542522 = -911022744;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP78905638 = -207537712;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP81395617 = -795399331;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP67796576 = -774522198;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP38521258 = -812360997;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP42475562 = -375399750;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP44003600 = -481531750;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP84063761 = -241313516;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP46372007 = -26214150;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP45873285 = -961608144;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP57781229 = -318030731;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP58636150 = -164115572;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP35883219 = -809605529;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP85474538 = -468650497;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP19990092 = -258397842;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP6778727 = -761366461;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP18009478 = -997318658;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP26373765 = -823700196;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP32047845 = -171604495;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP60264632 = -917725694;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP60587484 = -331778934;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP88466843 = -401654915;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP61169684 = -332511395;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP88311923 = -168821518;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP27626273 = -265679229;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP16676027 = -571998863;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP81180967 = -955653903;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP99381554 = -453044014;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP5698356 = 32852909;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP9390242 = -750506358;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP31326591 = -525933023;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP49164921 = -398609467;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP30964521 = -594430779;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP45676072 = -209599449;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP62494268 = -78453427;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP85484806 = -93766905;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP80476613 = -768993666;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP27074159 = -737316650;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP49247862 = -501919345;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP99723360 = -946196346;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP91102718 = -340728927;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP47927946 = -132128162;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP35388371 = -67743020;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP19423225 = -713601844;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP12536818 = -60364784;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP35760470 = 9352947;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP62249173 = -229072362;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP41580331 = -575407093;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP55003268 = -340173216;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP43360205 = -815917121;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP47717160 = -491393935;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP24259380 = -411111864;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP1295983 = -745922841;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP57687900 = 71367532;    int ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP16149707 = -834167533;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP40289978 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP7553203;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP7553203 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP58296481;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP58296481 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP51511329;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP51511329 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP84380536;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP84380536 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP68650956;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP68650956 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP12880213;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP12880213 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP14142885;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP14142885 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP74246767;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP74246767 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP95370950;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP95370950 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP92579191;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP92579191 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP70227220;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP70227220 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP26466194;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP26466194 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP58629971;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP58629971 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP22022893;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP22022893 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP14808419;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP14808419 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP8235837;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP8235837 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP74374915;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP74374915 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP55837287;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP55837287 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP75116879;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP75116879 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP81959736;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP81959736 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP82508748;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP82508748 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP48917053;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP48917053 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP22413263;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP22413263 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP66036790;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP66036790 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP64390444;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP64390444 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP61872230;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP61872230 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP94870734;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP94870734 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP87769120;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP87769120 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP42198923;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP42198923 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP35106318;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP35106318 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP31991708;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP31991708 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP81760377;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP81760377 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP65296509;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP65296509 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP70318047;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP70318047 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP94396620;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP94396620 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP98132392;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP98132392 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP27054869;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP27054869 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP74993360;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP74993360 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP50138931;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP50138931 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP65726637;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP65726637 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP50633145;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP50633145 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP33343828;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP33343828 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP17952532;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP17952532 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP76737191;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP76737191 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP3542522;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP3542522 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP78905638;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP78905638 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP81395617;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP81395617 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP67796576;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP67796576 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP38521258;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP38521258 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP42475562;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP42475562 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP44003600;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP44003600 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP84063761;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP84063761 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP46372007;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP46372007 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP45873285;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP45873285 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP57781229;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP57781229 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP58636150;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP58636150 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP35883219;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP35883219 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP85474538;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP85474538 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP19990092;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP19990092 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP6778727;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP6778727 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP18009478;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP18009478 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP26373765;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP26373765 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP32047845;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP32047845 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP60264632;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP60264632 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP60587484;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP60587484 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP88466843;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP88466843 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP61169684;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP61169684 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP88311923;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP88311923 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP27626273;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP27626273 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP16676027;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP16676027 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP81180967;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP81180967 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP99381554;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP99381554 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP5698356;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP5698356 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP9390242;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP9390242 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP31326591;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP31326591 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP49164921;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP49164921 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP30964521;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP30964521 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP45676072;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP45676072 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP62494268;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP62494268 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP85484806;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP85484806 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP80476613;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP80476613 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP27074159;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP27074159 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP49247862;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP49247862 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP99723360;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP99723360 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP91102718;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP91102718 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP47927946;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP47927946 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP35388371;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP35388371 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP19423225;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP19423225 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP12536818;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP12536818 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP35760470;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP35760470 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP62249173;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP62249173 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP41580331;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP41580331 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP55003268;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP55003268 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP43360205;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP43360205 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP47717160;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP47717160 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP24259380;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP24259380 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP1295983;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP1295983 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP57687900;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP57687900 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP16149707;     ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP16149707 = ieumCzxoNBmSCegjuzWAXnYPIllQkqcKniNcJdrP40289978;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void BiaopZMZEaIgtfaWqFvmGX40378210() {     int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu59758148 = -147298745;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu60577067 = -250782507;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu75133473 = -727707984;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu70158477 = -374700929;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu84827052 = -285974874;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu94243030 = -216244225;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu57712091 = -952463736;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu79393118 = -231788502;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu34933564 = -221391970;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu73299673 = -845572416;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu46802455 = -238210912;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu73721833 = -694914789;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu16837854 = -432078659;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu67046011 = -189502757;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu82549354 = -918525644;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu81024067 = -73868686;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu14197950 = -171486174;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu98437666 = 97630210;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu55472166 = 78364567;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu55728181 = -956755407;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu94415808 = -366957407;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu97490831 = -927940016;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu17090059 = -838363558;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu40134931 = -903017832;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu77240279 = -283776279;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu69157905 = -87099834;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu45800361 = -229543928;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu45662410 = -675572127;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu29514077 = -328191487;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu26905777 = -413034790;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu64910403 = -787586769;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu71571018 = 62209304;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu93236480 = -749164936;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu24053017 = -979813194;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu10248384 = -541098321;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu30462558 = -558331233;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu66515843 = -565553965;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu68537343 = -121266405;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu42306685 = -62985883;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu71420667 = -573814679;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu7208695 = -998498888;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu62492278 = -473708285;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu4477069 = -965329134;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu1338071 = -295430822;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu56765602 = -133997355;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu58003649 = -348354165;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu60895518 = -121231034;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu81551447 = -978686645;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu8932168 = -788461437;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu79419600 = -573373342;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu16911132 = -781764682;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu60452460 = -858884610;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu53888908 = 82577523;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu19302035 = -20807787;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu45962402 = -736166779;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu62267317 = -219358729;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu43487008 = -412418949;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu34998542 = -824690152;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu92918198 = 9075349;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu15669147 = -98875040;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu48442670 = -986700298;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu12049682 = -176891609;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu49879041 = -903597016;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu8027788 = -808357180;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu8389270 = 42014353;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu75231437 = -200420216;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu80485353 = -945749853;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu92784836 = -452265465;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu56797627 = -648404437;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu52086797 = -260194412;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu14508225 = -508314722;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu45660606 = 49780231;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu56130981 = -839383907;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu84051498 = -347820755;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu48519487 = -958256519;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu31923530 = -893249122;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu93013763 = -962610883;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu15751989 = -442932737;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu83369329 = -669020478;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu19236631 = -935422115;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu8262388 = -965868800;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu64248914 = -250857283;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu36730243 = -887110691;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu50094477 = -754818145;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu9994646 = -631270109;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu4457944 = -928702160;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu17682111 = 79631780;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu73934445 = -628357150;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu78090615 = -143646415;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu47981067 = -221739592;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu86975549 = -45912284;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu31517301 = -740863814;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu75619145 = -30341755;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu26637538 = -964110844;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu22977998 = -587114381;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu95159013 = -721607280;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu12613237 = -570111270;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu96449280 = -56971954;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu92948800 = -237445176;    int tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu81534165 = -147298745;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu59758148 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu60577067;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu60577067 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu75133473;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu75133473 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu70158477;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu70158477 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu84827052;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu84827052 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu94243030;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu94243030 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu57712091;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu57712091 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu79393118;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu79393118 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu34933564;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu34933564 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu73299673;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu73299673 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu46802455;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu46802455 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu73721833;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu73721833 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu16837854;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu16837854 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu67046011;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu67046011 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu82549354;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu82549354 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu81024067;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu81024067 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu14197950;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu14197950 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu98437666;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu98437666 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu55472166;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu55472166 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu55728181;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu55728181 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu94415808;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu94415808 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu97490831;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu97490831 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu17090059;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu17090059 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu40134931;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu40134931 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu77240279;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu77240279 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu69157905;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu69157905 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu45800361;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu45800361 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu45662410;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu45662410 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu29514077;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu29514077 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu26905777;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu26905777 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu64910403;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu64910403 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu71571018;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu71571018 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu93236480;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu93236480 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu24053017;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu24053017 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu10248384;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu10248384 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu30462558;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu30462558 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu66515843;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu66515843 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu68537343;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu68537343 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu42306685;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu42306685 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu71420667;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu71420667 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu7208695;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu7208695 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu62492278;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu62492278 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu4477069;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu4477069 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu1338071;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu1338071 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu56765602;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu56765602 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu58003649;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu58003649 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu60895518;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu60895518 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu81551447;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu81551447 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu8932168;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu8932168 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu79419600;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu79419600 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu16911132;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu16911132 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu60452460;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu60452460 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu53888908;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu53888908 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu19302035;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu19302035 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu45962402;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu45962402 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu62267317;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu62267317 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu43487008;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu43487008 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu34998542;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu34998542 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu92918198;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu92918198 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu15669147;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu15669147 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu48442670;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu48442670 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu12049682;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu12049682 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu49879041;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu49879041 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu8027788;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu8027788 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu8389270;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu8389270 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu75231437;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu75231437 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu80485353;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu80485353 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu92784836;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu92784836 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu56797627;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu56797627 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu52086797;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu52086797 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu14508225;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu14508225 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu45660606;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu45660606 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu56130981;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu56130981 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu84051498;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu84051498 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu48519487;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu48519487 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu31923530;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu31923530 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu93013763;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu93013763 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu15751989;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu15751989 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu83369329;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu83369329 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu19236631;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu19236631 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu8262388;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu8262388 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu64248914;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu64248914 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu36730243;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu36730243 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu50094477;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu50094477 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu9994646;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu9994646 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu4457944;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu4457944 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu17682111;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu17682111 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu73934445;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu73934445 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu78090615;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu78090615 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu47981067;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu47981067 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu86975549;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu86975549 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu31517301;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu31517301 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu75619145;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu75619145 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu26637538;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu26637538 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu22977998;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu22977998 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu95159013;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu95159013 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu12613237;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu12613237 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu96449280;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu96449280 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu92948800;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu92948800 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu81534165;     tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu81534165 = tpuAYSDexLixcOXZBddyyupPZTKTEqdkldoktoAu59758148;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void qHwDtXXGfxTNVvzibwJygj680868() {     int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo49884457 = -206054946;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo43702132 = -625708677;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo70626172 = -864502445;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo43657052 = -560872751;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo97883788 = -227298315;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo75029435 = -108877333;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo52375529 = -590009208;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo32271682 = -968236241;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo58745252 = -229284607;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo77555343 = -415446941;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo22954274 = -746631069;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo8471341 = -174502924;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo55183986 = -744314519;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo5464865 = -187663642;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo80623726 = -303646587;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo5203810 = -874248556;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo58160130 = -432831415;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo19793379 = -345219082;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo16386557 = -388045869;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo23052430 = -504633716;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo82338210 = -71382500;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo95572413 = -161036652;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo50328477 = -144823479;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo48056028 = -251042208;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo24125468 = -927287223;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo87948870 = 37026431;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo67767696 = 10927078;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo68832785 = -735462185;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo90723074 = 9609465;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo74694856 = -287437181;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo68373806 = -14253313;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo70937932 = -438615116;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo2205522 = 50609904;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo47891661 = -971264352;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo45844918 = -191433981;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo83693564 = -861360643;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo66749411 = -81369869;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo92894626 = 12674351;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo52839702 = -870447929;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo15932809 = -478522452;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo20908368 = -704360164;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo17136741 = -288201498;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo64293910 = -340754729;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo32000012 = -159514011;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo48730019 = -246507311;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo78442642 = -831978070;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo41318809 = -769713534;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo71937906 = 94657101;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo36850821 = -124400783;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo8700006 = 69630321;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo46276655 = -56146726;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo4225568 = -823311443;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo3341363 = -729275472;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo72209097 = -144363068;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo18342657 = -864767051;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo54312043 = 54981705;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo93373654 = -380885199;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo22570144 = -513460237;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo19531585 = -633585529;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo9934918 = -164324747;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo7261740 = -19804412;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo83542744 = -854547023;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo41548607 = -877845706;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo84050395 = -941847426;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo9181538 = -301193628;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo52016342 = -208015954;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo6265820 = -125112828;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo7292325 = -773050168;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo59619947 = -996229661;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo96930162 = -442285945;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo38454398 = -692878687;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo65265503 = -345505767;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo66953677 = -474771154;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo453749 = -909523418;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo2144062 = -800273553;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo65201469 = -783181002;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo31278504 = -820281923;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo18328466 = -985309469;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo99326009 = 95465102;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo45682825 = 4690847;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo46630062 = -193260035;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo95829789 = 16269976;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo31981964 = -511061403;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo82023068 = 39979144;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo28418202 = -131290456;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo64148239 = -190941871;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo67596569 = -709339644;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo29996424 = -805027028;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo29549005 = -6497301;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo91532874 = -146415687;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo90319909 = -380475445;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo44179268 = -567909632;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo73363042 = -353740121;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo42904785 = -606123183;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo8671070 = -358718040;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo37365624 = -849813141;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo75588134 = -410355793;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo80243514 = -398907303;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo22818474 = -858320383;    int YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo96713677 = -206054946;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo49884457 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo43702132;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo43702132 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo70626172;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo70626172 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo43657052;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo43657052 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo97883788;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo97883788 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo75029435;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo75029435 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo52375529;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo52375529 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo32271682;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo32271682 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo58745252;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo58745252 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo77555343;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo77555343 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo22954274;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo22954274 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo8471341;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo8471341 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo55183986;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo55183986 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo5464865;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo5464865 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo80623726;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo80623726 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo5203810;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo5203810 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo58160130;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo58160130 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo19793379;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo19793379 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo16386557;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo16386557 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo23052430;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo23052430 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo82338210;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo82338210 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo95572413;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo95572413 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo50328477;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo50328477 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo48056028;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo48056028 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo24125468;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo24125468 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo87948870;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo87948870 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo67767696;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo67767696 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo68832785;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo68832785 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo90723074;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo90723074 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo74694856;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo74694856 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo68373806;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo68373806 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo70937932;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo70937932 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo2205522;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo2205522 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo47891661;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo47891661 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo45844918;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo45844918 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo83693564;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo83693564 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo66749411;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo66749411 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo92894626;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo92894626 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo52839702;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo52839702 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo15932809;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo15932809 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo20908368;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo20908368 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo17136741;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo17136741 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo64293910;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo64293910 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo32000012;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo32000012 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo48730019;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo48730019 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo78442642;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo78442642 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo41318809;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo41318809 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo71937906;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo71937906 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo36850821;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo36850821 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo8700006;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo8700006 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo46276655;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo46276655 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo4225568;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo4225568 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo3341363;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo3341363 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo72209097;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo72209097 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo18342657;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo18342657 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo54312043;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo54312043 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo93373654;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo93373654 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo22570144;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo22570144 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo19531585;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo19531585 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo9934918;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo9934918 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo7261740;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo7261740 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo83542744;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo83542744 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo41548607;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo41548607 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo84050395;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo84050395 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo9181538;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo9181538 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo52016342;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo52016342 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo6265820;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo6265820 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo7292325;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo7292325 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo59619947;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo59619947 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo96930162;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo96930162 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo38454398;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo38454398 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo65265503;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo65265503 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo66953677;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo66953677 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo453749;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo453749 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo2144062;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo2144062 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo65201469;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo65201469 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo31278504;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo31278504 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo18328466;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo18328466 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo99326009;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo99326009 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo45682825;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo45682825 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo46630062;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo46630062 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo95829789;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo95829789 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo31981964;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo31981964 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo82023068;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo82023068 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo28418202;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo28418202 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo64148239;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo64148239 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo67596569;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo67596569 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo29996424;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo29996424 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo29549005;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo29549005 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo91532874;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo91532874 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo90319909;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo90319909 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo44179268;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo44179268 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo73363042;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo73363042 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo42904785;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo42904785 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo8671070;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo8671070 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo37365624;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo37365624 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo75588134;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo75588134 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo80243514;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo80243514 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo22818474;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo22818474 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo96713677;     YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo96713677 = YuVihiPRiLZJutlJqnohuozLhmffDcFZnGjBiKpo49884457;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void pNigsLZXNWDYGStEhzmTtQ96864027() {     int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck9480554 = -434811323;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45207981 = -435864062;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck7627560 = -938643368;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck39532811 = -333483629;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck9177015 = -127805343;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck72706556 = 32862993;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck49734012 = 80273206;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck83096965 = -222447616;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck72558695 = -761957107;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck60579859 = -356705795;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck48249206 = -48173509;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck43142543 = -269524173;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck25938549 = -650493037;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck63838703 = -91821989;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck77931532 = 3826892;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck1958065 = -679621447;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck94121233 = -361047696;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck84461710 = -714555187;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck96828760 = -527165499;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck2969539 = -67042370;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck62799329 = 95596676;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck64062012 = -53438529;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck42520302 = 90881442;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck12786268 = -915380445;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck103473 = -383424813;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck82363777 = -97591040;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck81107766 = -438552919;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck33943954 = -256843776;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck40507418 = -879983150;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck13168324 = -334420424;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck93288124 = -659472641;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck13703193 = -855833113;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck51287560 = 70663032;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck30416104 = -473148283;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck50782279 = -939643967;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck62283460 = -73017225;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck57381089 = -374148504;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck91254964 = 68221961;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck71857645 = -589154446;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck88758463 = -752403400;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck79126181 = -73021760;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck87215922 = -293142917;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck5173152 = -74199559;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck6239517 = -583428750;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck49718335 = -792825379;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck43235771 = 25077771;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck46807531 = -661569201;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck18634300 = -238096127;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck76240469 = -408338403;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck23867398 = -251622140;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck96762905 = -942254950;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck10810720 = -794554698;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck78756877 = -969223926;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45483621 = -404532024;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck34064698 = -828701138;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45418541 = -281372794;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck2687679 = -426745505;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck94841292 = 76737077;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck39429338 = -950058816;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck26813237 = 69785697;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck91598789 = -528584088;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck15790058 = -662883019;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck42589548 = -342464467;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck59390372 = -327536683;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck67291734 = -697233154;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck34546013 = -192340396;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck91854982 = -240187205;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck95522445 = -77344755;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck13056425 = -152178023;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck15648072 = -923155884;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck44576975 = -205472944;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck2866270 = -329269657;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck12604065 = -25400742;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck8070297 = -774762100;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck23843358 = -994020610;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck75583407 = -611260408;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck58888860 = -979238971;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck36280786 = -325689809;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck63067932 = -22555066;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck56867701 = -308502585;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck35556247 = -436021839;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck62473466 = -100456793;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck57703485 = -848505373;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck16640020 = -528361010;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck16405418 = -392165474;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck82477404 = -864917944;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck34946315 = -886609188;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck5803940 = -524804945;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck96351405 = -644447146;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck5363738 = -558271173;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck59595782 = -646271721;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck62539796 = -350885581;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck51825626 = 18280777;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45044408 = -558940143;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck97159673 = -123819312;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck63336123 = -410138742;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck44626374 = -950678451;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45782780 = -746662876;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck38947783 = -886195596;    int hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck15172322 = -434811323;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck9480554 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45207981;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45207981 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck7627560;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck7627560 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck39532811;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck39532811 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck9177015;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck9177015 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck72706556;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck72706556 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck49734012;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck49734012 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck83096965;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck83096965 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck72558695;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck72558695 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck60579859;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck60579859 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck48249206;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck48249206 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck43142543;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck43142543 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck25938549;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck25938549 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck63838703;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck63838703 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck77931532;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck77931532 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck1958065;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck1958065 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck94121233;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck94121233 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck84461710;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck84461710 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck96828760;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck96828760 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck2969539;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck2969539 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck62799329;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck62799329 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck64062012;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck64062012 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck42520302;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck42520302 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck12786268;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck12786268 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck103473;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck103473 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck82363777;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck82363777 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck81107766;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck81107766 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck33943954;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck33943954 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck40507418;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck40507418 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck13168324;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck13168324 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck93288124;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck93288124 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck13703193;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck13703193 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck51287560;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck51287560 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck30416104;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck30416104 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck50782279;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck50782279 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck62283460;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck62283460 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck57381089;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck57381089 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck91254964;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck91254964 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck71857645;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck71857645 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck88758463;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck88758463 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck79126181;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck79126181 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck87215922;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck87215922 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck5173152;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck5173152 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck6239517;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck6239517 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck49718335;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck49718335 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck43235771;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck43235771 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck46807531;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck46807531 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck18634300;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck18634300 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck76240469;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck76240469 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck23867398;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck23867398 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck96762905;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck96762905 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck10810720;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck10810720 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck78756877;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck78756877 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45483621;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45483621 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck34064698;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck34064698 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45418541;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45418541 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck2687679;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck2687679 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck94841292;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck94841292 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck39429338;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck39429338 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck26813237;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck26813237 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck91598789;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck91598789 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck15790058;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck15790058 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck42589548;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck42589548 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck59390372;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck59390372 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck67291734;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck67291734 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck34546013;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck34546013 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck91854982;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck91854982 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck95522445;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck95522445 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck13056425;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck13056425 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck15648072;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck15648072 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck44576975;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck44576975 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck2866270;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck2866270 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck12604065;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck12604065 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck8070297;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck8070297 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck23843358;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck23843358 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck75583407;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck75583407 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck58888860;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck58888860 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck36280786;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck36280786 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck63067932;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck63067932 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck56867701;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck56867701 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck35556247;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck35556247 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck62473466;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck62473466 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck57703485;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck57703485 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck16640020;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck16640020 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck16405418;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck16405418 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck82477404;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck82477404 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck34946315;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck34946315 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck5803940;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck5803940 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck96351405;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck96351405 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck5363738;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck5363738 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck59595782;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck59595782 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck62539796;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck62539796 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck51825626;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck51825626 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45044408;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45044408 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck97159673;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck97159673 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck63336123;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck63336123 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck44626374;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck44626374 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45782780;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck45782780 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck38947783;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck38947783 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck15172322;     hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck15172322 = hkmTiowKLYLNNVplUVQrLfAKNKFGLScQXZgyuYck9480554;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void TYHMPqkeijYmRGgcpTathH93047187() {     int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh69076650 = -663567701;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh46713831 = -246019447;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh44628948 = 87215710;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh35408569 = -106094506;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh20470241 = -28312370;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh70383676 = -925396680;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh47092494 = -349444380;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh33922249 = -576658991;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh86372139 = -194629606;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh43604374 = -297964648;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh73544137 = -449715948;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh77813744 = -364545423;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh96693111 = -556671556;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh22212542 = 4019664;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh75239337 = -788699630;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh98712318 = -484994339;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh30082338 = -289263976;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh49130041 = 16108708;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh77270963 = -666285129;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh82886648 = -729451023;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh43260447 = -837424149;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh32551611 = 54159593;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh34712128 = -773413637;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh77516506 = -479718681;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh76081477 = -939562403;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh76778684 = -232208511;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh94447837 = -888032916;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh99055122 = -878225366;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh90291760 = -669575765;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh51641790 = -381403666;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh18202443 = -204691969;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh56468453 = -173051111;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh369599 = 90716159;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh12940546 = 24967786;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh55719640 = -587853953;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh40873357 = -384673807;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh48012767 = -666927139;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh89615302 = -976230428;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh90875587 = -307860962;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh61584118 = 73715652;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh37343995 = -541683357;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh57295103 = -298084335;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh46052394 = -907644388;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh80479022 = 92656512;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh50706650 = -239143448;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh8028900 = -217866388;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh52296253 = -553424868;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh65330694 = -570849356;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh15630117 = -692276023;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh39034791 = -572874601;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh47249156 = -728363174;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh17395873 = -765797953;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh54172391 = -109172379;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh18758144 = -664700979;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh49786740 = -792635225;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh36525040 = -617727294;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh12001704 = -472605811;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh67112442 = -433065609;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh59327092 = -166532103;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh43691556 = -796103860;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh75935839 = 62636236;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh48037372 = -471219015;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh43630489 = -907083227;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh34730350 = -813225940;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh25401931 = 6727320;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh17075685 = -176664838;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh77444145 = -355261582;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh83752566 = -481639342;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh66492902 = -408126384;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh34365981 = -304025824;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh50699551 = -818067200;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh40467036 = -313033548;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh58254453 = -676030330;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh15686846 = -640000782;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh45542653 = -87767666;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh85965344 = -439339814;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh86499216 = -38196019;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh54233105 = -766070149;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh26809856 = -140575234;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh68052577 = -621696016;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh24482432 = -678783643;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh29117143 = -217183561;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh83425006 = -85949344;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh51256970 = 3298835;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh4392634 = -653040492;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh806570 = -438894017;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh2296062 = 36121268;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh81611455 = -244582862;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh63153806 = -182396990;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh19194601 = -970126659;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh28871654 = -912067997;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh80900325 = -133861530;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh30288210 = -709698326;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh47184032 = -511757103;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh85648278 = -988920584;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh89306622 = 29535657;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh13664615 = -391001109;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh11322045 = 5581552;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh55077091 = -914070809;    int kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh33630966 = -663567701;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh69076650 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh46713831;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh46713831 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh44628948;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh44628948 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh35408569;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh35408569 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh20470241;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh20470241 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh70383676;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh70383676 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh47092494;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh47092494 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh33922249;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh33922249 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh86372139;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh86372139 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh43604374;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh43604374 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh73544137;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh73544137 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh77813744;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh77813744 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh96693111;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh96693111 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh22212542;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh22212542 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh75239337;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh75239337 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh98712318;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh98712318 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh30082338;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh30082338 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh49130041;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh49130041 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh77270963;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh77270963 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh82886648;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh82886648 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh43260447;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh43260447 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh32551611;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh32551611 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh34712128;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh34712128 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh77516506;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh77516506 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh76081477;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh76081477 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh76778684;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh76778684 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh94447837;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh94447837 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh99055122;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh99055122 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh90291760;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh90291760 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh51641790;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh51641790 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh18202443;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh18202443 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh56468453;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh56468453 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh369599;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh369599 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh12940546;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh12940546 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh55719640;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh55719640 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh40873357;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh40873357 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh48012767;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh48012767 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh89615302;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh89615302 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh90875587;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh90875587 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh61584118;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh61584118 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh37343995;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh37343995 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh57295103;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh57295103 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh46052394;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh46052394 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh80479022;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh80479022 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh50706650;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh50706650 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh8028900;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh8028900 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh52296253;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh52296253 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh65330694;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh65330694 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh15630117;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh15630117 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh39034791;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh39034791 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh47249156;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh47249156 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh17395873;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh17395873 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh54172391;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh54172391 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh18758144;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh18758144 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh49786740;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh49786740 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh36525040;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh36525040 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh12001704;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh12001704 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh67112442;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh67112442 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh59327092;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh59327092 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh43691556;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh43691556 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh75935839;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh75935839 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh48037372;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh48037372 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh43630489;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh43630489 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh34730350;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh34730350 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh25401931;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh25401931 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh17075685;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh17075685 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh77444145;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh77444145 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh83752566;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh83752566 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh66492902;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh66492902 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh34365981;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh34365981 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh50699551;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh50699551 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh40467036;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh40467036 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh58254453;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh58254453 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh15686846;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh15686846 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh45542653;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh45542653 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh85965344;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh85965344 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh86499216;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh86499216 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh54233105;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh54233105 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh26809856;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh26809856 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh68052577;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh68052577 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh24482432;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh24482432 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh29117143;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh29117143 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh83425006;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh83425006 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh51256970;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh51256970 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh4392634;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh4392634 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh806570;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh806570 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh2296062;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh2296062 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh81611455;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh81611455 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh63153806;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh63153806 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh19194601;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh19194601 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh28871654;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh28871654 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh80900325;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh80900325 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh30288210;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh30288210 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh47184032;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh47184032 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh85648278;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh85648278 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh89306622;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh89306622 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh13664615;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh13664615 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh11322045;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh11322045 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh55077091;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh55077091 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh33630966;     kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh33630966 = kBOgoCJSKpwIWYCgaxmOKXJLRlOcelNpMMnGyjBh69076650;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void DVvNcMbrydSzZQsELxFNbX5592377() {     int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx88544820 = 23301087;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx99737694 = -791897443;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx61465940 = -664412905;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx54055718 = 77331231;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx20916757 = -654584786;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx95975750 = -815881448;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx91924372 = -792750610;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx99172482 = -670466957;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx47058936 = -922820985;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx21533097 = -303550694;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx27767401 = -882706248;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx81308357 = -363848127;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx87064771 = -981028832;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx30628583 = -538266062;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx35765799 = 13216579;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx64927967 = -948186272;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx36044451 = -461038657;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx73192792 = -834646010;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx76905842 = 56510110;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx63497950 = -346987479;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx55716519 = -343636474;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx47533694 = -457643620;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx2885134 = 29011744;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx95238174 = -116262673;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx87284966 = -133862513;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx81546145 = 81996271;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx78375968 = -553183848;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx49846797 = 58041355;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx32036718 = -683486911;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx36348644 = -472842360;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx48006528 = -70018062;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx96047763 = -737400129;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx11845703 = -464491607;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx71697053 = -279635421;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx95649976 = -650556759;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx76939294 = -688242415;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx16396218 = -93803213;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx31097776 = 46560756;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx58188913 = -772275787;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx82865854 = 77184555;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx78826051 = 48530347;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx69154236 = -536980561;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx17185636 = -855446186;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx63864561 = -356416149;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx30735062 = -516266411;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx62490027 = -755197809;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx34286133 = -467118191;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx65486524 = -754136670;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx56765707 = -706215261;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx79933133 = -333886946;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx21684725 = -34728105;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx33844733 = -43150812;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx23997538 = -885281340;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx91688172 = -659294615;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx49875857 = -567193860;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx41011127 = -519055293;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx96852561 = -720909188;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx66227765 = -448150232;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx66770751 = -788806257;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx39370611 = -636581057;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx17599783 = -162697601;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx42077576 = -750791966;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx67135765 = -986980047;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx10710293 = -349978625;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx73526569 = -133532633;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx31719637 = -45306120;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx69462655 = -899356520;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx15367719 = -601393412;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx34978606 = -887709304;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx58826505 = -298541007;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx48531750 = -754383059;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx4946675 = -407599414;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx15003880 = 37629777;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx94039988 = 79325554;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx84671898 = -295517827;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx86562283 = -806655913;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx30348059 = -602197435;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx39020573 = -614572107;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx64503113 = -599996263;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx24794939 = -378664704;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx47260013 = -450885538;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx12889444 = -799047179;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx93081089 = -235743384;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx52103584 = -249599966;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx14663919 = -338114255;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx14161795 = 73132750;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx72050225 = -852118789;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx20157530 = -805196993;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx21821196 = -712441561;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx54638849 = -31501466;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx80086733 = -967333227;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx50168452 = -645652982;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx64327024 = -164632987;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx18818302 = -35694731;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx65266071 = -760117844;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx36748476 = -200677687;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx2018471 = -550000515;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx6475343 = -405467561;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx90337991 = -122883517;    int wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx99015424 = 23301087;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx88544820 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx99737694;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx99737694 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx61465940;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx61465940 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx54055718;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx54055718 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx20916757;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx20916757 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx95975750;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx95975750 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx91924372;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx91924372 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx99172482;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx99172482 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx47058936;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx47058936 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx21533097;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx21533097 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx27767401;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx27767401 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx81308357;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx81308357 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx87064771;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx87064771 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx30628583;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx30628583 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx35765799;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx35765799 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx64927967;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx64927967 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx36044451;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx36044451 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx73192792;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx73192792 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx76905842;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx76905842 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx63497950;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx63497950 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx55716519;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx55716519 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx47533694;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx47533694 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx2885134;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx2885134 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx95238174;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx95238174 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx87284966;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx87284966 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx81546145;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx81546145 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx78375968;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx78375968 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx49846797;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx49846797 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx32036718;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx32036718 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx36348644;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx36348644 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx48006528;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx48006528 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx96047763;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx96047763 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx11845703;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx11845703 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx71697053;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx71697053 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx95649976;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx95649976 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx76939294;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx76939294 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx16396218;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx16396218 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx31097776;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx31097776 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx58188913;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx58188913 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx82865854;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx82865854 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx78826051;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx78826051 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx69154236;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx69154236 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx17185636;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx17185636 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx63864561;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx63864561 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx30735062;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx30735062 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx62490027;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx62490027 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx34286133;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx34286133 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx65486524;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx65486524 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx56765707;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx56765707 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx79933133;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx79933133 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx21684725;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx21684725 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx33844733;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx33844733 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx23997538;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx23997538 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx91688172;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx91688172 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx49875857;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx49875857 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx41011127;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx41011127 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx96852561;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx96852561 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx66227765;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx66227765 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx66770751;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx66770751 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx39370611;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx39370611 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx17599783;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx17599783 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx42077576;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx42077576 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx67135765;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx67135765 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx10710293;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx10710293 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx73526569;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx73526569 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx31719637;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx31719637 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx69462655;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx69462655 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx15367719;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx15367719 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx34978606;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx34978606 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx58826505;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx58826505 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx48531750;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx48531750 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx4946675;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx4946675 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx15003880;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx15003880 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx94039988;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx94039988 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx84671898;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx84671898 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx86562283;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx86562283 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx30348059;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx30348059 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx39020573;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx39020573 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx64503113;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx64503113 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx24794939;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx24794939 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx47260013;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx47260013 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx12889444;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx12889444 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx93081089;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx93081089 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx52103584;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx52103584 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx14663919;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx14663919 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx14161795;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx14161795 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx72050225;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx72050225 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx20157530;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx20157530 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx21821196;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx21821196 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx54638849;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx54638849 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx80086733;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx80086733 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx50168452;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx50168452 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx64327024;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx64327024 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx18818302;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx18818302 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx65266071;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx65266071 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx36748476;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx36748476 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx2018471;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx2018471 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx6475343;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx6475343 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx90337991;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx90337991 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx99015424;     wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx99015424 = wukaTdVqLGJgrSZtKGyhyQaSVpbazpYEXgZAdCsx88544820;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void DHHLpFOhlhdVGkIDgMYWra65895033() {     int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt78671129 = -35455113;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt82862759 = -66823614;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt56958639 = -801207366;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt27554293 = -108840591;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33973492 = -595908228;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt76762155 = -708514556;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt86587811 = -430296083;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt52051046 = -306914696;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt70870624 = -930713623;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt25788767 = -973425220;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt3919220 = -291126406;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt16057866 = -943436263;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt25410904 = -193264693;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt69047436 = -536426946;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33840171 = -471904364;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt89107709 = -648566142;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt80006631 = -722383899;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt94548505 = -177495302;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt37820233 = -409900326;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt30822198 = -994865788;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt43638922 = -48061566;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt45615276 = -790740256;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt36123552 = -377448177;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt3159273 = -564287049;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt34170154 = -777373457;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt337111 = -893877464;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt343303 = -312712842;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt73017172 = -1848703;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt93245715 = -345685959;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt84137723 = -347244752;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt51469930 = -396684606;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt95414677 = -138224548;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt20814744 = -764716767;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt95535697 = -271086579;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt31246511 = -300892419;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt30170301 = -991271825;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt16629787 = -709619118;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt55455059 = -919498488;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt68721930 = -479737833;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt27377996 = -927523218;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt92525725 = -757330928;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt23798700 = -351473774;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt77002476 = -230871781;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt94526501 = -220499338;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt22699479 = -628776367;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt82929021 = -138821715;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt14709423 = -15600691;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt55872983 = -780792923;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt84684361 = -42154608;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt9213539 = -790883283;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt51050249 = -409110150;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt77617840 = -7577645;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt73449993 = -597134335;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt44595234 = -782849897;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt22256112 = -695794132;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33055854 = -244714858;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt46739208 = -689375437;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt53799367 = -136920318;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt93384138 = -331467135;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33636382 = -702030764;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt76418852 = -295801715;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt13570639 = -328447380;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt58805331 = -961228737;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt86732900 = -483468871;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt74318836 = -476740614;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt8504543 = -52901858;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt95243122 = -78719496;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt29875206 = -922178115;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt37800926 = -135534528;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt3669870 = -480632539;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt72477923 = -938947025;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt24551572 = -802885411;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt25826575 = -697757470;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt10442238 = -482377108;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt38296473 = -137534861;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt19840223 = -696587793;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt68612799 = -459868475;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt41597050 = -56948839;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt80459793 = -935510683;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt51241133 = -538551743;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt85627687 = -778276773;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt44470320 = -531919919;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt88332811 = -959694096;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt84032176 = -554802676;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33087475 = -938134602;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt73852090 = -289106961;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt21964685 = -541090214;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt76219509 = -981866871;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt73279586 = -575292447;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt98190657 = 43822439;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt83431093 = -201896388;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt62830420 = -472698800;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt62070921 = -488031353;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt35085548 = -777707069;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt50959143 = -531721503;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt78955086 = -328883549;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt64993368 = -390245037;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt90269576 = -747402910;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt20207665 = -743758724;    int MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt14194937 = -35455113;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt78671129 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt82862759;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt82862759 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt56958639;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt56958639 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt27554293;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt27554293 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33973492;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33973492 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt76762155;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt76762155 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt86587811;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt86587811 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt52051046;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt52051046 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt70870624;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt70870624 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt25788767;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt25788767 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt3919220;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt3919220 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt16057866;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt16057866 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt25410904;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt25410904 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt69047436;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt69047436 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33840171;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33840171 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt89107709;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt89107709 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt80006631;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt80006631 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt94548505;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt94548505 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt37820233;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt37820233 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt30822198;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt30822198 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt43638922;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt43638922 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt45615276;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt45615276 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt36123552;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt36123552 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt3159273;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt3159273 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt34170154;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt34170154 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt337111;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt337111 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt343303;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt343303 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt73017172;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt73017172 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt93245715;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt93245715 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt84137723;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt84137723 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt51469930;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt51469930 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt95414677;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt95414677 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt20814744;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt20814744 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt95535697;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt95535697 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt31246511;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt31246511 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt30170301;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt30170301 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt16629787;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt16629787 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt55455059;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt55455059 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt68721930;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt68721930 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt27377996;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt27377996 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt92525725;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt92525725 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt23798700;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt23798700 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt77002476;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt77002476 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt94526501;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt94526501 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt22699479;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt22699479 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt82929021;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt82929021 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt14709423;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt14709423 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt55872983;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt55872983 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt84684361;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt84684361 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt9213539;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt9213539 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt51050249;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt51050249 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt77617840;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt77617840 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt73449993;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt73449993 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt44595234;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt44595234 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt22256112;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt22256112 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33055854;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33055854 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt46739208;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt46739208 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt53799367;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt53799367 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt93384138;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt93384138 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33636382;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33636382 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt76418852;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt76418852 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt13570639;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt13570639 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt58805331;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt58805331 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt86732900;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt86732900 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt74318836;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt74318836 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt8504543;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt8504543 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt95243122;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt95243122 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt29875206;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt29875206 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt37800926;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt37800926 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt3669870;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt3669870 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt72477923;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt72477923 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt24551572;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt24551572 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt25826575;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt25826575 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt10442238;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt10442238 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt38296473;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt38296473 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt19840223;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt19840223 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt68612799;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt68612799 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt41597050;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt41597050 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt80459793;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt80459793 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt51241133;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt51241133 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt85627687;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt85627687 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt44470320;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt44470320 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt88332811;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt88332811 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt84032176;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt84032176 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33087475;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt33087475 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt73852090;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt73852090 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt21964685;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt21964685 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt76219509;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt76219509 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt73279586;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt73279586 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt98190657;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt98190657 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt83431093;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt83431093 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt62830420;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt62830420 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt62070921;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt62070921 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt35085548;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt35085548 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt50959143;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt50959143 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt78955086;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt78955086 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt64993368;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt64993368 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt90269576;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt90269576 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt20207665;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt20207665 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt14194937;     MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt14194937 = MHmxHUJHmNOZqMUyRCaisPAcoiAIohqShcvzYsxt78671129;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void TVLppkpKHuzVsyvoamngWj62078194() {     int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw38267226 = -264211491;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw84368609 = -976978999;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw93960026 = -875348289;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw23430051 = -981451469;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw45266719 = -496415255;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw74439276 = -566774229;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw83946293 = -860013669;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw2876330 = -661126071;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw84684067 = -363386122;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw8813282 = -914684073;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw29214151 = -692668845;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw50729067 = 61542488;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw96165466 = -99443211;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw27421275 = -440585294;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw31147977 = -164430885;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw85861963 = -453939034;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw15967735 = -650600179;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw59216836 = -546831407;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw18262437 = -549019955;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw10739308 = -557274441;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw24100041 = -981082391;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw14104875 = -683142133;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw28315377 = -141743256;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw67889511 = -128625286;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw10148160 = -233511047;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw94752017 = 71505065;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw13683374 = -762192839;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw38128342 = -623230293;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw43030058 = -135278574;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw22611191 = -394227994;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw76384248 = 58096066;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw38179938 = -555442546;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw69896782 = -744663639;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw78060140 = -872970510;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw36183872 = 50897595;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw8760198 = -202928407;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw7261464 = 97602248;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw53815397 = -863950877;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw87739872 = -198444350;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw203650 = -101404166;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw50743539 = -125992525;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw93877880 = -356415193;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw17881719 = 35683389;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw68766007 = -644414077;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw23687795 = -75094435;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw47722150 = -381765874;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw20198146 = 92543642;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw2569377 = -13546152;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw24074009 = -326092227;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw24380931 = -12135744;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw1536499 = -195218374;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw84202993 = 21179099;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw48865507 = -837082789;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw17869758 = 56981148;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw37978154 = -659728219;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw24162352 = -581069358;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw56053232 = -735235744;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw26070516 = -646723004;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw13281892 = -647940422;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw50514701 = -467920320;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw60755902 = -804581391;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw45817952 = -136783376;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw59846272 = -425847498;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw62072877 = -969158129;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw32429034 = -872780140;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw91034213 = -37226300;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw80832285 = -193793873;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw18105327 = -226472702;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw91237403 = -391482889;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw22387779 = -961502478;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw78600499 = -451541282;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw62152338 = -786649302;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw71476963 = -248387058;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw18058787 = -347615790;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw59995768 = -331281917;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw30222160 = -524667199;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw96223155 = -618825523;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw59549370 = -497329179;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw44201717 = 46469149;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw62426009 = -851745174;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw74553872 = 78961423;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw11113997 = -648646688;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw14054333 = -197138066;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw18649127 = -23142831;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw21074692 = -99009620;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw92181255 = -963083034;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw89314430 = -718359757;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw52027024 = -701644788;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw40081987 = -113242292;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw12021520 = -368033047;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw52706965 = -467692664;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw81190948 = -255674749;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw40533505 = -116010456;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw37225172 = -730524030;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw39447748 = -296822776;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw4925587 = -989209149;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw34031609 = -930567696;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw55808841 = 4841517;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw36336974 = -771633937;    int SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw32653581 = -264211491;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw38267226 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw84368609;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw84368609 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw93960026;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw93960026 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw23430051;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw23430051 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw45266719;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw45266719 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw74439276;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw74439276 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw83946293;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw83946293 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw2876330;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw2876330 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw84684067;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw84684067 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw8813282;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw8813282 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw29214151;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw29214151 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw50729067;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw50729067 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw96165466;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw96165466 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw27421275;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw27421275 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw31147977;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw31147977 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw85861963;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw85861963 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw15967735;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw15967735 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw59216836;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw59216836 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw18262437;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw18262437 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw10739308;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw10739308 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw24100041;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw24100041 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw14104875;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw14104875 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw28315377;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw28315377 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw67889511;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw67889511 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw10148160;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw10148160 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw94752017;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw94752017 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw13683374;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw13683374 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw38128342;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw38128342 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw43030058;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw43030058 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw22611191;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw22611191 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw76384248;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw76384248 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw38179938;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw38179938 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw69896782;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw69896782 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw78060140;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw78060140 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw36183872;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw36183872 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw8760198;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw8760198 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw7261464;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw7261464 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw53815397;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw53815397 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw87739872;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw87739872 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw203650;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw203650 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw50743539;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw50743539 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw93877880;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw93877880 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw17881719;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw17881719 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw68766007;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw68766007 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw23687795;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw23687795 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw47722150;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw47722150 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw20198146;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw20198146 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw2569377;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw2569377 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw24074009;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw24074009 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw24380931;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw24380931 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw1536499;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw1536499 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw84202993;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw84202993 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw48865507;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw48865507 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw17869758;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw17869758 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw37978154;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw37978154 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw24162352;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw24162352 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw56053232;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw56053232 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw26070516;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw26070516 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw13281892;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw13281892 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw50514701;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw50514701 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw60755902;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw60755902 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw45817952;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw45817952 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw59846272;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw59846272 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw62072877;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw62072877 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw32429034;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw32429034 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw91034213;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw91034213 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw80832285;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw80832285 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw18105327;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw18105327 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw91237403;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw91237403 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw22387779;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw22387779 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw78600499;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw78600499 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw62152338;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw62152338 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw71476963;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw71476963 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw18058787;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw18058787 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw59995768;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw59995768 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw30222160;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw30222160 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw96223155;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw96223155 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw59549370;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw59549370 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw44201717;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw44201717 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw62426009;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw62426009 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw74553872;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw74553872 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw11113997;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw11113997 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw14054333;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw14054333 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw18649127;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw18649127 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw21074692;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw21074692 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw92181255;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw92181255 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw89314430;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw89314430 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw52027024;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw52027024 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw40081987;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw40081987 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw12021520;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw12021520 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw52706965;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw52706965 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw81190948;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw81190948 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw40533505;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw40533505 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw37225172;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw37225172 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw39447748;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw39447748 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw4925587;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw4925587 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw34031609;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw34031609 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw55808841;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw55808841 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw36336974;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw36336974 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw32653581;     SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw32653581 = SonlCsLHxOqTZIkfXaImFKpxiFUKYKFyBkCWCDhw38267226;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void XosmjgnUCUPpXhIQjVymge74623382() {     int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl57735396 = -677342703;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl37392473 = -422856995;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl10797019 = -526976904;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl42077200 = -798025732;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl45713235 = -22687671;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl31350 = -457258998;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl28778173 = -203319898;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl68126563 = -754934037;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl45370865 = 8422499;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl86742005 = -920270119;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl83437414 = -25659145;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl54223680 = 62239783;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl86537126 = -523800488;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl35837315 = -982871019;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl91674437 = -462514676;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl52077613 = -917130968;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl21929848 = -822374860;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl83279587 = -297586125;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl17897316 = -926224716;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl91350609 = -174810898;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl36556113 = -487294717;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl29086958 = -94945346;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl96488382 = -439317874;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl85611179 = -865169277;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl21351649 = -527811156;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl99519478 = -714290153;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl97611504 = -427343771;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl88920016 = -786963572;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl84775015 = -149189720;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl7318045 = -485666688;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl6188334 = -907230026;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl77759248 = -19791564;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl81372885 = -199871406;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl36816647 = -77573716;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl76114207 = -11805211;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl44826135 = -506497015;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl75644914 = -429273827;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl95297871 = -941159693;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl55053198 = -662859175;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl21485386 = -97935262;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl92225595 = -635778820;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl5737014 = -595311419;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl89014960 = 87881592;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl52151545 = 6513263;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl3716206 = -352217398;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl2183277 = -919097295;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl2188026 = -921149681;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl2725207 = -196833466;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl65209600 = -340031466;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl65279273 = -873148089;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl75972068 = -601583305;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl651854 = -356173760;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl18690654 = -513191750;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl90799786 = 62387512;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl38067270 = -434286854;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl28648439 = -482397357;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl40904090 = -983539121;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl25185839 = -661807627;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl20725552 = -170214576;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl46193756 = -308397518;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl2419846 = 70084773;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl39858156 = -416356327;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl83351548 = -505744318;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl38052821 = -505910813;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl80553671 = 86959907;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl5678167 = 94132418;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl72850795 = -737888811;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl49720479 = -346226772;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl59723107 = -871065809;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl46848303 = -956017662;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl76432698 = -387857141;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl26631977 = -881215168;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl28226390 = -634726951;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl96411929 = -728289454;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl99125013 = -539032078;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl30819099 = -891983298;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl40071998 = -82826939;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl44336837 = -345831137;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl81894974 = -412951879;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl19168372 = -608713862;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl97331453 = -793140473;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl94886297 = -130510306;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl23710416 = -346932107;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl19495742 = -276041631;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl31345977 = -884083383;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl5536481 = -451056267;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl59068595 = -506599814;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl90573099 = -162258918;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl98749376 = -643286863;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl47465769 = -529407855;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl3922045 = -522957895;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl50459076 = -767466201;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl74572319 = -670945118;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl8859442 = -254461657;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl19065541 = -68020035;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl52367440 = -119422494;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl22385465 = 10432899;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl50962140 = -406207596;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl71597874 = 19553355;    int jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl98038039 = -677342703;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl57735396 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl37392473;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl37392473 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl10797019;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl10797019 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl42077200;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl42077200 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl45713235;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl45713235 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl31350;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl31350 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl28778173;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl28778173 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl68126563;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl68126563 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl45370865;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl45370865 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl86742005;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl86742005 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl83437414;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl83437414 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl54223680;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl54223680 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl86537126;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl86537126 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl35837315;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl35837315 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl91674437;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl91674437 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl52077613;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl52077613 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl21929848;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl21929848 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl83279587;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl83279587 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl17897316;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl17897316 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl91350609;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl91350609 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl36556113;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl36556113 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl29086958;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl29086958 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl96488382;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl96488382 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl85611179;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl85611179 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl21351649;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl21351649 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl99519478;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl99519478 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl97611504;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl97611504 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl88920016;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl88920016 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl84775015;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl84775015 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl7318045;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl7318045 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl6188334;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl6188334 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl77759248;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl77759248 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl81372885;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl81372885 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl36816647;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl36816647 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl76114207;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl76114207 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl44826135;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl44826135 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl75644914;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl75644914 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl95297871;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl95297871 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl55053198;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl55053198 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl21485386;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl21485386 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl92225595;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl92225595 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl5737014;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl5737014 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl89014960;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl89014960 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl52151545;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl52151545 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl3716206;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl3716206 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl2183277;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl2183277 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl2188026;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl2188026 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl2725207;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl2725207 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl65209600;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl65209600 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl65279273;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl65279273 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl75972068;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl75972068 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl651854;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl651854 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl18690654;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl18690654 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl90799786;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl90799786 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl38067270;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl38067270 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl28648439;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl28648439 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl40904090;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl40904090 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl25185839;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl25185839 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl20725552;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl20725552 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl46193756;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl46193756 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl2419846;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl2419846 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl39858156;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl39858156 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl83351548;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl83351548 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl38052821;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl38052821 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl80553671;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl80553671 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl5678167;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl5678167 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl72850795;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl72850795 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl49720479;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl49720479 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl59723107;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl59723107 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl46848303;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl46848303 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl76432698;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl76432698 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl26631977;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl26631977 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl28226390;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl28226390 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl96411929;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl96411929 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl99125013;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl99125013 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl30819099;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl30819099 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl40071998;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl40071998 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl44336837;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl44336837 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl81894974;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl81894974 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl19168372;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl19168372 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl97331453;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl97331453 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl94886297;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl94886297 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl23710416;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl23710416 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl19495742;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl19495742 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl31345977;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl31345977 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl5536481;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl5536481 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl59068595;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl59068595 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl90573099;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl90573099 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl98749376;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl98749376 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl47465769;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl47465769 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl3922045;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl3922045 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl50459076;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl50459076 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl74572319;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl74572319 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl8859442;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl8859442 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl19065541;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl19065541 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl52367440;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl52367440 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl22385465;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl22385465 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl50962140;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl50962140 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl71597874;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl71597874 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl98038039;     jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl98038039 = jTidfBzYFEBfOfOIdDcWPPWVfTRiNxNMWtEZDFAl57735396;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void szpDAAAhewWQpUkHBNbbtv52705107() {     int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA23727813 = -487357355;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA62997608 = -846881824;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA56018200 = -826733210;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA99383440 = -572467332;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA99341962 = 65074730;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA1960790 = -904263922;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA52466866 = 46394714;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA97704378 = -929315883;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA15516632 = -648306011;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA24556116 = -945169353;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA62315734 = 45191444;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA47724296 = -418708693;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA76436883 = -921041098;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA92101083 = -880660440;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA28049466 = -677177687;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA75762127 = -831551728;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA57840481 = -672671089;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA78226894 = -795991570;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA38705699 = -161087810;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36558085 = -280829394;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA17269548 = -160740486;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA72952332 = -917280457;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA89621157 = 60364021;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA769930 = -119219759;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36055438 = -975822782;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA76306670 = -190020260;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA81548552 = -493277052;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA70005885 = -90760720;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36528661 = -822855798;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA34122134 = -509877321;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA86614310 = -947111112;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA79821992 = -780458520;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA10751687 = -16773563;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA7737858 = -143493890;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA31402816 = -935374174;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA49613994 = -122552276;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA78687938 = -17180448;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA37551381 = -847790789;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA59302035 = -496150272;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA71506959 = 60691210;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA87231229 = -148205464;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA86818591 = 97487537;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA17194258 = 72285167;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA69089370 = -259505376;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA52699740 = -58290746;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA83576486 = -742678338;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA82618861 = -821122563;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA76449793 = -302882406;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA17302078 = -923888142;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA93899164 = -606406338;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA28992380 = -174856180;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA14051652 = -921936810;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA73624568 = -345114841;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA81299036 = -276547389;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA35435560 = 33006455;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA50775480 = -570076899;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA73376451 = -807245845;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA55248271 = -607513452;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA63328003 = -596644551;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA23035292 = -744905011;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA20412238 = -310986871;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA82460981 = -862844566;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA61175717 = -6460085;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA81394498 = -38428691;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA37941805 = -998058242;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA82493742 = -174350037;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36972609 = -301935130;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA68699026 = -677547208;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA60698267 = -945286266;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA78435471 = -454625411;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA97074189 = -714371280;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA20289101 = -824880301;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA18924860 = -199841298;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA67198740 = -121779020;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA49326856 = -32623931;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA30450956 = -158228024;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA55758075 = -889565624;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA20531787 = -680130604;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA48070189 = 39070987;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA52478952 = -133144444;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA93687809 = -368897697;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA5098759 = -90394646;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA52703807 = -166872579;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA42629496 = -116449460;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA5129754 = -235021141;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA72562659 = 74825697;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA6197424 = -335343679;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA29452651 = -740226174;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA72302297 = -76500346;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA80627336 = -265297276;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA76237542 = -315306432;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA23439668 = -409666997;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA74223377 = -151146238;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36266743 = -751245262;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA51094721 = -628321920;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA4770249 = -285360899;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA25642875 = -896052379;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA35799759 = -889286143;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA31147565 = -261447135;    int HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA70205997 = -487357355;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA23727813 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA62997608;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA62997608 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA56018200;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA56018200 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA99383440;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA99383440 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA99341962;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA99341962 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA1960790;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA1960790 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA52466866;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA52466866 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA97704378;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA97704378 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA15516632;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA15516632 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA24556116;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA24556116 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA62315734;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA62315734 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA47724296;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA47724296 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA76436883;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA76436883 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA92101083;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA92101083 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA28049466;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA28049466 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA75762127;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA75762127 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA57840481;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA57840481 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA78226894;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA78226894 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA38705699;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA38705699 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36558085;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36558085 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA17269548;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA17269548 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA72952332;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA72952332 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA89621157;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA89621157 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA769930;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA769930 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36055438;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36055438 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA76306670;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA76306670 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA81548552;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA81548552 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA70005885;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA70005885 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36528661;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36528661 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA34122134;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA34122134 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA86614310;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA86614310 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA79821992;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA79821992 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA10751687;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA10751687 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA7737858;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA7737858 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA31402816;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA31402816 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA49613994;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA49613994 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA78687938;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA78687938 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA37551381;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA37551381 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA59302035;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA59302035 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA71506959;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA71506959 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA87231229;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA87231229 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA86818591;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA86818591 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA17194258;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA17194258 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA69089370;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA69089370 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA52699740;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA52699740 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA83576486;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA83576486 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA82618861;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA82618861 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA76449793;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA76449793 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA17302078;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA17302078 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA93899164;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA93899164 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA28992380;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA28992380 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA14051652;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA14051652 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA73624568;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA73624568 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA81299036;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA81299036 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA35435560;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA35435560 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA50775480;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA50775480 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA73376451;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA73376451 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA55248271;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA55248271 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA63328003;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA63328003 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA23035292;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA23035292 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA20412238;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA20412238 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA82460981;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA82460981 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA61175717;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA61175717 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA81394498;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA81394498 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA37941805;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA37941805 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA82493742;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA82493742 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36972609;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36972609 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA68699026;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA68699026 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA60698267;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA60698267 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA78435471;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA78435471 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA97074189;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA97074189 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA20289101;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA20289101 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA18924860;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA18924860 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA67198740;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA67198740 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA49326856;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA49326856 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA30450956;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA30450956 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA55758075;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA55758075 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA20531787;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA20531787 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA48070189;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA48070189 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA52478952;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA52478952 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA93687809;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA93687809 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA5098759;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA5098759 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA52703807;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA52703807 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA42629496;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA42629496 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA5129754;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA5129754 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA72562659;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA72562659 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA6197424;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA6197424 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA29452651;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA29452651 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA72302297;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA72302297 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA80627336;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA80627336 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA76237542;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA76237542 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA23439668;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA23439668 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA74223377;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA74223377 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36266743;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA36266743 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA51094721;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA51094721 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA4770249;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA4770249 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA25642875;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA25642875 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA35799759;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA35799759 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA31147565;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA31147565 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA70205997;     HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA70205997 = HpELGzLueKHONntrGsTCvFSbCQEZyQIlnwrAyotA23727813;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void CEUrrTXlIjwNUUsWZrdsqf800602() {     int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH67326639 = -535492186;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH42827560 = -264958724;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH73783315 = -843964287;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH26762854 = -161042232;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH63636538 = -824461189;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH23812545 = -90093280;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH52547157 = -686439834;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH20862385 = -337278401;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH71239432 = -34484553;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH67246155 = -864134126;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH23972800 = -946805639;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH99613639 = -384390238;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH31181375 = -721222862;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH59594319 = -595894155;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH72861325 = -127075837;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH29755278 = -697100597;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH99780521 = -65302068;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH90198318 = -139725946;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH38660721 = -978831046;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH75323040 = -746237889;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH76769299 = -653165321;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH31298756 = -644841137;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH16339006 = -822831334;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH33079000 = -890197906;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH43661670 = -28969136;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH81364943 = -230062071;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH88617761 = -2423553;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH80583828 = -215070404;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH94068193 = -698335072;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH27858914 = -289223461;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH56162161 = -192769280;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH9067402 = -180875882;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH44544241 = -606276441;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH19553218 = -861968947;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH92820097 = -954500640;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH55537173 = -602977907;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH232618 = 28207504;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH96096468 = -882059092;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH50556338 = -641076754;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH73215710 = -353889975;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH41335160 = -345398341;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH65089440 = -745596899;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH106723 = -614910928;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH45814974 = -85124809;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH17718060 = -428480018;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH97297381 = -196074957;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH78450091 = -623965815;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH80959286 = -161157711;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH93593039 = -21791981;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH45480733 = -884669215;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH86402845 = -71607785;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH68147449 = -339026326;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH25692429 = -397180710;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH21762013 = -871721332;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH24031302 = -215895399;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH36027884 = -890651050;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH26488555 = -442127390;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH40704316 = -953766381;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH83101183 = -32073096;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH82271594 = -494399119;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH35194784 = 12330272;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH71963328 = -371369431;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH26794192 = -638943330;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH43380518 = -745261092;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH11083995 = -571364846;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH14905399 = -665929757;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH55069398 = -778113798;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH11628158 = -859253916;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH66774222 = -641393516;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH17324152 = -524097930;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH29522660 = -625308102;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH3684053 = -183242977;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH39641980 = -498649193;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH65445011 = -524941071;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH33987881 = -300839549;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH11679859 = -907568423;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH31192033 = 70069791;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH70524031 = -637706526;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH15360940 = -361717888;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH46364289 = -832894180;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH2914852 = -606096256;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH7658475 = -841265842;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH86990788 = -93278423;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH48587460 = -813665857;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH41456068 = -117615676;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH88014711 = -853742954;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH83374973 = -783695173;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH22782229 = -734555109;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH95521915 = -546073548;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH56792213 = 36150409;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH29048619 = -60850518;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH59528302 = -18026115;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH12995285 = -749985996;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH68284744 = -46677635;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH38020926 = -266220248;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH69371831 = -974028910;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH38295248 = -6653570;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH56726204 = -869649837;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH34730980 = -513759963;    int xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH2812662 = -535492186;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH67326639 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH42827560;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH42827560 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH73783315;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH73783315 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH26762854;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH26762854 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH63636538;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH63636538 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH23812545;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH23812545 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH52547157;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH52547157 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH20862385;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH20862385 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH71239432;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH71239432 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH67246155;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH67246155 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH23972800;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH23972800 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH99613639;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH99613639 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH31181375;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH31181375 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH59594319;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH59594319 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH72861325;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH72861325 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH29755278;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH29755278 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH99780521;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH99780521 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH90198318;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH90198318 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH38660721;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH38660721 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH75323040;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH75323040 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH76769299;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH76769299 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH31298756;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH31298756 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH16339006;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH16339006 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH33079000;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH33079000 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH43661670;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH43661670 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH81364943;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH81364943 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH88617761;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH88617761 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH80583828;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH80583828 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH94068193;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH94068193 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH27858914;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH27858914 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH56162161;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH56162161 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH9067402;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH9067402 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH44544241;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH44544241 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH19553218;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH19553218 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH92820097;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH92820097 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH55537173;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH55537173 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH232618;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH232618 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH96096468;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH96096468 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH50556338;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH50556338 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH73215710;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH73215710 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH41335160;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH41335160 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH65089440;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH65089440 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH106723;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH106723 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH45814974;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH45814974 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH17718060;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH17718060 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH97297381;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH97297381 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH78450091;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH78450091 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH80959286;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH80959286 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH93593039;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH93593039 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH45480733;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH45480733 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH86402845;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH86402845 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH68147449;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH68147449 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH25692429;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH25692429 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH21762013;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH21762013 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH24031302;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH24031302 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH36027884;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH36027884 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH26488555;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH26488555 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH40704316;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH40704316 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH83101183;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH83101183 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH82271594;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH82271594 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH35194784;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH35194784 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH71963328;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH71963328 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH26794192;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH26794192 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH43380518;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH43380518 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH11083995;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH11083995 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH14905399;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH14905399 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH55069398;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH55069398 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH11628158;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH11628158 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH66774222;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH66774222 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH17324152;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH17324152 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH29522660;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH29522660 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH3684053;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH3684053 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH39641980;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH39641980 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH65445011;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH65445011 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH33987881;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH33987881 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH11679859;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH11679859 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH31192033;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH31192033 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH70524031;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH70524031 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH15360940;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH15360940 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH46364289;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH46364289 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH2914852;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH2914852 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH7658475;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH7658475 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH86990788;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH86990788 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH48587460;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH48587460 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH41456068;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH41456068 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH88014711;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH88014711 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH83374973;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH83374973 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH22782229;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH22782229 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH95521915;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH95521915 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH56792213;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH56792213 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH29048619;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH29048619 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH59528302;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH59528302 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH12995285;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH12995285 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH68284744;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH68284744 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH38020926;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH38020926 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH69371831;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH69371831 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH38295248;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH38295248 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH56726204;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH56726204 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH34730980;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH34730980 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH2812662;     xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH2812662 = xBfkCPyqfsyAStszAJkgvxTFHChZdGVTmXGTLGQH67326639;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void aWhcPSmWzqnyPzDdKfdHGX73648447() {     int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX76921118 = 92620401;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX78976488 = -85762890;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX86113006 = -632387363;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX18908578 = -163788317;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX77139789 = -292057047;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX30191024 = -973211156;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX92042473 = -767291537;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX38991182 = -67534105;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX55737916 = -770568569;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX49430549 = -439594697;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX54347883 = -788216096;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX37857761 = -963281078;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX59899166 = -357815999;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX6429213 = -36340765;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX31462159 = -910280571;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX20150669 = -860672401;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX49704815 = -498421991;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX35616782 = -333329957;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX99209991 = -722446242;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX23258591 = 88347345;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX77147773 = -963802739;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX44362420 = -389740985;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX17750430 = -426865874;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX58721765 = -974766273;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX1750348 = -966780190;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX4923370 = -891731024;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX94513226 = -527103478;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX54545879 = -438693741;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX97022147 = -374445265;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX60354847 = -255064546;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX89429649 = -384761917;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX48013627 = -146049320;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX64989386 = -361709367;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX2148369 = -58023311;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX68346968 = -667539107;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX44834117 = -109575925;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX68849637 = -14484475;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX61936226 = -825327151;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX28402680 = -812953624;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX39009588 = -255128845;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX96516890 = -561045912;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX31593036 = -798986338;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX31056805 = 61861678;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX59862454 = -398280658;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX89710888 = -818112937;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX72197502 = -117030283;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX40863262 = -86141637;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX71501575 = -371101279;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX62647285 = -471670566;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX15659482 = -2677897;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX90203938 = -852354761;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX28369417 = -680806019;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX44970030 = -885142666;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX47599103 = -989870250;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX96500673 = -119054306;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX32558698 = -517638614;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX61226059 = -658897016;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX27391241 = -657621090;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX17158230 = -197008128;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX72216419 = -400326024;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX35677797 = -346107678;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX37496595 = -228597797;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX41969034 = -693088840;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX95383068 = -415504023;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX60000900 = 45167219;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX6334257 = -542166777;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX72868375 = -501571712;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX57750797 = -199792689;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX38082245 = -368801659;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX86628041 = -700704646;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX51301031 = -746187926;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX87768589 = -673094840;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX7214103 = -520376333;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX60200403 = -367317398;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX26741701 = -350606743;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX45554737 = -64816402;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX13305616 = -351602664;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX57887975 = 71414784;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX69010877 = -56653337;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX29552845 = -749749907;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX64060108 = -705589387;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX23011651 = -56002200;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX91898593 = -967023175;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX81362666 = -271767369;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX70150909 = -402709786;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX61060232 = -703955899;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX3043597 = -260906655;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX17390283 = -371839117;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX5647696 = -938969006;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX35788270 = -49900493;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX83608058 = -450678910;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX41458397 = -356863386;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX44777996 = -528319024;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX56186260 = -312627601;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX3331792 = -909021167;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX59020295 = -232448116;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX89624002 = -5897498;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX35673736 = -522634299;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX99861554 = -343447878;    int LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX83376632 = 92620401;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX76921118 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX78976488;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX78976488 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX86113006;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX86113006 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX18908578;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX18908578 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX77139789;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX77139789 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX30191024;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX30191024 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX92042473;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX92042473 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX38991182;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX38991182 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX55737916;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX55737916 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX49430549;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX49430549 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX54347883;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX54347883 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX37857761;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX37857761 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX59899166;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX59899166 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX6429213;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX6429213 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX31462159;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX31462159 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX20150669;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX20150669 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX49704815;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX49704815 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX35616782;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX35616782 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX99209991;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX99209991 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX23258591;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX23258591 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX77147773;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX77147773 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX44362420;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX44362420 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX17750430;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX17750430 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX58721765;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX58721765 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX1750348;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX1750348 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX4923370;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX4923370 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX94513226;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX94513226 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX54545879;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX54545879 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX97022147;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX97022147 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX60354847;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX60354847 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX89429649;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX89429649 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX48013627;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX48013627 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX64989386;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX64989386 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX2148369;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX2148369 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX68346968;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX68346968 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX44834117;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX44834117 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX68849637;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX68849637 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX61936226;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX61936226 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX28402680;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX28402680 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX39009588;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX39009588 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX96516890;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX96516890 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX31593036;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX31593036 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX31056805;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX31056805 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX59862454;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX59862454 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX89710888;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX89710888 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX72197502;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX72197502 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX40863262;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX40863262 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX71501575;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX71501575 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX62647285;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX62647285 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX15659482;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX15659482 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX90203938;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX90203938 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX28369417;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX28369417 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX44970030;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX44970030 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX47599103;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX47599103 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX96500673;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX96500673 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX32558698;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX32558698 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX61226059;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX61226059 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX27391241;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX27391241 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX17158230;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX17158230 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX72216419;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX72216419 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX35677797;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX35677797 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX37496595;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX37496595 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX41969034;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX41969034 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX95383068;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX95383068 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX60000900;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX60000900 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX6334257;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX6334257 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX72868375;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX72868375 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX57750797;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX57750797 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX38082245;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX38082245 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX86628041;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX86628041 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX51301031;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX51301031 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX87768589;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX87768589 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX7214103;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX7214103 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX60200403;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX60200403 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX26741701;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX26741701 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX45554737;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX45554737 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX13305616;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX13305616 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX57887975;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX57887975 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX69010877;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX69010877 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX29552845;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX29552845 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX64060108;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX64060108 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX23011651;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX23011651 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX91898593;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX91898593 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX81362666;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX81362666 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX70150909;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX70150909 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX61060232;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX61060232 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX3043597;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX3043597 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX17390283;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX17390283 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX5647696;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX5647696 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX35788270;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX35788270 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX83608058;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX83608058 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX41458397;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX41458397 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX44777996;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX44777996 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX56186260;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX56186260 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX3331792;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX3331792 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX59020295;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX59020295 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX89624002;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX89624002 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX35673736;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX35673736 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX99861554;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX99861554 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX83376632;     LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX83376632 = LMAgLOCVHoAWNJmkwbgUJolPGBlHpdSfsDLVciGX76921118;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void vFxYNIgmchSWvXcMbRxrMs69831607() {     int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf36517215 = -136135976;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf80482338 = -995918275;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23114394 = -706528285;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf14784336 = 63600806;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf88433015 = -192564074;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf27868144 = -831470829;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf89400956 = -97009123;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf89816465 = -421745481;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf69551360 = -203241069;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf32455064 = -380853551;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf79642814 = -89758536;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf72528962 = 41697673;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf30653730 = -263994517;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf64803051 = 59500887;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf28769964 = -602807092;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf16904923 = -666045292;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf85665918 = -426638271;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf285113 = -702666061;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf79652194 = -861565872;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf3175700 = -574061308;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf57608892 = -796823564;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf12852019 = -282142863;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf9942255 = -191160953;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23452005 = -539104510;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf77728352 = -422917780;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf99338276 = 73651505;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf7853298 = -976583476;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf19657048 = 39924669;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf46806491 = -164037881;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf98828314 = -302047789;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf14343968 = 70018755;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf90778886 = -563267317;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf14071425 = -341656239;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf84672811 = -659907242;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf73284329 = -315749092;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23424014 = -421232507;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf59481315 = -307263109;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf60296564 = -769779541;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf47420623 = -531660141;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf11835243 = -529009793;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf54734704 = 70292492;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf1672218 = -803927756;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf71936047 = -771583151;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf34101959 = -822195397;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf90699204 = -264431006;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf36990631 = -359974442;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf46351984 = 22002695;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf18197970 = -703854507;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf2036933 = -755608186;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf30826874 = -323930358;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf40690189 = -638462985;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf34954570 = -652049274;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf20385545 = -25091119;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf20873627 = -150039205;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf12222716 = -82988393;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23665196 = -853993114;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf70540084 = -704757323;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf99662389 = -67423776;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf37055984 = -513481415;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf89094738 = -166215580;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf20014847 = -854887354;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf69743908 = -36933793;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf43009975 = -157707601;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf70723046 = -901193280;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf18111097 = -350872306;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf88863927 = -526491219;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf58457538 = -616646089;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf45980918 = -604087276;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf91518722 = -624750021;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf5345951 = -81574585;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf57423608 = -258782183;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf25369355 = -656858731;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf52864490 = -71005921;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf67816952 = -232556080;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf48440996 = -544353800;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf55936675 = -992895808;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf40915972 = -510559712;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf75840295 = -368965556;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf32752800 = -174673505;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf40737721 = 37056662;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf52986293 = -948351191;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf89655327 = -172728969;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf17620115 = -204467145;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf15979617 = -840107523;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf58138125 = -663584804;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf79389397 = -277931971;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf70393342 = -438176198;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf93197798 = -91617035;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf72450096 = -476918850;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf49619133 = -461755979;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf52883930 = -716475185;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf59818925 = -139839334;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23240580 = -156298126;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf58325884 = -265444562;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf91820395 = -674122439;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf84990795 = -892773716;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf58662242 = -546220156;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf1213001 = -870389871;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf15990863 = -371323091;    int HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf1835277 = -136135976;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf36517215 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf80482338;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf80482338 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23114394;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23114394 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf14784336;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf14784336 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf88433015;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf88433015 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf27868144;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf27868144 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf89400956;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf89400956 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf89816465;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf89816465 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf69551360;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf69551360 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf32455064;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf32455064 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf79642814;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf79642814 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf72528962;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf72528962 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf30653730;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf30653730 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf64803051;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf64803051 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf28769964;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf28769964 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf16904923;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf16904923 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf85665918;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf85665918 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf285113;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf285113 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf79652194;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf79652194 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf3175700;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf3175700 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf57608892;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf57608892 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf12852019;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf12852019 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf9942255;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf9942255 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23452005;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23452005 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf77728352;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf77728352 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf99338276;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf99338276 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf7853298;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf7853298 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf19657048;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf19657048 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf46806491;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf46806491 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf98828314;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf98828314 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf14343968;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf14343968 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf90778886;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf90778886 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf14071425;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf14071425 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf84672811;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf84672811 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf73284329;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf73284329 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23424014;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23424014 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf59481315;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf59481315 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf60296564;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf60296564 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf47420623;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf47420623 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf11835243;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf11835243 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf54734704;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf54734704 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf1672218;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf1672218 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf71936047;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf71936047 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf34101959;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf34101959 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf90699204;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf90699204 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf36990631;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf36990631 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf46351984;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf46351984 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf18197970;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf18197970 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf2036933;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf2036933 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf30826874;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf30826874 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf40690189;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf40690189 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf34954570;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf34954570 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf20385545;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf20385545 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf20873627;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf20873627 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf12222716;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf12222716 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23665196;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23665196 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf70540084;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf70540084 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf99662389;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf99662389 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf37055984;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf37055984 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf89094738;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf89094738 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf20014847;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf20014847 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf69743908;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf69743908 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf43009975;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf43009975 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf70723046;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf70723046 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf18111097;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf18111097 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf88863927;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf88863927 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf58457538;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf58457538 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf45980918;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf45980918 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf91518722;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf91518722 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf5345951;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf5345951 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf57423608;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf57423608 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf25369355;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf25369355 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf52864490;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf52864490 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf67816952;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf67816952 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf48440996;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf48440996 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf55936675;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf55936675 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf40915972;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf40915972 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf75840295;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf75840295 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf32752800;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf32752800 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf40737721;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf40737721 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf52986293;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf52986293 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf89655327;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf89655327 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf17620115;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf17620115 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf15979617;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf15979617 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf58138125;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf58138125 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf79389397;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf79389397 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf70393342;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf70393342 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf93197798;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf93197798 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf72450096;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf72450096 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf49619133;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf49619133 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf52883930;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf52883930 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf59818925;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf59818925 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23240580;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf23240580 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf58325884;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf58325884 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf91820395;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf91820395 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf84990795;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf84990795 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf58662242;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf58662242 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf1213001;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf1213001 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf15990863;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf15990863 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf1835277;     HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf1835277 = HlshMAMEraKoFpQsTaDeWbgodaykkLwkTCyMffwf36517215;}
// Junk Finished
